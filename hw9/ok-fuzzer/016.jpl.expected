global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: dq 302
const1: dq 436
const2: db `Error: mod by zero`, 0
const3: dq 361
const4: dq 751
const5: db `Error: divide by zero`, 0
const6: dq 726
const7: dq 572
const8: dq 245
const9: dq 351
const10: db `(IntType)`, 0
section .text
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
mov rax, [rel const0]
push rax
mov rax, [rel const1]
push rax
pop rax
pop r10
cmp r10, 0
jne .jump1
lea rdi, [rel const2]
sub rsp, 8
call _fail_assertion
add rsp, 8
.jump1:
cqo
idiv r10
mov rax, rdx
push rax
mov rax, [rel const3]
push rax
mov rax, [rel const4]
push rax
pop rax
pop r10
cmp r10, 0
jne .jump2
lea rdi, [rel const5]
call _fail_assertion
.jump2:
cqo
idiv r10
push rax
pop rax
pop r10
cmp r10, 0
jne .jump3
lea rdi, [rel const5]
sub rsp, 8
call _fail_assertion
add rsp, 8
.jump3:
cqo
idiv r10
push rax
mov rax, [rel const6]
push rax
pop rax
pop r10
add rax, r10
push rax
mov rax, [rel const7]
push rax
mov rax, [rel const8]
push rax
mov rax, [rel const9]
push rax
pop rax
pop r10
imul rax, r10
push rax
pop rax
pop r10
imul rax, r10
push rax
pop rax
pop r10
add rax, r10
push rax
pop rax
neg rax
push rax
lea rdi, [rel const10]
lea rsi, [rsp]
call _show
add rsp, 8
add rsp, 0
pop r12
pop rbp
ret
