global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float

section .data
const0: dq 216
const1: dq 770
const2: db `divide by zero`, 0
const3: dq 420
const4: dq 88.22
const5: dq 0.93
const6: dq 49.7
const7: dq 21.29
const8: dq 81.65
const9: dq 484
const10: dq 922
const11: dq 70.4
const12: dq 44.51
const13: db `(TupleType (FloatType) (FloatType) (ArrayType (IntType) 1))`, 0

section .text
jpl_main:
_jpl_main:
	push rbp
	mov rbp, rsp
	push r12
	mov r12, rbp
	sub rsp, 8 ; Align stack
	mov rax, [rel const0] ; 216
	push rax
	pop rax
	neg rax
	push rax
	mov rax, [rel const1] ; 770
	push rax
	pop rax
	pop r10
	cmp r10, 0
	jne .jump1
	lea rdi, [rel const2] ; divide by zero
	call _fail_assertion
.jump1:
	cqo
	idiv r10
	push rax
	mov rax, [rel const3] ; 420
	push rax
	mov rdi, 16
	call _jpl_alloc
	; Moving 16 bytes from rsp to rax
		mov r10, [rsp + 8]
		mov [rax + 8], r10
		mov r10, [rsp + 0]
		mov [rax + 0], r10
	add rsp, 16
	push rax
	mov rax, 2
	push rax
	mov rax, [rel const4] ; 88.22
	push rax
	mov rax, [rel const5] ; 0.93
	push rax
	mov rax, [rel const6] ; 49.7
	push rax
	mov rax, [rel const7] ; 21.29
	push rax
	mov rdi, 24
	call _jpl_alloc
	; Moving 24 bytes from rsp to rax
		mov r10, [rsp + 16]
		mov [rax + 16], r10
		mov r10, [rsp + 8]
		mov [rax + 8], r10
		mov r10, [rsp + 0]
		mov [rax + 0], r10
	add rsp, 24
	push rax
	mov rax, 3
	push rax
	mov rax, [rel const8] ; 81.65
	push rax
	mov rax, [rel const9] ; 484
	push rax
	mov rax, [rel const10] ; 922
	push rax
	pop rax
	pop r10
	imul rax, r10
	push rax
	; Moving 8 bytes from rsp + 8 to rsp + 24
		mov r10, [rsp + 8 + 0]
		mov [rsp + 24 + 0], r10
	add rsp, 24
	movsd xmm0, [rsp]
	add rsp, 8
	movsd xmm1, [rsp]
	add rsp, 8
	divsd xmm0, xmm1
	sub rsp, 8
	movsd [rsp], xmm0
	mov rax, [rel const11] ; 70.4
	push rax
	movsd xmm1, [rsp]
	add rsp, 8
	pxor xmm0, xmm0
	subsd xmm0, xmm1
	sub rsp, 8
	movsd [rsp], xmm0
	mov rax, [rel const12] ; 44.51
	push rax
	movsd xmm0, [rsp]
	add rsp, 8
	movsd xmm1, [rsp]
	add rsp, 8
	mulsd xmm0, xmm1
	sub rsp, 8
	movsd [rsp], xmm0
	lea rdi, [rel const13] ; (TupleType (FloatType) (FloatType) (ArrayType (IntType) 1))
	lea rsi, [rsp]
	call _show
	add rsp, 32
	add rsp, 8 ; Remove alignment
	pop r12
	pop rbp
	ret
