show sum[i : 10] 1

show sum[i : 10] 1.0

show sum[i : 10] i

show sum[i : to_int(exp(2.2))] sin(to_float(i))

show sum[i : -1] sin(to_float(i))

show sum[i : 0] sin(to_float(i))

show sum[i : 10, j : 10] 1

show sum[i : 10, j : 10] 10 * i + j

show sum[i : 10, j : 10] pow(to_float(i) + 1.0, to_float(j))

show sum[i : 10, j : 0] 1

show sum[i : 0, j : 10] 1

show sum[i : 65536, j : 65536] i * j

// This should actually work. For `sum` loops we don't need to
// multiply the bounds.
show sum[i : 65536, j : 65536, k : 65536, l : 65536] i + j + k + l

show sum[i : 65537, j : 65537, k : 65537, l : 65537] i + j + k + l
