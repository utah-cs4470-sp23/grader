fn a(b : bool[,,]) : float[] {
  let {} = (if true then (if ((! false) == b[argnum, argnum, argnum]) then {(true || true), {}, (argnum < 835)} else {false, {}, false}){1} else (if (if (! b[960, 704, argnum]) then (true && false) else (! true)) then (if ((if false then 258 else argnum) <= (- argnum)) then (array[c : 909, d : argnum] {})[673, 966] else {}) else (if (true != (argnum != argnum)) then (if false then {} else {}) else {{}, 331}{0})))
  let c = (! (array[c : (sum[c : argnum, d : argnum, e : argnum] argnum), d : (argnum - argnum)] {b, true, true})[{argnum, 307}{1}, (sum[c : (if false then 804 else argnum), d : (- argnum), e : (argnum % argnum)] e)]{1})
  let {d[e, f], g, h} = {{(array[d : argnum, e : 567] argnum), (250 + (if false then 901 else 556)), c}, (if c then b else b)[(if (argnum < argnum) then 897 else (- argnum)), (sum[d : (- argnum)] argnum), 196]}{0}
  let {} = {}
  return [acos(exp(sqrt(to_float(f))))]
}

let b[c, d] = (array[b : (- (sum[b : (argnum + argnum), c : (- argnum)] b))] (if (! false) then (array[c : b, d : 120] c) else (array[c : argnum, d : 152] (sum[e : b] b))))[(if (24.11 != tan(46.48)) then argnum else to_int(cos(28.44)))]
let {e} = {argnum}
let {} = (if (! (if false then (true || (! false)) else (e < 686))) then (array[f : (sum[f : e, g : c, h : e] c), g : 855, h : c] {{}})[(sum[f : 516, g : (if false then c else d), h : argnum] argnum), (sum[f : 944, g : (- argnum)] (g % f)), d]{0} else (array[f : e, g : (- d)] {{}})[c, (b[e, d] - c)]{0})
let {f, {}, g} = {(array[f : (- argnum), g : argnum] {e, {}, d})[(e % 716), 36]}{0}
let h = ((sum[h : f, i : (argnum % (- args[192])), j : 78] (to_int(pow(24.83, 3.39)) - (- g))) == argnum)
let {i[j, k]} = {asin(sqrt(cos(58.1))), {(array[i : (- argnum), j : (g - argnum)] asin(39.08))}, argnum}{1}
let {l, m, n[o, p, q]} = (if h then {to_int(sqrt((if h then 62.95 else 11.59))), h, (array[l : d, m : d, n : 517] atan(31.38))} else (if (if true then true else ((- 693) <= argnum)) then {(- (- j)), (g >= 887), (array[l : (- 126), m : (if h then 319 else k), n : g] to_float(argnum))} else {(if (if false then h else h) then k else g), true, (array[l : 943, m : k, n : k] 29.16)}))
fn r({ s : {}, {  } }, { { {  }, { { {  } }, { t[u, v, w] : float[,,], { x : {{}[,,]}, y[z, A] : {}[,] } }, B[C, D, E] : {int,int,float}[,,] }, F : float[][] }, G[H, I] : bool[,], J[K, L] : bool[][,] }, M[N, O, P] : float[,][,,]) : float {
  let Q = F
  let R = y
  return tan((cos(log(sin(68.52))) % sqrt(atan2(log(16.75), atan(42.64)))))
  let S = o
  return (if G[c, u] then asin(atan2(acos(cos(88.82)), sin(to_float(A)))) else atan2([to_float(z), t[A, c, I]][D], atan(acos(atan(2.46)))))
}

assert (if (! (if true then h else (895 > q))) then (array[s : 604, t : d] {m})[d, (- argnum)] else {((if m then o else g) == l)}){0}, "s"
let {s, t[u], v[w, x]} = (array[s : o, t : c] (array[u : f, v : e, w : (p + s)] {d, args, i}))[g, d][e, (sum[s : j, t : argnum, u : q] argnum), j]
let y[z] = (array[y : p, z : o] args)[l, q]
