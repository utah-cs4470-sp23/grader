type a = bool
read image "b.png" to b

fn c({ { { d[e, f, g] : a[,,], { h[i, j, k] : float[,,], l[m, n] : bool[,], o[p, q] : bool[,] }, r : {{a,bool,float},bool,float} }, { s[t, u, v] : {}[,,], w : {{int},float,int}, x : a }, y[z] : a[][] }, A : a }, B[C, D] : int[,], { { E : a, { F[G] : bool[], { H : float } }, { I : bool, J[K] : {float}[] } }, { L[M, N] : float[,], O[P, Q, R] : float[,,], {  } } }) : float {
  return sin(atan2(sin(exp(log(47.07))), ((sum[S : (- e), T : z] to_float(u)) + (if true then atan(H) else asin(H)))))
  let {S} = {E}
  let {T[U], {}} = (if (! (if S then l else l)[i, C]) then (if ((array[T : t, U : D, V : i] I)[k, p, i] || S) then (array[T : N, U : u, V : g] {y, {}})[C, m, q] else {(array[T : M, U : G] y)[G, i], {}}) else (if (if I then {false} else {I}){0} then {y, (array[T : e] {})[n]} else {(if I then [F] else y), (array[T : v] {})[Q]}))
  let V = I
  return to_float(u)
}

let {{d, e, f[g, h, i]}, {j}} = (array[d : (array[d : argnum, e : (- argnum)] (d - e))[argnum, {argnum, args}{0}], e : 258] {{b, (sum[f : d] 75.84), (array[f : d, g : d, h : argnum] 56)}, {argnum}})[{(- 971), (173 % to_int(35.05)), (if (false && true) then sqrt(68.35) else acos(4.3))}{1}, to_int(atan(52.39))]
let k[l, m, n] = (array[k : argnum, l : (i * i), m : argnum] e)
fn o() : a {
  let {p} = (if (if ((! o()) && ((o() || true) || false)) then (o() != (log(46.46) != tan(e))) else (! true)) then {l} else {(if (738 == l) then {l} else {g}), args}{0})
  let {} = (if ((- pow(sqrt(5.02), sqrt(49.8))) <= atan(atan(e))) then (if (! {88, j, o()}{2}) then {} else [{}, {}, {}][m]) else {{{}, b}}{0}{0})
  let q = f
  let r = p
  return ((543 == [args, args, args][(p + l)][m]) || false)
}

fn p(q[r, s] : {bool,float,bool}[,], t[u] : float[][], v : {{}}) : float {
  return asin(tan((array[w : m] (sum[x : r, y : g, z : l] 90.32))[r]))
  let w = exp(asin(log(atan2(exp(7.52), (sum[w : g, x : s, y : i] e)))))
  let x = atan(e)
  let y[z] = [[(sum[y : n, z : j, A : args[h]] cos(w)), 9.7]][g]
  return asin(asin((sum[A : to_int(acos(e))] (atan(e) * w))))
}

fn q({ r[s] : bool[,,][] }) : float {
  let {{{}}} = {(array[t : h, u : (- m)] {(if false then {} else {})})[to_int(exp(e)), m]}
  let {t} = (array[t : l] {{s}})[{args, b, d}{0}[m]]{0}
  let {u, v, {{}, w[x]}} = (if (if false then (array[u : (if o() then j else m), v : argnum, w : (- argnum)] true) else (array[u : s, v : (- 337), w : (if o() then j else m)] (! true)))[(sum[u : (sum[u : 386, v : g, w : (sum[u : g, v : n, w : s] n)] 211)] t), l, m] then {l, argnum, {{{}, args}}{0}} else {i, (sum[u : 287, v : h] t), {(if o() then {} else {}), (if o() then (array[u : n] n) else [h, i, s])}})
  assert (u == i), "y"
  return p((array[y : t, z : (- g), A : argnum] (array[B : n, C : x] {o(), 22.62, false}))[l, m, u], (array[y : g, z : (if (! o()) then v else argnum), A : i] (array[B : (- t)] (array[C : z] e)))[m, x, m], (array[y : (- s), z : l, A : x] (if (u <= v) then {{}} else {{}}))[(if (false != false) then j else l), (- argnum), (- (sum[y : argnum, z : to_int(0.83)] y))])
}

let r = b
fn s(t[u] : int[,,][], v[w, x, y] : bool[,,], { z[A] : int[] }) : float {
  let {B, C[D, E], F[G, H, I]} = [{A, (array[B : i, C : l] (! false)), v}][g]
  let J = n
  let {K[L, M], {N, {{{}}, O}, {{{{}, P[Q, R]}}, S[T]}}, U[V, W]} = {(if (if (! o()) then {b, true, 60.29} else {r, true, 4.45}){1} then d else (array[K : G, L : argnum] d[i, (argnum + K)])), {G, {(if (! true) then {{}} else {{}}), [t, (if false then t else t)]}, {{{{}, b}}, t}}, r}
  let X = B
  return log(asin(51.29))
}

fn t({ u[v] : a[], { w : bool, x : int } }, {  }, y : float[,,]) : float {
  let {} = {}
  let {} = (if (((if w then true else (! w)) || o()) || ((argnum <= argnum) || (if (w || true) then false else false))) then (if (if true then false else (to_float(g) >= sin(e))) then (array[z : i, A : g] (if o() then {} else {}))[(if (! true) then g else n), (array[z : j] 728)[(if w then i else n)]] else (if (if true then (false || w) else w) then {} else (if (w != w) then (if true then {} else {}) else (if true then {} else {})))) else (array[z : g, A : (- (j % v)), B : i] {})[v, v, g])
  let z = args
  let {A[B, C, D], E} = (array[A : to_int(acos(82.04)), B : (if (if (o() && w) then u[argnum] else (false && true)) then n else m), C : (if w then f[747, (sum[A : m, B : v] g), n] else (sum[A : l, B : 87, C : (l * h)] 95))] {{n, args, f}{2}, v})[(- {x}{0}), (sum[A : x] (v / {argnum, g, i}{2})), z[354]]
  return acos(10.2)
}

let u = atan2((- (- log(to_float(g)))), atan(t({[true, o()], {true, 167}}, {}, k)))
