let a[b] = (array[a : to_int(pow(tan(89.19), to_float(args[argnum])))] exp(78.22))
fn c(d : {int,{bool,bool,int},{}[,,]}, e : int, f : {int[],bool[,,],int[]}) : {int[,,],{int}} {
  let {} = (if (((if false then true else false) || (! true)) == (to_int(46.12) >= (sum[g : b] e))) then (if (exp(8.34) != 13.39) then {{}} else (if (false == false) then {{}} else {{}})) else {{{}}}{0}){0}
  return (array[g : b, h : {argnum}{0}, i : e] (if (! (! true)) then {(array[j : g, k : h, l : 669] h), {62}} else {(array[j : b, k : g, l : argnum] argnum), {h}}))[(- {687}{0}), (b % e), (sum[g : e, h : to_int(sin(cos(97.64))), i : (if true then (array[g : 172, h : argnum, i : b] argnum) else (array[g : b, h : argnum, i : b] b))[b, (817 - b), b]] b)]
  let g = b
  return {(array[h : (g + b), i : g, j : e] (if false then (array[k : e, l : i, m : argnum] argnum) else (array[k : j, l : argnum, m : h] j)))[222, {(argnum * e)}{0}, (if (false == false) then {555}{0} else (if (! true) then (- 503) else (- g)))], (if (! (1.69 == a[b])) then {g} else {argnum})}
  return c({133, (if (! (! true)) then {false, true, (sum[h : e, i : b, j : 374] b)} else d{1}), (if (a[g] != sqrt(94.65)) then (array[h : (- e), i : g, j : b] {}) else (if (e <= b) then (array[h : b, i : g, j : e] {}) else (array[h : 788, i : e, j : b] {})))}, g, (if (sqrt(11.09) > 69.86) then (array[h : b, i : e, j : (sum[h : 870] 271)] f) else (array[h : (sum[h : b, i : argnum, j : argnum] g), i : (- argnum), j : (sum[h : 540, i : argnum, j : argnum] b)] (if true then f else f)))[argnum, b, e])
}

let {} = (if (if (array[d : argnum, e : argnum] true)[455, argnum] then (if true then (array[d : b, e : b, f : b] true) else (array[d : 160, e : 885, f : b] false)) else (array[d : (argnum - b), e : (if false then b else b), f : argnum] true))[to_int(sin(log(64.18))), (array[d : (494 % b)] b)[613], ((array[d : argnum, e : 980, f : b] e)[223, args[782], args[600]] + b)] then (array[d : (argnum + b), e : b] {{}})[922, (if true then b else argnum)]{0} else (if (asin(log(60.82)) > a[argnum]) then {{}}{0} else (if (acos(80.75) >= cos(40.43)) then {{}, 821}{0} else {b, {}, a}{1})))
fn d() : bool[][,] {
  assert ({{true, false, true}}{0}{2} && (if ((to_int(61.61) - b) != 213) then (false || (true || (true && true))) else (array[e : (- argnum), f : (argnum + 860)] false)[272, (sum[e : (- 706)] b)])), "e"
  let e = b
  assert ((if (array[f : to_int(63.66)] (! true))[((sum[f : argnum] argnum) % e)] then (sin(80.01) != 37.57) else false) || (! true)), "f"
  assert (true && ((sqrt(tan(59.0)) / cos(to_float(argnum))) < (- (- atan(24.08))))), "f"
  return [(if (array[f : argnum, g : argnum] false)[(argnum % argnum), b] then d() else (array[f : 868] d())[(sum[f : argnum, g : e] 467)]), (array[f : e, g : 987, h : e] d())[argnum, (e % e), (if true then 96 else argnum)], (array[f : (argnum * b), g : ((if true then argnum else 23) + 515)] [false, (argnum != argnum)])][e]
}

time let {e} = (if true then {argnum, {d()}} else {argnum, {d()}}){1}
let f[g, h, i] = (array[f : {argnum, 261}{1}, g : b] (array[h : g, i : f, j : (f / g)] (array[k : i, l : g, m : argnum] h)))[to_int((if false then to_float(b) else sqrt(80.81))), (- 475)][argnum, (array[f : 690, g : argnum] (array[h : argnum, i : g, j : argnum] g))[b, (sum[f : (sum[f : 242, g : b, h : b] f)] argnum)][(if (array[f : b] true)[(if false then 936 else b)] then ((sum[f : 476] f) * (- 173)) else ((argnum + argnum) % (- argnum))), (array[f : (- b)] (- f))[(sum[f : argnum, g : b, h : (799 % b)] (if true then 93 else h))], (- to_int(acos(60.26)))], (sum[f : [to_int(6.02)][489], g : ({argnum}{0} / (sum[f : argnum, g : 609, h : 401] h))] (if (f >= (- b)) then f else 576))]
let j = atan(atan2(cos(asin(log(25.82))), acos(acos(log(66.89)))))
let k[l, m, n] = f
fn o() : int {
  let {p[q, r, s]} = {{[k, k], (array[p : to_int(j), q : (431 * g), r : g] f)}{1}}
  let t[u, v] = (if (if {(true && false)}{0} then ((- tan(j)) > cos(cos(64.96))) else (! ((i == r) && true))) then {{d()}}{0}{0} else e)
  let {} = (if ((s == 14) && true) then {n, (array[w : 364] {})[(sum[w : u, x : n] b)], i} else {{q, {}, o()}, [argnum], (false || false)}{0}){1}
  return i
  return ({sin(exp(j)), argnum, to_int(54.94)}{2} / argnum)
}

let p[q] = (if {(array[p : b, q : l, r : b] false), to_float(l), a}{0}[(sum[p : (sum[p : h, q : i] (if true then q else p))] to_int(45.14)), i, (sum[p : {argnum, j, h}{0}] (- (- n)))] then [m] else (array[p : (sum[p : m] m), q : i] {q, argnum, args})[l, n]{2})
let r = d()
fn s(t : int) : bool {
  let u = cos(70.44)
  let v = r
  let w = v
  let {x[y, z], A[B, C, D], E} = {(array[x : (sum[x : to_int(exp(j))] h), y : n] q), (array[x : {n, w, b}{2}] (array[y : x, z : n, A : m] to_int(u)))[q], v}
  return ([((false && false) && (b == n))][b] && s(h))
}

