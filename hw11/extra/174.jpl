show argnum

fn a(b[c] : {}[], d : bool, e : float) : float {
  let f = (array[f : (- c), g : {args[333], 760}{0}] acos(sqrt(e)))
  let g[h] = {args, (true && ((if d then d else true) || d)), a((if d then [{}, {}] else [{}]), {false}{0}, e)}{0}
  assert d, "i"
  let {i} = {f}
  return atan2(asin({h, false, a(b, true, 65.03)}{2}), tan(sqrt(asin(44.89))))
}

write image (array[b : (- (- 618)), c : (to_int(sin(33.94)) * (- argnum)), d : argnum] (array[e : b, f : (- c)] {to_float(argnum), 70.0, log(82.23), log(98.03)}))[814, (array[b : 228, c : 976] (array[d : 393, e : argnum] 627))[(sum[b : 879, c : (sum[b : argnum] b)] c), (if (true && false) then 30 else (argnum % 702))][to_int(exp((- 48.48))), (sum[b : {198}{0}, c : (- (- 404)), d : 659] d)], {asin(tan(90.32)), (if (516 != argnum) then argnum else 466), sin(sin(97.26))}{1}] to "b.png"

fn b({ c : int, d[e] : float[] }, { { f[g, h] : float[,], i[j] : {int,float,float}[], {  } } }) : int {
  let k = args
  let l = (! false)
  let m = sin(atan(acos(atan(to_float(384)))))
  let n[o, p, q] = (array[n : e, o : g, p : e] g)
  return (h * e)
}

fn c({  }, d : int[,][], e[f, g, h] : {{},{},bool}[,,]) : float {
  let i[j, k] = {(array[i : argnum, j : 605] d), 164}{0}[(if (false && false) then f else (sum[i : g, j : 487] i)), to_int(sqrt(asin(70.15)))][to_int(c({g, {}}{1}, (array[i : (225 - f)] (array[j : 343, k : g] k)), {e, e, argnum}{0}))]
  let l = ((if (atan2(log(51.65), atan(41.47)) < atan(cos(60.62))) then (false && ((sum[l : f, m : argnum, n : j] 74.35) == exp(31.57))) else false) && (j <= argnum))
  let m[n, o] = (if {false}{0} then (array[m : 535, n : k, o : to_int(35.18)] (array[p : k, q : h, r : o] i)) else (array[m : f, n : f, o : 803] (array[p : f, q : m, r : g] i)))[h, (if l then (array[m : k] argnum) else [argnum])[(argnum % argnum)], h][g, (- (if false then h else (f * (k + g)))), argnum]
  let p = [atan(atan(sin(sqrt(96.96)))), 55.03, (if (array[p : o] true)[(if l then argnum else argnum)] then (array[p : (o % g), q : m[h, k]] to_float(j)) else (array[p : f, q : argnum] sqrt(29.8)))[argnum, g]]
  return acos(exp(to_float(n)))
}

let d[e, f] = {(if (true || (! true)) then (array[d : argnum, e : (- 371)] d) else (array[d : to_int(97.65), e : (- argnum)] 300)), exp((array[d : argnum, e : argnum, f : 173] 60.78)[389, argnum, (argnum + argnum)])}{0}
fn g({ h : int, i : {bool,{},bool} }, { j[k, l] : bool[][,] }, m : bool) : float[,,] {
  return g({[759][(sum[n : (350 * k), o : f, p : (l / l)] p)], {(m || (argnum != e)), {}, (if m then (true && m) else (f > argnum))}}, (if (if m then {false, true, j} else {true, true, j}){1} then {{j}, {80.91}}{0} else {{j}, log(85.54), (h > k)}{0}), {259, (array[n : e] m)[args[f]], 28.7}{1})
  assert (if (l <= {k, argnum}{0}) then ((if true then (m && (! true)) else {m}{0}) != m) else m), "n"
  let {{}, n[o, p]} = {{{{}}{0}, j}, m, (if (true || (! false)) then i else i)}{0}
  assert (! ((! (array[q : p] false)[(sum[q : k, r : k] e)]) || (if false then (array[q : p, r : argnum, s : f] m) else (array[q : h, r : argnum, s : 341] false))[k, f, f])), "q"
  return {(array[q : to_int(31.88), r : l, s : 104] (array[t : k, u : 952, v : p] 10.99))}{0}[(array[q : k, r : 88] {o, e})[k, d[l, l]]{0}, to_int(atan((sum[q : k, r : h] tan(78.89)))), o]
}

let h[i, j, k] = (array[h : (- e), i : f] (array[j : i, k : f] (array[l : h, m : f, n : e] 526)))[(if (atan2(60.76, 16.02) <= (sum[h : 875, i : e] 88.1)) then (argnum % (- argnum)) else 283), (sum[h : (if true then args else args)[630], i : (array[h : f, i : e, j : 48] 244)[(- e), (- f), f], j : (if (true || false) then f else f)] j)][(if (! (f == 606)) then (if (! true) then (array[h : 823, i : argnum, j : 863] argnum) else (array[h : argnum, i : f, j : argnum] e)) else (array[h : (- e), i : (- e), j : (sum[h : argnum] 620)] 295))[(sum[h : e, i : (sum[h : argnum] 308)] to_int(atan(51.04))), f, e], (array[h : e, i : f, j : f] h)[{argnum, [66.64], args}{0}, (sum[h : (- e), i : (if (false && false) then argnum else to_int(70.5))] (sum[j : 691, k : h] (- k))), f]]
let {l[m], {}} = (if {{e, false}}{0}{1} then (array[l : to_int(48.8), m : i] {args, {}})[argnum, {(956 + k), (sum[l : i] k)}{1}] else {(if (j < i) then {k, args} else {j, args}){1}, (if (i == e) then {{}} else {{}}){0}})
assert false, "n"
fn n() : int[,,] {
  let o[p, q] = (if (58.62 == atan((- cos(81.48)))) then (if false then {k, d, to_int(80.08)} else {i, d, argnum}){1} else (if (! [true, false][e]) then (if ((! false) && true) then [d, d][(sum[o : 844, p : f, q : k] o)] else d) else (array[o : to_int(38.47), p : (if true then k else j)] (array[q : m, r : o, s : argnum] o)[argnum, (- argnum), e])))
  let r[s] = [n(), n()]
  let t = (array[t : (- m), u : (- (if (! true) then (if false then argnum else k) else f))] pow(to_float(j), asin(to_float(j))))[to_int((if false then acos(to_float(s)) else atan2(63.4, log(40.42)))), o[(sum[t : h[to_int(99.05), m, (if false then q else 372)]] k), {(124 - 244), to_int(21.46), f}{2}]]
  let u = log(acos((array[u : s] asin(t))[(sum[u : q, v : i] to_int(t))]))
  return n()
}

write image (array[o : f, p : (e % e), q : m] (array[r : o, s : i] {exp(88.35), sin(67.14), to_float(k), sqrt(48.59)}))[(sum[o : ({l, e, args}{1} - (if (argnum > i) then f else i))] f), {{e, argnum, i}}{0}{1}, argnum] to "o.png"

