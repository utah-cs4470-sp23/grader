fn a(b : int, c : bool) : bool {
  assert (argnum >= (array[d : 767, e : 677, f : 256] (array[g : d, h : f] g))[argnum, 180, to_int(9.54)][(if (c || false) then [b][(- b)] else argnum), (array[d : argnum, e : to_int(25.56)] (sum[f : b, g : e, h : b] d))[(sum[d : b, e : (559 / b), f : to_int(57.28)] (- f)), b]]), "d"
  let d[e, f] = (if (c || (atan(36.58) > atan(exp(90.72)))) then (array[d : (sum[d : (- b), e : (- argnum), f : argnum] 159)] (array[e : to_int(22.81), f : (sum[e : b] e)] (array[g : 399, h : 418, i : d] b)))[((- argnum) / (sum[d : b, e : b] b))] else (array[d : (sum[d : (b % argnum), e : b] d)] (array[e : (sum[e : d, f : 268] d), f : (sum[e : b] e)] (array[g : d, h : 642, i : argnum] f)))[({argnum}{0} + ((sum[d : 256, e : 493, f : 785] e) % b))])
  let g = (b == (f % f))
  let h = (sqrt(to_float((- (sum[h : e] h)))) > (sum[h : to_int(exp((if c then 91.91 else 64.96))), i : (if (c && g) then (if g then args else args) else args)[((- e) / to_int(96.78))]] sin(sqrt(tan(41.54)))))
  return (if (argnum >= (- e)) then {(array[i : 990, j : e, k : e] h), b} else {(array[i : f, j : b, k : f] h), argnum}){0}[597, [(f / (sum[i : e, j : f] f)), (sum[i : f, j : argnum] i)][(e - (- (- f)))], b]
}

fn b(c[d, e] : {int}[,]) : int[,,] {
  assert (((if true then {argnum, d} else {e, d}){1} + (- (- argnum))) <= e), "f"
  assert (if (! {(false || true)}{0}) then ((e - ((e * 444) / (e + argnum))) == d) else (pow((sum[f : e, g : argnum, h : e] to_float(e)), exp(cos(76.14))) == cos(atan(to_float(argnum))))), "f"
  let {{{}, f, g[h, i]}, {j, {}}, k} = (if (if (false != (true || (true || true))) then {to_float(e), true, false}{1} else {false}{0}) then {((sum[f : argnum, g : d] g) != e), {{{}, c, c}, {argnum, {}}, args}}{1} else {(array[f : 38, g : e, h : (sum[f : argnum, g : e] argnum)] {{}, c, c})[(sum[f : argnum, g : (sum[f : e] e), h : d] (sum[i : 905, j : f] i)), e, (- argnum)], {65, (if (! true) then {} else {})}, {(if true then args else args), argnum}{0}})
  let l = i
  return {(if ((! true) && (660 > d)) then (array[m : argnum, n : (sum[m : j] 241), o : (sum[m : 815, n : l, o : j] l)] (i - m)) else b((if false then g else g)))}{0}
}

let c = log(58.0)
fn d() : {int,bool} {
  assert a(to_int(log(tan(79.25))), (! d(){1})), "e"
  let e[f, g, h] = b((if (((- 473) == (- argnum)) || (! false)) then (if {true}{0} then (array[e : 562, f : (- argnum)] {492}) else (array[e : 736, f : 759] {e})) else (array[e : (if true then 741 else 45), f : 275] {(- f)})))
  assert a((array[i : argnum, j : (f * e[f, h, h]), k : g] j)[to_int(atan(45.06)), f, (array[i : (- g), j : (- h)] f)[(h + f), argnum]], {atan(sqrt(55.42)), atan(c), ((h - f) == h)}{2}), "i"
  let i[j] = (array[i : (sum[i : {cos(30.39), (argnum + f)}{1}] (sum[j : (if (! false) then 399 else to_int(63.51))] 415))] sqrt({(- c), 42.32}{0}))
  return (array[k : 546, l : (990 + (- 695)), m : g] {d(), cos(48.49)}{0})[g, argnum, 737]
}

fn e() : bool {
  let f[g, h, i] = {to_int(atan(c)), 527, (array[f : (if true then argnum else argnum), g : 266, h : (if true then (sum[f : argnum, g : argnum] f) else (260 / argnum))] (- (g + argnum)))}{2}
  let {} = (if {(array[j : h] e())}{0}[167] then (if {d()}{0}{1} then {} else {}) else (if (! (! (g != 963))) then (if {g, d(), e()}{2} then (if false then (if false then {} else {}) else {}) else (if (h != g) then {} else {})) else (array[j : 426, k : (if e() then i else h)] {})[i, 156]))
  let j = h
  let {{k[l, m]}, {}, n[o]} = {log(sqrt((if e() then 42.0 else 8.37))), {{(array[k : j, l : j] j)}, {}, args}}{1}
  return a(j, (! false))
}

let f = {5.43, asin((- c)), (- (if (false && e()) then argnum else argnum))}{0}
assert e(), "g"
let g[h, i, j] = b((array[g : 25, h : 136] (array[i : h] {i})[((sum[i : h] i) + 919)]))
print "k"

time let {{{}}} = {{{{}}}, ((! e()) && (false && e())), a(578, e())}{0}
let {} = (if e() then {{}, {}}{1} else (if (if false then {e()}{0} else (array[k : 774, l : i, m : 314] e())[809, 530, h]) then (if e() then (array[k : j, l : i, m : j] {}) else (array[k : j, l : j, m : j] {}))[h, {i}{0}, 500] else {}))
write image {(array[k : j, l : i] {to_float(248), (c - f), (- 66.68), f})}{0} to "k.png"

