type a = float[]
let b[c] = (if (to_float(argnum) < exp(47.11)) then {{args}} else {{args}}){0}{0}
show to_int(sqrt(sin(asin(79.47))))

print "d"

write image {cos(sin(to_float(877))), (array[d : (if true then (sum[d : c, e : c, f : argnum] e) else c), e : c] {(sum[f : c] 48.01), 3.27, 6.76, (sum[f : 424] 38.57)})}{1} to "d.png"

let d[e, f] = (if (! (false && true)) then {(array[d : (- 61), e : (389 * c)] e), (array[d : 744] c)} else {(if true then (array[d : argnum, e : c] argnum) else (array[d : argnum, e : c] d)), (array[d : argnum] c)}){0}
let g = 49.89
let h[i] = [cos((log(4.96) % 28.21))]
fn j({ k[l, m] : a[,] }, n : a, o[p] : a) : int {
  let q[r, s, t] = (if (! (if ((- g) < g) then (if (false || false) then true else (! false)) else ((sum[q : m, r : p, s : i] q) != f))) then (if {l, false, argnum}{1} then (array[q : m] (array[r : l, s : f, t : i] args)) else (array[q : m] (array[r : argnum, s : p, t : f] b)))[m] else (array[q : p, r : i, s : i] [j({k}, [g], n), s, q]))
  assert (p == j((array[u : args[l], v : l, w : e] {k})[p, p, m], {true, n, (array[u : e] n)}{1}, [cos(g), 80.61])), "u"
  let u[v, w, x] = {(! false), (array[u : i, v : i, w : i] q), sqrt(sin(14.63))}{1}[f, p, r]
  let {{{y, z[A, B, C]}}} = (array[y : v, z : f] {{{v, u}}})[(e / s), l]
  return i
}

print "k"

write image {(array[k : (sum[k : e, l : (if true then argnum else 649)] argnum), l : f] {(sum[m : k] 60.18), to_float(k), sin(35.34), g})}{0} to "k.png"

type k = {a,{a[,,],bool,int},a}[,,]
