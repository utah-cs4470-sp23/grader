fn a({ b : float }, { { c[d, e, f] : {int,bool}[,,], g : float[][,], { { { { h : int }, { i[j] : bool[] }, { k[l, m] : {float}[,] } }, n[o, p, q] : bool[,,], {  } } } } }) : int {
  let r[s] = [c, {(if (e >= p) then c else c), (! (o == 268))}{0}]
  let t[u, v, w] = {(if true then (array[t : 298, u : j] n) else (array[t : p, u : 163] n))}{0}[(sum[t : to_int((array[t : l, u : o, v : m] b)[j, (sum[t : f, u : q] e), q]), u : argnum] l), d]
  let x[y, z] = g
  let A[B, C] = g
  return q
}

fn b() : {bool,bool,bool} {
  let c = sin(sin(tan((if true then exp(44.43) else 20.26))))
  let d[e, f, g] = (array[d : argnum, e : (- to_int(to_float(argnum))), f : (if (argnum <= args[argnum]) then (if (14 >= 8) then args else (array[d : 555] 717)) else {args, true}{0})[(if (! (! false)) then ((- argnum) % (135 % argnum)) else 76)]] argnum)
  return (if (to_float(argnum) > to_float(f)) then (if (! (if true then false else false)) then [b(), b(), b()] else [b()]) else (array[h : args[g], i : argnum] [b(), b()])[(sum[h : e, i : to_int(c), j : e] g), (- argnum)])[e]
  return {(if {true}{0} then (array[h : to_int(c), i : f] (! true)) else (array[h : argnum, i : to_int(87.89)] true))[{argnum}{0}, (if (! b(){0}) then to_int(sqrt(c)) else argnum)], (! (if (false || (f == e)) then ((c <= 46.25) && (477 != 444)) else (to_float(g) == (sum[h : e, i : g, j : argnum] c)))), ((! (! false)) || ((if (! true) then (false == true) else (728 == f)) != (e < (if false then f else f))))}
  return b()
}

let c[d] = (if (if (if (argnum == (argnum % 874)) then (! true) else (if b(){1} then (argnum <= 81) else (856 < 368))) then {(argnum >= 862)}{0} else ((860 > to_int(17.65)) || (array[c : 897] false)[666])) then (if (((false || false) == (! true)) && (if b(){0} then false else (argnum <= 123))) then [((if true then argnum else 825) * args[760])] else [(sum[c : 962, d : (- 269)] d), to_int((sum[c : argnum, d : 244, e : 526] 64.55)), args[args[678]]]) else (if ((! true) != b(){0}) then {args} else {(array[c : argnum] 132)}){0})
type e = {{{}}}[]
let f[g, h, i] = {(array[f : argnum, g : argnum, h : (argnum - argnum)] (array[i : d, j : g, k : f] g))[862, (- argnum), argnum], (! (! b(){2}))}{0}
fn j(k : bool, l : float[]) : {} {
  let m[n] = c
  let {{}} = (if (cos(sin(sin(80.93))) == sqrt(cos(to_float(g)))) then (if ((! true) && k) then {{{}}, (if k then argnum else d)} else {{{}}, 576}){0} else (if (! true) then (if (if k then (k && true) else (209 == d)) then (if (! k) then {{}} else {{}}) else (if false then {{}} else {{}})) else (array[o : (if k then n else argnum)] {{}})[(sum[o : h, p : (- argnum), q : (sum[o : d] n)] (- h))]))
  let o[p] = m
  let {q, {r}, s} = (array[q : ((array[q : i, r : argnum] i)[argnum, n] % p), r : (- h), s : (array[q : h, r : g] r)[g, (if k then (- h) else p)]] {[(- 26.27), 41.59, to_float(r)], (if false then {l} else {l}), f})[i, h, m[d]]
}

let {k} = (if (481 > argnum) then {(sum[k : g, l : (argnum * 249)] d), {g}} else {(sum[k : (- g), l : (- 289)] argnum), {(h + g)}}){1}
fn l() : bool {
  let {} = (if (array[m : h, n : argnum, o : g] (array[p : i, q : d] true))[k, i, 69][(array[m : k, n : argnum] (i - k))[h, (if (l() || true) then i else 924)], h] then {} else (array[m : g, n : g, o : i] (if l() then {} else {}))[g, (if (! false) then {h} else {h}){0}, argnum])
  let m[n] = args
  return (if {(array[o : n] true)}{0}[i] then ((! true) && (if (if b(){2} then (false && l()) else (if false then l() else l())) then (i == c[i]) else l())) else (! (i != i)))
  let o = [atan(to_float(n)), pow(asin((87.66 - atan2(43.61, 62.47))), sqrt((array[o : n, p : 265] 75.69)[h, (- g)]))]
  return {{97.08, (! l()), m}{1}}{0}
}

type m = {e,bool[,,],e}
print "n"

fn n(o[p] : e, q[r, s, t] : e[,,], u : {m}) : e {
  return (array[v : argnum] {[{{}}][t]})
  let v = p
  return {(array[w : s] {{{}}}), f, h}{0}
  let w[x] = [(- (if (array[w : k] true)[(sum[w : k, x : s, y : p] v)] then tan(80.53) else cos(19.9)))]
  return {(array[y : (841 % x), z : i] n(o, q, u)), (d > argnum)}{0}[v, d]
}

assert false, "o"
