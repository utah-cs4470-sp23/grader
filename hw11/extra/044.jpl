let {} = {args, tan(cos(49.03)), (array[a : argnum] (if false then {} else {}))[(argnum - 162)]}{2}
fn a(b : int, { c : float }, d[e] : bool[]) : {bool,bool[,]} {
  return {a((sum[f : (391 * b), g : (- e)] f), {acos(c)}, (if (c != 82.19) then (if false then d else d) else d)){0}, (array[f : e, g : to_int(sin(to_float(argnum)))] (! d[b]))}
  assert (! (! (if (! (false != true)) then (array[f : b] false)[(sum[f : e] argnum)] else (! (! false))))), "f"
  let {f[g, h, i], j[k]} = {{(if (! true) then (array[f : b, g : b, h : argnum] d) else (array[f : e, g : b, h : 758] d)), (array[f : e] log(c))}}{0}
  let l = h
  return (if (false || ((! false) || (log(43.98) < to_float(g)))) then a(301, (if ((! false) || true) then {1.81} else {45.78}), d) else a({h}{0}, {d, {c}}{1}, (if [true, false][(if false then l else e)] then f[(if false then k else argnum), b, b] else (if false then f else f)[(sum[m : h, n : k, o : h] b), i, i])))
}

write image {(array[b : 536, c : (array[b : 831] argnum)[(- 324)]] {cos(16.31), sin(10.15), 1.13, sin(38.5)})}{0} to "b.png"

fn b() : {} {
  let c = {argnum}{0}
  let d = (if (! (true || false)) then {{57.04}, 82.05}{0} else {{44.79}}{0}){0}
  let {} = (if (! (94.33 >= d)) then {} else {})
  let {{e, f, g}, {h, i[j, k]}, l} = {{(to_float(524) + sqrt(30.62)), {c, argnum, atan(d)}}{1}, (array[e : c, f : 619, g : {35.91, c, false}{1}] a(argnum, {35.87}, (array[h : e] true)))[(array[e : (if true then argnum else c), f : (sum[e : 619, f : 619] c), g : (- c)] argnum)[703, 91, c], (if (66.48 != tan(24.4)) then c else {649, c, true}{1}), (sum[e : argnum, f : ((- 848) % 234)] e)], [log(d), acos(62.26), tan((if true then to_float(argnum) else tan(d)))]}
  return (if {atan(24.96), false, args}{1} then (if (! h) then {{f, {}, h}, b()} else {{290, b(), h}, (if h then b() else b())}) else (if ((argnum >= argnum) || h) then {{98, {}, h}, (if h then b() else b())} else {{f, {}, false}, {}})){1}
}

let c[d, e] = (array[c : ((238 / (if true then 9 else argnum)) + to_int(3.98)), d : argnum] atan2(sqrt((if (75.32 != 84.94) then tan(55.08) else asin(9.52))), atan(asin(81.85))))
assert {(if ((false && false) && (! false)) then d else to_int(cos(12.89))), ((argnum / argnum) < (if (d != e) then argnum else d))}{1}, "f"
time let f = e
let g = atan2(atan2((if (! (f != d)) then (77.54 % 92.13) else 60.75), sin(sin((- 91.2)))), (- atan2(atan2(1.64, 78.87), (- tan(29.84)))))
fn h({  }, i[j] : {bool,int,float}[]) : float {
  assert ((if (if false then (! (! false)) else (atan(g) == sqrt(48.42))) then {f, i, (d != j)}{2} else (373 <= (- (if true then d else argnum)))) || (99.57 == exp(i[e]{2}))), "k"
  return h({}, (if (if true then (876 <= e) else (497 == j)) then {i, args} else {(if false then i else i), (array[k : 32] e)}){0})
  let k = f
  assert (! false), "l"
  return (array[l : (- j), m : f, n : to_int(atan(1.39))] to_float(379))[to_int(asin(sin(to_float(e)))), (- (sum[l : (sum[l : e, m : d, n : (if true then e else e)] (j / m)), m : argnum] (l - e))), k]
}

let {{}, {}, i[j, k, l]} = (if ((! (false == (! true))) || (argnum == {false, 753}{1})) then {(if (array[i : argnum, j : f] false)[e, f] then (array[i : argnum, j : f, k : argnum] b())[(- e), d, (sum[i : argnum] f)] else {e, {}}{1}), (if (if (if true then false else false) then (! true) else true) then {} else (array[i : argnum] b())[932]), (array[i : 456, j : 919, k : argnum] cos(g))} else {(if ((- 36.28) < 67.0) then [{}, b(), b()][d] else {}), b(), (array[i : 37, j : (sum[i : f, j : 873] (sum[k : 230, l : e] argnum)), k : {f, g}{0}] sqrt(to_float(f)))})
read image "m.png" to m

let n[o, p, q] = i
