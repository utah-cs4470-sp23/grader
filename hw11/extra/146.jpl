fn a(b : int) : int[,,] {
  let c[d, e, f] = (if ((! false) && (! false)) then (array[c : 211, d : b] (if (! true) then a(c) else (array[e : 397, f : c, g : argnum] g))) else (if true then (array[c : (- b), d : 448] a(153)) else (array[c : 400, d : (sum[c : argnum, d : b, e : argnum] b)] (array[e : d, f : 981, g : c] f))))[(array[c : (array[c : b, d : b] d)[argnum, (- argnum)], d : a(argnum)[(- argnum), (sum[c : b] 339), 354], e : (- argnum)] (- (- b)))[(- b), (- 271), (- (- 121))], b]
  let g = (array[g : 729, h : (e / (array[g : (- argnum), h : (- f)] (sum[i : b] d))[argnum, argnum]), i : e] (if (true != (! false)) then {args[b]} else {d}){0})
  let h[i, j, k] = (if (array[h : argnum, i : argnum] true)[(sum[h : d, i : f, j : f] h), f] then {377, (array[h : e, i : argnum, j : f] c)} else {d, (array[h : f, i : b, j : b] c)}){1}[((- (if (! true) then b else to_int(88.29))) / argnum), 896, ((if (d != (if true then 746 else argnum)) then 671 else (- to_int(19.79))) - e)]
  assert (array[l : to_int(log(11.75)), m : to_int(cos(30.74))] {295, true})[590, [b, (sum[l : d, m : 984, n : i] j), i][args[(- e)]]]{1}, "l"
  return (if (! (! true)) then (array[l : (- argnum), m : 208] (array[n : argnum, o : e] c)) else (array[l : j, m : b] (array[n : j, o : f] g)))[d, args[(if true then d else (sum[l : d, m : argnum, n : i] i))]][i, d]
}

let b[c] = (array[b : argnum] [[argnum]][b])[(if {79, (! true)}{1} then to_int(cos(log(54.17))) else (sum[b : (array[b : 947, c : 309] argnum)[(argnum + argnum), (if true then 100 else 84)], c : (sum[b : (sum[b : argnum, c : argnum] c), c : argnum] (sum[d : argnum] c))] argnum))]
let d[e, f, g] = a(((- (array[d : c, e : argnum] 672)[to_int(69.66), c]) + 528))
fn h() : {bool,int,int[]} {
  let i[j, k] = (if false then (array[i : (sum[i : 479, j : e, k : c] c), j : (sum[i : (- 480), j : (sum[i : g, j : 912] c)] 28)] (if false then (array[k : argnum, l : i] g) else (array[k : e, l : f] argnum))) else (array[i : (sum[i : argnum] e), j : (- (- c))] (array[k : c, l : 471] k)))[(- (767 % f)), (to_int(tan(83.05)) % 168)]
  assert (array[l : j, m : (sum[l : argnum] argnum)] (if (true && true) then (array[n : k] true) else [false, false]))[c, c][(to_int(tan(tan(76.19))) / g)], "l"
  let {} = {}
  let l = false
  return (array[m : c, n : (- k), o : j] (array[p : 430, q : argnum] (if l then h() else h())))[argnum, args[((c - f) * (if l then k else k))], f][k, e]
}

let i[j, k] = {f, sqrt(72.27), [(array[i : e, j : e] h()), (array[i : g, j : c] h())]}{2}[635]
let l[m] = (if (g <= f) then (if (if true then true else true) then (array[l : j, m : e] (array[n : argnum] false)) else (array[l : 67, m : e] (array[n : f] true)))[argnum, c] else [((g / (sum[l : c, m : f] argnum)) != j), ((if false then 96.73 else to_float(j)) < atan((sum[l : j, m : c, n : argnum] 84.96)))])
let {n[o, p, q], r[s, t]} = (array[n : (sum[n : f, o : k, p : e] p), o : (sum[n : g] (- e))] (if (exp(29.16) > pow(84.45, 8.39)) then {d, i} else {d, i}))[(array[n : argnum, o : (- k)] (sum[p : n] n))[c, k], b[j]]
time show tan((if [false][j] then to_float(f) else log((- 23.55))))

show exp(to_float(q))

let u[v] = l
fn w(x : {{bool,bool},bool}, y[z] : bool[]) : float {
  return cos(to_float(p))
  let {A, B[C, D, E]} = {{{k, n}}, asin(w(x, u))}{0}{0}
  let {} = {}
  let {F[G, H]} = (if ((q < v) && (array[F : z, G : z, H : k] true)[v, (- C), D]) then [(if true then {r} else {i})] else (if (u[c] == (v < C)) then (array[F : (f * A)] {r}) else [{i}, {r}]))[q]
  return {w((array[I : C, J : G, K : q] x)[m, args[p], A], [u[G]]), l, true}{0}
}

let {{x[y], {}}, {}} = (array[x : f, y : g] {{args, {}}, (array[z : argnum] {})[(y % p)]})[d[to_int(log(24.11)), p, s], ((if {false, u}{0} then q else g) / c)]
