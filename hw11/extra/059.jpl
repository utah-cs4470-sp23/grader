let a = argnum
let {{b, {{c, d}, {e[f, g, h], i, j[k, l]}}}} = {{exp(sqrt(log(37.95))), {(if false then {a, 327} else {a, a}), {(array[b : argnum, c : 131, d : a] c), a, (array[b : a, c : 780] 92.39)}}}}
let {m, {n, o, p}, q[r, s, t]} = {(if {false}{0} then {asin(43.44), {f, d, l}, (array[m : a, n : i, o : d] a)} else {sqrt(65.12), {a, argnum, a}, (array[m : h, n : g, o : argnum] a)})}{0}
read image "u.png" to u

let v[w, x, y] = (array[v : i, w : k, x : r] c)
fn z() : {float,bool[,,]} {
  return {pow(pow(exp((b % b)), sqrt(sqrt(30.25))), 26.09), (if (atan(atan(m)) == z(){0}) then (array[A : k, B : w, C : (h - to_int(m))] (asin(b) == exp(b))) else (array[A : argnum, B : i, C : p] (n == t)))}
  let A[B] = (array[A : argnum] v)
  let C = c
  let D[E, F, G] = (if (w == c) then v else (if ((false && (true || false)) || (k < to_int(68.5))) then v else {e, C, 767}{0}))
  return [{E, r, (if false then z() else z())}, {57, (if false then B else o), z()}][t]{2}
}

print "A"

fn A() : float {
  return pow(atan2(sin(acos(to_float(h))), tan(65.68)), atan(tan(log(to_float(argnum)))))
  let {B[C, D, E]} = (if ((! (array[B : n] true)[w]) || (to_float(l) <= 61.98)) then {{u, (array[B : g, C : k, D : y] D), y}{1}} else {q})
  let {F[G]} = (if (array[F : a, G : p] (! false))[i, (if (b <= m) then l else E)] then {D, {[s]}, cos((if false then b else b))} else {(if (t > c) then t else c), {[g]}, (array[F : D, G : 156, H : g] m)[n, x, l]}){1}
  let {} = {(if false then {B} else {v}){0}, {argnum, {r}, {}}{2}}{1}
  return cos((sum[H : s] log(asin((sum[I : 793, J : H] A())))))
}

fn B(C : int[,,]) : float {
  let D = exp(A())
  let {E[F, G, H], I[J, K, L], {{M[N, O], {P[Q, R, S]}}, T, U}} = {(array[E : p, F : 651, G : (sum[E : argnum] y)] (y * r)), v, {{(array[E : to_int(m), F : f] F), (if (argnum != s) then {q} else {C})}, o, s}}
  assert {[(c != h)]}{0}[G], "V"
  let {} = {}
  return log(sin((exp(m) % pow(tan(A()), to_float(S)))))
}

fn C(D : int, E[F, G, H] : bool[,,]) : bool[] {
  return (if (if (if (cos(13.46) == log(A())) then (! (! false)) else false) then (atan((- A())) != sqrt(atan2(b, b))) else ((! true) != (array[I : p, J : p, K : d] true)[w, a, x])) then [(G <= f), C(l, E)[n], {false}{0}] else C(r, (if (argnum >= g) then {E, h}{0} else E)))
  let {I[J, K, L]} = (array[I : y, J : a, K : x] (array[L : c] {e})[g])[s, n, w]
  let M = {}
  let {{{N[O], P}}, Q} = (if (if (k <= a) then (array[N : argnum, O : (- w)] true) else (if (if false then false else false) then (array[N : J, O : h] false) else (array[N : l, O : D] false)))[g, o] then (if ((array[N : i, O : x] true)[i, i] || true) then {{{args, y}}, w} else {{{args, t}}, h}) else {{{args, K}}, H})
  return (if ((! true) && false) then [((! (b >= A())) != {m, false, i}{1}), (s <= c)] else C(K, E))
}

let D = n
assert (array[E : (sum[E : (sum[E : a, F : c, G : 905] (- 272)), F : x, G : h] o), F : y] (! (b == b)))[p, y], "E"
