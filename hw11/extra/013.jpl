let {{a, b, c}, d, e} = {(array[a : (array[a : argnum, b : 412, c : argnum] a)[442, argnum, (537 % 791)], b : 308, c : (if (true && false) then argnum else argnum)] {true, (- a), 161})[(array[a : (argnum % 833), b : (- argnum), c : (- argnum)] a)[(sum[a : argnum, b : 378] (if true then a else b)), args[argnum], (if false then argnum else argnum)], args[to_int(exp(18.5))], to_int(acos(84.17))], (if ((sum[a : 458, b : 167] b) >= (- argnum)) then (array[a : (argnum / argnum), b : to_int(93.98), c : args[246]] to_float(argnum)) else (array[a : 820, b : (- argnum), c : (if true then 406 else argnum)] to_float(c)))[412, ((if true then argnum else 215) + {argnum}{0}), 663], tan(tan(tan(acos(35.06))))}
let f = c
fn g(h : int, i[j] : int[], k : int) : int {
  let l = (if ((sum[l : j, m : c, n : b] n) == k) then sqrt((array[l : b, m : f, n : args[c]] log(e))[(- (f % c)), (if a then k else argnum), to_int(75.92)]) else sqrt(e))
  let m[n, o, p] = (array[m : k, n : b, o : j] j)
  let q = 90.01
  let {} = {}
  return c
}

let h = cos(atan2(exp((to_float(f) / log(d))), 92.03))
let {i, {}, j[k]} = (if (if ((if (f != f) then a else (b != c)) && ((true || a) && (a || a))) then (if a then (! (! a)) else a) else ({54.95, a}{1} || ((true == a) || (! a)))) then (array[i : b, j : (- (if false then 287 else c)), k : (sum[i : (sum[i : b, j : f] i), j : 535] c)] {j, {}, [f, f, argnum]})[f, (if (to_int(89.31) >= b) then (sum[i : (- argnum), j : g(b, args, f), k : (- argnum)] f) else b), b] else (if (array[i : argnum, j : b] true)[(- (argnum % 61)), to_int(e)] then {(- 230), (if a then {} else {}), (if a then args else args)} else (array[i : c, j : (648 - 603), k : argnum] {i, {}, args})[g(to_int(d), (array[i : c] f), (- c)), b, (- f)]))
let {} = (if (argnum > argnum) then {{false, {}}}{0}{1} else (array[l : b, m : b] [{}])[288, b][k])
let {l} = {(array[l : (sum[l : b, m : f, n : k] m), m : g(c, args, i)] {argnum})}{0}[200, k]
let {m[n, o]} = {(if {(i != c), f, j}{0} then [(array[m : 453, n : b] d)][(sum[m : (l * k)] b)] else (array[m : (sum[m : (- 600), n : l] b), n : i] to_float(args[m])))}
fn p() : float {
  assert ((! (if a then {a, j} else {a, j}){0}) && true), "q"
  let q = atan2(sin((asin(sqrt(e)) - (cos(d) + h))), (sum[q : i, r : (o / l)] (sum[s : (sum[s : (l + 215), t : (q % k), u : n] t)] 55.14)))
  let r[s, t, u] = (array[r : f, s : argnum, t : {{l, 72.67}}{0}{0}] ((if a then (b >= argnum) else true) || {(! false), acos(d), sqrt(33.07)}{0}))
  let v[w] = (if a then [a, (! ((i + c) <= s))] else (array[v : j[502], w : i, x : u] (if false then (array[y : u] a) else (array[y : k] false)))[t, (- (t % (- f))), g(b, args, (if a then o else b))])
  return ((if (((c <= n) && a) || true) then 93.58 else exp(sqrt(acos(3.71)))) - cos(log((if true then acos(d) else tan(e)))))
}

type q = {bool[,][],bool[,,][]}
let r = o
fn s(t : float[,,][]) : int {
  assert (if (h != p()) then (array[u : r, v : k] (array[w : k] false))[i, k][argnum] else ((array[u : f, v : (- i), w : (c % 773)] (p() - 4.65))[o, o, k] >= d)), "u"
  let u[v] = (array[u : k, v : o] {cos(e), [l], k})[(s(t) + n), f]{1}
  assert (! (false && (sqrt((d + p())) <= sqrt(4.77)))), "w"
  let {w, x[y, z, A]} = (if (! (if (! (p() != e)) then (! true) else (d == tan(d)))) then (if (if a then (array[w : f, x : l, y : argnum] true) else (array[w : r, x : k, y : n] true))[(sum[w : 398, x : n] (r % i)), (if a then n else o), (array[w : f, x : l] i)[k, to_int(h)]] then {tan(acos(e)), (if false then (array[w : b, x : n, y : c] f) else (array[w : i, x : b, y : argnum] r))} else {(- sqrt(h)), (array[w : r, x : c, y : o] to_int(d))}) else {acos(to_float(l)), (array[w : f, x : to_int(acos(p())), y : (sum[w : (sum[w : n] l), x : i] (x * i))] i)})
  return to_int((pow(p(), pow((sum[B : l, C : argnum] w), atan2(w, w))) + (if (! a) then d else e)))
}

