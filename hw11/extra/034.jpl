print "a"

let a[b] = (array[a : (- 761)] [(array[b : a] argnum)])[397][667]
fn c({ d : float, { e : int } }) : float {
  let {} = (if (false != (if (b != e) then (b <= b) else (! false))) then {(860 + argnum), (array[f : 265, g : argnum] {})}{1} else (if ((b == b) || (! true)) then (array[f : argnum, g : (if false then argnum else 523)] {}) else (if false then (array[f : b, g : b] {}) else (array[f : argnum, g : 315] {}))))[argnum, 808]
  let {f[g, h], i[j, k, l]} = {{(array[f : a[argnum], g : (- e)] args), (if (e == 787) then (array[f : e, g : e, h : argnum] f) else (array[f : 198, g : argnum, h : e] 578))}, (if (false || (b <= 470)) then (if (false != false) then args else args) else [(sum[f : 285, g : 532] g), (b - b), b])}{0}
  let m[n, o] = (array[m : i[argnum, k, (h - g)]] (array[n : (if false then b else 790), o : l, p : (e * l)] (array[q : n, r : b] 147)))[argnum][j, h, h]
  assert ((! true) || {((37.62 * 32.2) < d), a, [true][o]}{2}), "p"
  return pow(asin(exp(acos(exp(d)))), log(sin((array[p : argnum, q : n, r : 134] 3.73)[g, k, (- argnum)])))
}

fn d(e[f, g] : float[,,][,]) : {float[,],bool,int} {
  let h = (- (if (! (! true)) then (array[h : argnum, i : (- g), j : (- b)] j) else (array[h : 3, i : b, j : (f - b)] j))[f, b, b])
  let i[j, k] = (if (array[i : argnum, j : 232] (37.75 < 72.53))[f, g] then (if (if (! false) then (true && false) else true) then (array[i : 589, j : f, k : argnum] e) else (array[i : (argnum - f), j : (- 151), k : argnum] e)) else (array[i : h, j : 86] (array[k : j, l : f, m : 686] e))[(if (h == argnum) then (if false then argnum else h) else g), g])[h, f, b]
  let l = acos((sum[l : b, m : b, n : h] cos(to_float(764))))
  let {} = [(if true then (array[m : 426] {}) else [{}])[(- k)], {}][to_int(atan2(exp(to_float(979)), (- (4.75 / l))))]
  return {(if (array[m : (sum[m : f, n : k, o : k] f), n : k, o : (- j)] true)[b, k, (sum[m : b, n : g] g)] then (if true then (if true then (array[m : g, n : b] l) else (array[m : 572, n : argnum] 37.98)) else (if (! false) then (array[m : f, n : h] l) else (array[m : 675, n : j] 81.74))) else (if true then (array[m : 252, n : g] (- 7.94)) else (array[m : args[j], n : 818] l))), {(array[m : g, n : k] false)}{0}[(if ((! true) || (true != false)) then j else (sum[m : g, n : j, o : argnum] (sum[p : b, q : k, r : f] p))), {h}{0}], argnum}
}

let {e} = (if true then {{cos(tan(58.05))}} else (if (to_float((sum[e : argnum, f : 784] b)) == 77.16) then {{sin(46.39)}} else {{to_float(argnum)}}))
let f[g, h, i] = (array[f : (if (asin((- 4.36)) <= log(57.21)) then (if (a[232] == argnum) then (sum[f : (sum[f : b, g : 723] 56), g : 679, h : b] (b / argnum)) else to_int(sin(10.71))) else ((array[f : argnum] 877)[(- argnum)] - to_int(exp(16.84)))), g : b, h : (sum[f : (if (if (true || false) then (! true) else (199 == b)) then (- b) else (sum[f : argnum, g : 32] g)), g : (sum[f : (- b)] (argnum * f))] (array[h : b, i : (sum[h : g] b)] i)[(if false then (- 954) else (- 537)), 224])] log(tan(to_float(argnum))))
let j = (! (if ((! true) && false) then [true, (b >= i)] else (if false then [false] else [false, true]))[(if true then {i, 70.34} else {h, 34.23}){0}])
type k = float[]
show tan((- pow(pow(sqrt(96.32), log(88.5)), sin(to_float(argnum)))))

fn l(m[n] : k[], o[p] : {}[]) : float {
  let {q} = (if j then [{g, i, e}][b] else {{b}{0}, to_int((sum[q : argnum, r : g] 98.91)), (array[q : 814, r : argnum, s : b] e)[(sum[q : argnum] n), n, b]}){2}
  let r = (- (if ([j][to_int(q)] == j) then (if (! false) then 937 else 145) else h))
  assert (array[s : argnum, t : (- b)] (if (! false) then (array[u : 674, v : p] j) else (array[u : argnum, v : 764] true)))[i, g][966, i], "s"
  assert (! true), "s"
  return cos((array[s : n, t : argnum, u : 633] [53.87])[n, (if j then p else to_int(31.45)), i][(if false then (array[s : argnum, t : 360, u : argnum] r) else (array[s : 212, t : p, u : n] r))[i, b, ((sum[s : n, t : n] h) - h)]])
}

type m = k[]
show h

