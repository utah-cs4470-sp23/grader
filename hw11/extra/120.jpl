fn a(b[c, d, e] : int[,,], f[g] : {bool,bool,bool}[]) : float {
  let h[i] = (array[h : (sum[h : (sum[h : argnum, i : 151] d), i : c] 942)] {args, (array[i : g] h)})[g]{1}
  let j = (if (if (! true) then false else (asin(log(86.86)) <= (sum[j : c, k : d] (25.67 % 69.11)))) then to_float(76) else log((log(62.8) % pow((- 93.51), to_float(argnum)))))
  let {k[l, m, n], o} = {{{b, i}, {j, i}}, true}{0}{0}
  let p[q] = (if (if (array[p : c, q : n] false)[(- (sum[p : n, q : 969, r : d] r)), 990] then (m > o) else false) then (if (if (g != e) then (m >= c) else (! false)) then {(array[p : c] 45)} else {[e, l]}){0} else [e, m, n])
  return tan(acos(50.82))
}

let {} = (if (if {true, (! false)}{1} then (if true then (! (false == false)) else false) else (196 != (array[b : argnum, c : argnum] b)[argnum, (370 / 952)])) then (if (false && (false && true)) then [{}] else (array[b : (- 61)] {}))[(if (! true) then {739} else {630}){0}] else (if (! (! (false && true))) then {} else {}))
write image (array[b : ((sum[b : (if true then 82 else argnum)] b) % argnum), c : 533, d : to_int(tan(to_float(argnum)))] (array[e : 55, f : d] {tan(75.64), to_float(argnum), atan(41.2), 99.64}))[(sum[b : [(sum[b : argnum, c : argnum] argnum), argnum, to_int(92.05)][451], c : (to_int(37.24) - ((- 766) - (- 369))), d : (sum[b : (sum[b : 191, c : to_int(13.96)] 887), c : (452 / 342), d : (argnum % (sum[b : argnum, c : argnum] b))] (sum[e : (c % c), f : (358 - c), g : (if true then argnum else c)] 74))] (- (sum[e : d] argnum))), 117, 448] to "b.png"

let {b[c], d[e]} = (if (if (45.42 >= asin(to_float(498))) then (sin(88.27) < pow(cos(84.49), sqrt(15.63))) else (to_float((- argnum)) >= acos((- 88.69)))) then {args, (if false then (array[b : argnum] b) else args)} else (if (if ((- argnum) > argnum) then (true && (! false)) else [true][(sum[b : argnum, c : argnum, d : 848] 889)]) then (array[b : (- argnum), c : 873, d : (if true then 307 else 49)] {args, args})[(sum[b : (sum[b : 661] argnum), c : (167 - argnum)] argnum), (if (false != false) then argnum else 646), (sum[b : argnum, c : args[534], d : (217 + 630)] (sum[e : c, f : d] d))] else {(array[b : (- 36)] (- 594)), (if false then args else args)}))
let {f, g} = (if [(true || (! false))][170] then {577, true} else (if ((if (c >= argnum) then (e > c) else (! true)) || false) then {(e / (sum[f : e, g : e] 449)), (14 <= to_int(27.24))} else {d[e], {true}{0}}))
fn h(i : bool) : bool {
  return (array[j : c, k : (if (if i then g else true) then {false, f} else {true, c}){1}] {e, h(false)}{1})[argnum, (if g then 198 else 825)]
  let j = c
  let {{{{k, l}, m}}, n} = {{{{402, (argnum % j)}, exp(65.18)}}, h(g)}
  return ((array[o : argnum] (array[p : c, q : 599, r : k] l))[k][e, {c, f, d}{2}[args[(c + l)]], (- 578)] > l)
  return h(n)
}

let i = [(sum[i : e, j : e, k : 889] (if (! (f <= i)) then (k - e) else {c}{0}))]
fn j(k[l] : float[], { m : int }, n : float) : float[][] {
  let o = h((h(g) && ((array[o : argnum, p : f] false)[(m + m), e] || (if g then (argnum == e) else h(g)))))
  return (array[p : argnum] [{sqrt(64.81)}{0}])
  return j((array[p : c] (sum[q : p, r : (f - to_int(n))] pow((- n), exp(94.9)))), {(if (g || g) then {c} else {f}), (! (o && o)), i}{0}, exp(sin((sum[p : to_int(n), q : argnum] 97.69))))
  let {} = (if (82.48 < pow(acos(acos(n)), atan((- 40.34)))) then (if ((! false) && (779 < l)) then (if o then {{}} else {{}}) else {{}}){0} else (if {g, argnum, args}{0} then (if g then (array[p : l, q : f, r : e] {}) else (array[p : 96, q : l, r : 149] {})) else (array[p : l, q : (argnum % l), r : (l * e)] {}))[argnum, (if g then to_int((sum[p : m, q : f] n)) else to_int(tan(n))), 179])
  return (array[p : (sum[p : (argnum / 60), q : c] (p - (p / c)))] j((array[q : argnum] n), {e}, pow(n, to_float(p))))[l]
}

let k = (argnum < {g, (sum[k : (740 / c), l : (if g then argnum else c)] i[f])}{1})
show to_float(e)

read image "l.png" to l

let m = tan(to_float(f))
