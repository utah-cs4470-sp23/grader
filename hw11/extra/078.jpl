print "a"

type a = {int[,,]}
assert ((array[b : 656, c : argnum] true)[(array[b : 481, c : argnum, d : argnum] (- b))[args[(argnum - 289)], {argnum}{0}, (- (sum[b : 936] 293))], (- (sum[b : (if false then 449 else argnum)] b))] || ({(false && true)}{0} || ((if (if false then true else true) then args[386] else 155) != argnum))), "b"
let {b[c], d[e, f, g], h[i, j, k]} = {{(array[b : (if true then 22 else argnum)] false), (array[b : 86, c : args[753], d : (sum[b : argnum, c : 276] b)] d), (if true then (array[b : 56, c : 837, d : argnum] b) else (array[b : 526, c : argnum, d : 603] d))}, {asin(exp(91.27)), 26.08, args}}{0}
write image (if ((array[l : argnum, m : j] b[816])[to_int(to_float(argnum)), g] && false) then (array[l : (sum[l : i] (- i)), m : (if (false || b[c]) then f else i)] {sqrt(tan(40.14)), 37.1, acos(to_float(j)), (if true then (sum[n : 217] 30.16) else (sum[n : j, o : k, p : c] 98.51))}) else (array[l : to_int(tan(to_float(k))), m : e] {sin(atan(12.76)), tan(acos(98.7)), to_float(500), acos(to_float(e))})) to "l.png"

fn l(m[n] : int[], o : a[], { p : int }) : a[,] {
  return (array[q : args[k], r : c] {d})
  let {} = (if (false || (p == (sum[q : (sum[q : argnum] e), r : i] n))) then (array[q : k] (if (! false) then {} else {}))[j] else {(array[q : k] {})[(sum[q : argnum, r : j] e)]}{0})
  let q[r] = (array[q : c] pow(to_float((sum[r : (sum[r : j] 311), s : k, t : (- argnum)] (if true then p else 5))), (if (true && (! false)) then cos(61.05) else pow(to_float(g), sin(45.05)))))
  let s = i
  return (array[t : (sum[t : (c + c), u : (- to_int(89.79))] u)] (array[u : (if (! true) then s else (- i)), v : to_int(to_float(s))] (if true then {h} else {h})))[argnum]
}

fn m(n[o, p, q] : float[,,], r[s, t, u] : bool[,][,,], v[w] : float[]) : float {
  let x[y] = (if true then (array[x : f, y : argnum] (array[z : q, A : j, B : u] args)[y, e, argnum]) else (array[x : (if false then o else j), y : (- g), z : (- t)] (array[A : x, B : f] args))[{g}{0}, g, g])[p, (if (to_float(i) != (sum[x : q, y : w] 79.41)) then (if (! true) then (array[x : e, y : j] argnum) else (array[x : k, y : k] x)) else (array[x : k, y : o] w))[argnum, e]]
  let z[A, B] = (array[z : p, A : o] to_float((array[B : 148, C : o] z)[i, z]))
  return 6.11
  assert (! (! false)), "C"
  return (- atan2(atan((sum[C : g, D : args[s]] 29.18)), (sum[C : c] (sum[D : (- i), E : y, F : f] to_float(A)))))
}

let n = 509
let o[p, q, r] = (array[o : g, p : n, q : i] g)
fn s() : bool {
  let t[u, v, w] = (array[t : {(! s()), {k, s()}}{1}{0}, u : argnum, v : r] 158)
  let x[y, z, A] = {(array[x : 82] o)}{0}[q]
  let {B[C], {D}} = {(array[B : (sum[B : A] n)] sin((if (! true) then sqrt(10.79) else tan(57.27)))), {y, {w}, d}{1}}
  let E[F, G] = (if (! s()) then (if true then (array[E : d[A, C, n]] (array[F : p, G : 616] p)) else (array[E : C] (array[F : E, G : C] D)))[w] else (if s() then (array[E : (z * y), F : z] (array[G : k, H : C] q)) else (array[E : q, F : j] (array[G : argnum, H : j] E)))[u, u])
  return (acos(to_float(k)) == exp((sum[H : p] sin(to_float(y)))))
}

let t = [tan(tan({args, 21.15}{1})), to_float(to_int(66.71)), sqrt(atan(exp(to_float(n))))]
let u = 533
