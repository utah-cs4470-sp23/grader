fn a({ b : bool, c[d, e, f] : {bool,int}[,,] }, { { g[h, i, j] : int[,,], k : int }, l[m, n] : int[,], { o : float, { p[q, r] : int[,][,], s[t, u] : float[,] } } }, {  }) : float {
  assert (if (asin((if (! true) then acos(98.41) else exp(34.43))) > sin(asin(pow(35.92, 88.07)))) then (if false then {argnum, args, (t <= m)}{2} else (if (if true then (! true) else (b || true)) then (! (! b)) else ((if b then n else u) == d))) else (! ((38.62 / 39.17) >= (tan(69.23) + acos(o))))), "v"
  let v = false
  let w[x, y, z] = (if (array[w : i, x : r, y : m] b)[to_int(o), r, (if b then r else 868)] then {{g}, exp(o)} else {{g}, cos(20.66)}){0}{0}
  return asin({(array[A : r] o), (if b then d else u), to_int(76.63)}{0}[z])
  return (sum[A : argnum, B : i, C : argnum] ({atan(o)}{0} * (asin(sqrt(94.59)) / (o * log(o)))))
}

let b[c, d] = {args, (array[b : (if false then 954 else argnum), c : argnum, d : (argnum / argnum)] (array[e : 85] c)), (array[b : (- argnum), c : 893] (array[d : c, e : argnum] e))}{2}[argnum, argnum]
fn e(f[g, h] : {int}[,], i[j, k] : int[,]) : float {
  let l = d
  let m = cos(asin(sqrt((- to_float(c)))))
  let n[o] = (array[n : to_int(atan(sin((sum[n : j, o : 701] 15.23))))] f)
  let p = e((if (array[p : c, q : (- l)] true)[j, j] then (array[p : {o, j}{1}, q : b[l, l]] {q}) else {f}{0}), b)
  return a({((sum[q : k] p) == atan(m)), (array[q : (h + j), r : d, s : to_int(to_float(k))] {(m != m), (if true then j else q)})}, {{(array[q : c, r : c, s : c] s), ((sum[q : g, r : c, s : d] argnum) + argnum)}, (if (l != 469) then (array[q : argnum, r : argnum, s : h] i) else (array[q : j, r : o, s : k] i))[o, k, (- g)], {to_float(argnum), {(array[q : o, r : argnum] b), (array[q : g, r : d] p)}}}, (if ((false && true) || true) then (array[q : o, r : c] {})[(array[q : g, r : 828, s : c] 829)[d, (if true then argnum else d), h], c] else (if (! (p == m)) then (array[q : j, r : h] {})[(sum[q : l, r : argnum] r), argnum] else {})))
}

assert ((- (if (array[f : 363, g : c, h : argnum] false)[argnum, (sum[f : 926, g : argnum, h : argnum] g), (if true then d else d)] then (d + b[915, c]) else (array[f : c, g : c] c)[(if true then 75 else d), d])) <= c), "f"
assert [(! (array[f : argnum, g : d] true)[333, b[argnum, d]]), (if true then (false && false) else (tan(93.36) == exp(49.14))), true][d], "f"
let {} = (if (! (array[f : (c / c), g : argnum] false)[d, 462]) then (array[f : args[d], g : 146, h : (sum[f : c] (if true then argnum else d))] [{}, {}][f])[(sum[f : argnum, g : c] c), 313, (- (sum[f : (sum[f : c] 457)] d))] else {(if false then {} else {})}{0})
let f[g] = (if (! (d == d)) then {args, to_float(c)} else {[args[d], (- c)], exp(acos(83.26))}){0}
let h[i, j, k] = (if (if (! (if true then false else true)) then [false, (! true)] else [false, true, (! true)])[argnum] then (if ((argnum < d) && (if false then true else false)) then {(array[h : d, i : g, j : g] args), (! true), false} else {(array[h : d, i : argnum, j : d] f), false, false}){0} else (array[h : 93] (array[i : (- h), j : (- 835), k : 656] f))[(if false then 446 else (if (d == c) then 846 else (c % c)))])
let l[m, n] = (array[l : to_int(to_float(b[argnum, j]))] (array[m : 565, n : (j * j)] [argnum, j, d]))[argnum]
let {o} = {{c, g, {n}}}{0}{2}
let p = j
let q[r, s, t] = (if (if (false && (false && true)) then (if (j != c) then (! false) else (d > d)) else (k < c)) then {(if false then h else h), g} else (if false then (if (true != false) then {h, i} else {h, g}) else {h, n})){0}
