let a = asin(acos((sum[a : to_int(sin(66.56)), b : (- argnum)] (- to_float(a)))))
let b = atan(acos(sin((to_float(870) * log(63.17)))))
let {{}, c, d} = {(array[c : (if (! true) then args[460] else (- argnum)), d : 557, e : 341] (if false then {} else (if false then {} else {})))[976, (- (if true then 426 else 618)), (if (if true then (! true) else false) then (array[c : 218, d : 505, e : 44] argnum)[to_int(11.43), (argnum - argnum), args[argnum]] else argnum)], a, argnum}
fn e(f[g] : float[], h : bool[,,]) : bool {
  assert e((array[i : (sum[i : (- g), j : (sum[i : args[g], j : 176, k : (sum[i : g, j : argnum, k : d] d)] (i % g)), k : 24] to_int(acos(7.05)))] asin(sqrt(to_float(d)))), (array[i : to_int((array[i : d, j : 386] c)[to_int(a), argnum]), j : g, k : to_int(tan(asin(69.26)))] (if e((if true then f else f), h) then (! (i < d)) else (i >= args[i])))), "i"
  assert ((to_int(c) - to_int(atan2(sqrt(b), cos(b)))) == (sum[i : to_int((array[i : g, j : d] b)[g, argnum]), j : 668, k : (sum[i : (if (g <= d) then (sum[i : g, j : g] g) else d)] 341)] g)), "i"
  let i = g
  let j[k] = (if (array[j : (- argnum), k : argnum] false)[d, 211] then (array[j : (argnum / i)] {224, f})[g] else {b, {d, f}}{1}){1}
  return (if (array[l : k, m : (sum[l : g] g)] (g > 156))[(- (461 + g)), (if true then (k - g) else g)] then (array[l : argnum] (d < l)) else (array[l : (if false then d else (- k))] ((- c) != 23.2)))[k]
}

let f[g] = args
type h = int
time print "i"

fn i(j[k, l] : bool[,], { m : {}, n[o] : h[], { p : int } }) : h {
  let q = o
  let {r, s[t]} = {{a}{0}, n}
  let {{u}, v[w, x, y], z[A, B, C]} = {{{3.13}, (array[u : argnum, v : k, w : o] cos(a)), (if true then (array[u : k, v : t, w : t] 450) else (array[u : t, v : t, w : t] l))}}{0}
  return (sum[D : A, E : {(array[D : l, E : A] k), j}{0}[w, (A + p)]] D)
  return (sum[D : o, E : g] (- (o - D)))
}

let {} = (if true then {argnum, [{}], (- g)} else {(sum[j : 550] 982), [{}, {}, {}], (sum[j : 665, k : argnum] argnum)}){1}[{(sum[j : argnum] 367)}{0}]
fn j() : bool[,] {
  let k[l] = (array[k : d] j())
  let {m[n, o]} = (array[m : g] {{j()}}{0})[argnum]
  let p[q] = (if ((exp(64.23) >= tan(a)) != {false}{0}) then {n, to_int(acos(a)), [args][to_int(16.45)]} else {{g, l, f}}{0}){2}
  return (if (if (if (58 == o) then {true} else {false}){0} then false else (! {args, 879, false}{2})) then {(array[r : argnum, s : g] j()), k, o}{0}[to_int((c - exp(c))), (argnum / n)] else m)
  return (if (if (! true) then ((if false then (! false) else (false && true)) && (true || m[n, q])) else ((a <= a) || true)) then {{j()}{0}, argnum}{0} else (if (! false) then {m}{0} else m))
}

let k[l, m, n] = (array[k : (array[k : g] [argnum])[(sum[k : g] k)][(array[k : (argnum / d), l : (244 / argnum)] 918)[(sum[k : to_int(43.68), l : g] g), (sum[k : (if false then 389 else d), l : 776, m : d] (- argnum))]], l : (- (- (sum[k : g, l : 897] to_int(c)))), m : to_int((if (d >= argnum) then asin((b % 62.56)) else tan(tan(b))))] j())
let o[p, q, r] = k
