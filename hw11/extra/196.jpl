fn a() : {bool} {
  let b[c] = args
  let {{}, d[e]} = {(if (if (! false) then (to_int(51.0) == 761) else (if false then (! true) else false)) then {} else (if (false || (c >= argnum)) then {} else {})), [c, ((sum[d : c, e : c] (- argnum)) / (sum[d : (sum[d : 4] d), e : c] (c / e)))]}
  let {} = {}
  let f[g] = args
  return a()
}

assert (acos(49.13) >= (sum[b : argnum] sin(to_float((- argnum))))), "b"
write image (if (if (array[b : 118, c : argnum, d : 52] (! true))[(571 + argnum), argnum, to_int(pow(31.37, 12.91))] then (array[b : argnum, c : argnum, d : argnum] false)[((- 763) / (sum[b : argnum, c : 183] argnum)), (sum[b : 71, c : to_int(78.43)] (sum[d : c, e : 923] e)), to_int((14.3 % 3.71))] else true) then (array[b : (sum[b : ((338 % argnum) + 625)] to_int(to_float(b))), c : (- (if (argnum < argnum) then argnum else 775))] {(to_float(argnum) * to_float(515)), atan(acos(24.21)), (sin(63.04) % asin(25.4)), exp(to_float(argnum))}) else (if (((if false then 395 else 568) > (if false then 185 else 766)) || (! (2.76 < 43.19))) then (array[b : {argnum}{0}, c : (if false then argnum else argnum)] {61.38, 55.35, (sum[d : argnum] 1.55), 93.44}) else (array[b : 480, c : (if false then to_int(37.0) else (216 - argnum))] {sqrt(38.78), sin(38.88), tan(21.84), sqrt(48.77)}))) to "b.png"

let b[c] = {[args, (array[b : 3] b)][331], (! ((! false) || (true || false))), ((sum[b : 787, c : (- 418), d : 720] (if false then d else 765)) * argnum)}{0}
show 89.16

let {} = {}
print "d"

fn d() : {bool[]} {
  let e[f, g] = (array[e : c, f : argnum] pow(acos(log(exp(43.51))), (array[g : argnum] tan(46.62))[argnum]))
  let {{h, {{i}}, j}, k} = {{(sum[h : (198 + args[argnum])] asin(pow(49.0, 19.27))), {(array[h : c, i : c, j : c] d())[g, (900 + c), (if true then c else argnum)]}, atan(sin(atan(73.21)))}, (! true)}
  let l[m, n, o] = (if (array[l : (881 % g), m : argnum] i[l])[argnum, f] then {(array[l : g, m : (- argnum), n : (if false then argnum else c)] c), e} else {(array[l : c, m : g, n : argnum] to_int(7.23)), (if (g == 315) then e else e)}){0}
  let p = o
  return (if ((false || (! k)) && (k && (! k))) then (if (f == (argnum % o)) then (array[q : c, r : p, s : n] d()) else (array[q : (sum[q : g, r : n, s : n] c), r : m, s : n] d())) else (if false then (array[q : n, r : f, s : (n * p)] (if k then d() else d())) else (array[q : c, r : 631, s : p] {i})))[{535}{0}, l[700, (298 * argnum), p], (if k then c else (if (if (if true then true else k) then false else (97.3 <= 49.18)) then g else g))]
}

assert (! ((if ((sum[e : c, f : c, g : argnum] g) == c) then 348 else 766) != (c * {argnum, c}{1}))), "e"
fn e() : {bool[,],{},int} {
  return e()
  let {{f}, g[h]} = (if ((- (- 48.69)) != exp(63.04)) then {(argnum < 990), {d(), b}} else (if true then {true, {d(), b}} else {(568 == 82), {d(), args}})){1}
  assert ((sum[i : h] h) == (h + argnum)), "i"
  let i = 296
  return {(array[j : [h, h, i][(sum[j : argnum, k : h] h)]] (array[k : c, l : argnum] (l == 88)))[14], {(array[j : 629, k : argnum] {}), 25.0, i}{0}[argnum, (- i)], (if ((! f[i]) && (true && true)) then to_int(exp((if true then 76.62 else 8.96))) else {argnum}{0})}
}

let f[g, h, i] = (if (! [false][(sum[f : 19, g : c] c)]) then (if ((c == argnum) || (! true)) then (array[f : (- 905), g : c, h : to_int(70.73)] (array[i : argnum, j : argnum, k : argnum] args)) else (array[f : to_int(84.94), g : argnum, h : (sum[f : c, g : 406, h : argnum] c)] (array[i : 606, j : argnum, k : h] args))) else (array[f : argnum, g : 63, h : 687] (array[i : 857, j : g, k : (- argnum)] (array[l : h] i))))[(sum[f : c, g : argnum] 312), 430, (- c)]
let {} = {}
