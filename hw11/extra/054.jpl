fn a({ b : float }, c : float[]) : float {
  assert (! true), "d"
  let d[e, f] = (array[d : to_int(pow(pow(b, 97.93), b))] {(array[e : 52, f : argnum] args), args}{0})[argnum]
  let g[h] = [to_float((- argnum))]
  assert [{(if true then argnum else e), g, false}{2}, (if false then (array[i : argnum, j : 877] false) else (array[i : e, j : f] true))[(- e), h], ((! (h != argnum)) || (! false))][(h * to_int(asin(81.72)))], "i"
  return tan((- sin(exp((if true then 45.22 else b)))))
}

type b = float
read image "c.png" to c

let d = (atan2(atan(exp((sum[d : 776, e : 977, f : argnum] 59.72))), acos(tan(tan(66.83)))) >= {(array[d : argnum] 89.44)}{0}[(- 156)])
read image "e.png" to e[f, g]

let h[i] = [pow((sum[h : (if (! d) then args[222] else args[f]), i : (- (if true then argnum else argnum))] asin(6.1)), (array[h : (sum[h : g, i : argnum] g), i : g] exp(54.29))[(array[h : g, i : g, j : f] h)[(f / f), (- g), (555 + g)], argnum])]
let j[k] = {((if d then f else f) == i), e, (array[j : 328, k : 546] args)}{2}[g, i]
fn l(m[n, o] : float[,], { p : b }) : float {
  let q = (acos(log(sin(tan(99.46)))) % exp(6.83))
  let r[s, t] = e
  let u = s
  return tan((- sin(atan2(sqrt(q), (if d then q else p)))))
  return m[466, (array[v : g, w : f] {args, p, v})[(t / o), u]{2}]
}

let m = to_int((array[m : (if d then args else args)[k], n : g, o : (if (true && d) then g else argnum)] atan(atan(56.77)))[(sum[m : k, n : argnum, o : argnum] (k / g)), g, k])
fn n(o : int, p[q, r, s] : float[,,]) : b {
  return 13.93
  let t = false
  let u[v, w, x] = p
  assert (k < argnum), "y"
  return atan2(atan((- (sin(51.95) - to_float(f)))), cos((array[y : s] to_float(y))[x]))
}

let o[p, q] = (if (array[o : f, p : g] (! true))[i, (- i)] then (if (399 > (- g)) then {703, c, (array[o : 792, p : 11] c)} else {g, e, (array[o : f, p : k] e)}) else {(sum[o : g, p : g] k), c, (array[o : m, p : k] e)}){2}
print "r"

