read image "a.png" to a

print "b"

let {} = (if (2.58 < to_float((if false then argnum else 582))) then {(if (if false then true else true) then {} else {}), (! (! false))} else {{{}, args}{0}, ((argnum * 220) <= argnum)}){0}
let b[c, d, e] = (if (! (((if true then 841 else argnum) * (- argnum)) == to_int(17.08))) then {(array[b : 819, c : (71 % argnum), d : argnum] (b == c))}{0} else (array[b : (if (false || (! false)) then (- (if false then 93 else 790)) else argnum), c : 224, d : 62] ((! (! true)) && false)))
read image "f.png" to f

let g[h] = [b, (if true then (array[g : (- c), h : c, i : argnum] b) else (array[g : (e - e), h : (c * 59), i : 382] (array[j : i, k : h, l : g] true)))[(- e), (if (array[g : c] false)[argnum] then c else d), e], {(array[g : 377, h : 126, i : e] b)[d, (- argnum), (argnum * argnum)]}{0}]
fn i() : bool[,,][] {
  let {j} = (if (e != (if (array[j : h] false)[h] then 283 else (if (! true) then 454 else c))) then (if (array[j : d, k : h] false)[h, (if (false || false) then (sum[j : c, k : e, l : d] l) else e)] then {31.09} else (array[j : args[h]] {67.8})[argnum]) else (if {(30.07 != 62.3)}{0} then {atan((sum[j : e] 14.35))} else {exp((- 15.89))}))
  let k[l] = g
  let m[n, o] = (if {b[d, l, e]}{0} then (if (true && true) then {f, 692} else {f, (- e)}) else {{c, f}{1}, (array[m : argnum] d)[(c + 930)]}){0}
  let p = c
  return (array[q : (if (l >= to_int((sum[q : e, r : 386, s : argnum] j))) then (if (p < o) then {false, n, 85.26} else {false, n, j}){1} else n)] (array[r : d, s : l, t : (sum[r : n] {q, c, b}{0})] false))
}

let j[k] = [sin(atan2(acos(cos(21.68)), sqrt(cos(30.55))))]
let l = asin(sin(exp(tan(to_float(c)))))
let {{}, m[n], o[p, q, r]} = (array[m : (if true then e else k), n : ((996 * c) / argnum)] {cos(55.61), {{}, g, b}})[(d + d), c]{1}
fn s({  }) : bool {
  let t[u] = g
  return (if (sin(((if true then l else 87.96) + l)) <= 93.82) then (k != 9) else (tan((j[u] / asin(93.07))) != atan2(to_float((if true then d else k)), (- to_float(argnum)))))
  let v = m
  let {w, x} = {{{i()}, l}}{0}
  return ((! s((if (! true) then {} else (if true then {} else {})))) || o[((if (e < k) then n else (sum[y : n, z : n, A : d] d)) - c), u, q])
}

fn t(u : int) : {float,{bool},{{}}} {
  let {v, {w[x, y, z]}, A[B]} = {asin(tan(l)), {(if true then {b} else {b})}{0}, g}
  assert (atan2((if o[h, h, r] then (array[C : h, D : n] l) else (array[C : e, D : x] 11.24))[(- n), (if s({}) then B else y)], sin(l)) < sqrt(v)), "C"
  let C[D, E] = a
  assert s({}), "F"
  return t(D)
}

