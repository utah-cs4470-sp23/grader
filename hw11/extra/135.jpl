type a = {float[]}
fn b(c : {bool,bool,{int}}, d[e] : {}[], { { f : {a,a[,,]}, g[h, i] : int[,] }, {  } }) : a {
  return (if (pow(pow(atan(31.51), sqrt(61.95)), 92.54) < to_float(i)) then {(if (false || (! true)) then (array[j : 720] pow(60.19, 80.22)) else (array[j : (- 924)] (61.78 % 22.77)))} else {(array[j : argnum] sin((- 4.46)))})
  assert (! (e != (sum[j : (if c{0} then i else (if false then i else argnum))] i))), "j"
  let j[k] = {{false, (if true then args else args)}}{0}{1}
  let l[m, n, o] = (array[l : argnum, m : args[(- (k - e))]] (array[n : g[m, k], o : to_int(93.39)] f{1})[i, argnum])[90, to_int(atan(to_float(i)))]
  return b({(if (to_float(k) <= 50.79) then (! c{0}) else c{1}), (! ((e >= o) || (false || false))), {(933 - i)}}, d, {{(array[p : o] f)[(- m)], {k, g, f}{1}}, {(- k), {}}{1}})
}

let c[d] = args
fn e({ { { {  } } }, f : {float} }) : a {
  let g = (d >= (sum[g : (804 * 170)] d))
  let h[i, j] = (array[h : to_int((sum[h : (- argnum), i : {d}{0}] pow(log(4.51), acos(78.44)))), i : {d}{0}] g)
  let {{}} = (if (if (atan(27.05) >= atan(36.5)) then (! (! false)) else (39.58 != log(44.87))) then (if g then {{{}}} else {{{}}}) else {(if (! false) then {{}} else {{}})}){0}
  let {k} = {(true != ((to_float(105) == sin(12.54)) || false))}
  return {cos(pow(99.73, acos(85.65))), {(array[l : (- 214)] log(20.95))}, {k}}{1}
}

fn f(g : int, {  }, { h : int, i : {float} }) : float {
  let j[k, l, m] = (array[j : (if (if (true || false) then false else false) then argnum else argnum)] (array[k : (if false then argnum else 392), l : (- h)] (array[m : g, n : 687, o : l] c))[(array[k : h, l : j] g)[d, (sum[k : g, l : argnum, m : g] l)], d])[(if (! (h != h)) then [654, (sum[j : argnum, k : g] g), 768] else {args}{0})[g]]
  assert true, "n"
  let n = e((if ((array[n : 97] false)[(- m)] || (! false)) then {{{{}}}, (array[n : 551, o : h] i)[m, (k - 826)]} else {{{{}}}, i}))
  let o[p, q, r] = (array[o : {n, h}{1}] {(array[p : h, q : d, r : argnum] g), {o}})[m]{0}
  return {tan(41.05), n{0}}{1}[h]
}

fn g(h[i] : bool[]) : float[,,] {
  return g(h)
  let {{j[k, l, m], n[o], {p[q, r, s]}}} = {{(array[j : d, k : d, l : d] g(h))[i, (- (if true then argnum else d)), 694], c, {(array[j : argnum, k : i, l : (734 + d)] c)}}}
  let {} = {}
  let {} = [(if (r == q) then (array[t : q, u : q] {}) else (array[t : q, u : 831] {}))][o][s, s]
  return (if [h[d]][argnum] then (array[t : (if h[m] then {j, argnum, args} else {j, q, args}){1}, u : argnum, v : ((264 % d) + argnum)] (tan(to_float(o)) + sqrt(to_float(v)))) else (array[t : to_int(atan(97.18)), u : (- {k}{0}), v : (sum[t : k, u : i] s)] exp(cos(cos(15.26)))))
}

let h = (args[(if (d <= (- d)) then argnum else ((- argnum) + (- 843)))] != (sum[h : {d}{0}, i : d, j : {(- 989), (! false), (sum[h : argnum] h)}{2}] i))
fn i(j : {int}, k : {bool}, l[m, n, o] : float[,,]) : int {
  let {{}, p, {q}} = (if h then [{{}, argnum, j}, {{}, (if true then d else n), (if true then j else j)}] else [{(if true then {} else {}), (if h then m else o), j}])[(if (atan((- 95.95)) == pow(to_float(n), to_float(o))) then n else n)]
  assert {(if (if h then true else h) then (array[r : p, s : o, t : m] false) else (array[r : p, s : q, t : 299] true))}{0}[to_int(tan(log(atan(84.46)))), (array[r : 835, s : (m / q)] {o, o})[(sum[r : 416, s : q] r), i(j, {true}, l)]{1}, m], "r"
  let {r} = {[(array[r : p, s : p] o)[420, (if false then p else o)]][p]}
  let {s[t]} = {n, [{c}, {args}]}{1}[m]
  return {(! (! true)), p}{1}
}

let {{j, k, l[m, n]}, o[p, q, r], {}} = {{{(sum[j : argnum] argnum), to_float(588), (array[j : 980, k : 973] 42.83)}, (if h then (array[j : 42, k : d, l : argnum] j) else (array[j : 844, k : argnum, l : d] j)), (array[j : 427] {})[(if false then argnum else d)]}}{0}
let {s, t[u, v]} = {(array[s : p] {k, l}), n}{0}[(if {false}{0} then (if ((p == 931) || (h || true)) then n else (m / 359)) else n)]
fn w(x[y, z] : int[,][,]) : float {
  let A = to_float(v)
  let B[C] = (if ((! h) && (sqrt(A) < tan(k))) then {(if (p == v) then [args] else (array[B : v] c)), s} else {(array[B : to_int(36.8)] (array[C : z] C)), {v, A, t}{1}}){0}
  let {{D[E, F, G], H[I, J], K}, {L[M, N], O, {{P, Q}}}} = {(if (! ((sum[D : d] p) > p)) then {o, (array[D : j, E : 349] atan2(s, 6.64)), o} else {{o, args}{0}, l, (array[D : argnum, E : (- y), F : z] (- y))}), {(array[D : z, E : C] A), {}, (if (if (! h) then h else (false || h)) then {{p, z}} else {{n, j}})}}
  let R[S, T, U] = o
  return tan(atan(k))
}

fn x(y[z, A, B] : {}[,][,,]) : a {
  let C = j
  let D = argnum
  let E[F, G, H] = g({[false]}{0})
  let I = g((if true then (array[I : v, J : (- r)] (array[K : n] h))[argnum, 304] else [(h && (if false then h else h)), (t[C, F] > sqrt(32.5)), (d < C)]))
  return (array[J : d, K : d, L : to_int(atan(l[G, B]))] {(array[M : v] tan(30.68))})[G, u, G]
}

