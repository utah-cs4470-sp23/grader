fn a() : {bool,int,bool} {
  let b[c] = args
  let d[e] = (if (87.66 == to_float(argnum)) then {(array[d : 852, e : c] args)} else {(array[d : c, e : 668] args)}){0}[((sum[d : to_int(to_float(c))] (if false then (- c) else (- c))) - 604), {(array[d : 207, e : c, f : c] argnum)}{0}[{148}{0}, argnum, (if (! true) then argnum else ((- argnum) % (- c)))]]
  let f[g, h] = (if {(false || false), log(56.85)}{0} then {acos(to_float(117)), true, (if (612 < 920) then (array[f : c, g : c] c) else (array[f : argnum, g : argnum] e))} else {atan2(to_float(e), to_float(e)), ((c % 863) != (- 445)), (array[f : (- e), g : to_int(91.88)] g)}){2}
  return (if true then {{argnum, c}, a(), [a()]} else {{h, h}, a(), (array[i : c] a())}){2}[b[(if (a(){2} || (g == c)) then h else g)]]
  return (if true then (if (e < e) then (array[i : h, j : argnum, k : e] a()) else (array[i : (g + 740), j : c, k : argnum] a())) else (array[i : e, j : (to_int(39.57) - argnum), k : e] {(964 > h), (sum[l : j, m : j] e), (j < g)}))[c, (sum[i : g, j : e, k : (if false then e else (- (sum[i : h, j : argnum] c)))] j), (sum[i : (to_int(acos(42.06)) / (e / e)), j : (array[i : g, j : c] 763)[c, (- g)], k : {argnum, sqrt(70.66), argnum}{0}] ({g, b, i}{0} * h))]
}

let b = asin(atan2(sqrt(acos(atan2(24.16, 3.21))), cos(exp(tan(89.95)))))
assert true, "c"
show log({{b}, acos(b)}{0}{0})

write image (array[c : {asin(10.55), (array[c : argnum, d : argnum, e : argnum] 898)}{1}[(sum[c : to_int(acos(b)), d : (- to_int(b)), e : to_int(b)] {d}{0}), (- (804 + 741)), (((if false then 944 else argnum) - 789) + to_int(acos(61.37)))], d : argnum] {19.37, (sum[e : {3.41, 445, 519}{2}, f : argnum] (9.53 - atan(b))), pow(acos(acos(68.92)), pow(cos(b), 80.06)), atan2(atan(b), (sum[e : c, f : d] to_float(argnum)))}) to "c.png"

fn c() : float[] {
  let d = 8.83
  let e = (- (- (- {b, argnum}{1})))
  return (if (((! (true || true)) || ((false && true) && false)) == {(! true), cos(d)}{0}) then (array[f : (if false then {782} else {argnum}){0}] (- (array[g : 941] b)[(sum[g : 334, h : e] 659)])) else (if (! (false || false)) then [c()] else (array[f : (sum[f : e, g : 31, h : 736] g)] (if false then c() else c())))[to_int(b)])
  let f = 10
  return (if (if ((e % argnum) == 890) then {true, a(){0}} else {(122 >= argnum), (f <= argnum)}){1} then (if (array[g : argnum, h : e, i : (sum[g : argnum, h : e] 496)] false)[to_int(atan(d)), (sum[g : e] argnum), f] then (array[g : (argnum / f), h : 943, i : (- argnum)] c())[(if (f > e) then argnum else e), ((if true then e else 272) - (- 99)), argnum] else c()) else c())
}

let {} = (if (if (array[d : 608] false)[(if (true || true) then 608 else (argnum % argnum))] then ((if true then sin(41.41) else b) > (if (73 == 337) then tan(b) else 38.38)) else false) then {} else {(array[d : argnum, e : 681, f : 802] {})}{0}[(sum[d : (sum[d : (if false then 107 else 226)] d), e : to_int(sin(74.95))] to_int(sin(48.35))), ((639 % argnum) * (array[d : 120, e : argnum, f : 79] f)[argnum, (- 847), a(){1}]), (if (if (argnum > argnum) then (28.7 < b) else true) then 138 else {true, argnum}{1})])
fn d(e[f, g] : bool[,], h[i, j] : float[,], k[l, m, n] : int[][,,]) : int {
  let o[p] = c()
  assert true, "q"
  let q[r, s, t] = (array[q : (sum[q : d(e, (array[q : args[n], r : l] to_float(g)), (array[q : (- argnum), r : g, s : to_int(b)] args)), r : (if (b > 72.0) then {h, f} else {h, i}){1}] (if true then (array[s : r, t : m] m) else (array[s : i, t : p] s))[(array[s : m, t : j] f)[f, to_int(26.78)], 897]), r : ((- (- (n - i))) * p), s : m] a())
  let u[v] = (array[u : j] q)
  return g
}

let {e[f, g, h]} = {(array[e : (sum[e : to_int(74.84), f : args[argnum], g : argnum] 639), f : (863 - argnum)] (if (! false) then (array[g : argnum, h : 330, i : e] h) else (array[g : 746, h : e, i : f] g)))[(if (24.6 >= pow(b, b)) then (sum[e : (sum[e : 814] 22), f : argnum, g : to_int(78.38)] (sum[h : 398, i : 564, j : g] j)) else (array[e : 854, f : argnum] e)[(- 124), 483]), to_int(log(acos(30.89)))]}
assert (if (array[i : h] true)[f] then {39, {false, argnum}, args} else {argnum, {true, 52}, [argnum, g]}){1}{0}, "i"
fn i() : {}[,,] {
  let j = cos(pow(cos(asin(tan(64.16))), (array[j : argnum, k : argnum, l : argnum] exp(b))[(- g), (if (if true then false else true) then (if true then argnum else 587) else g), argnum]))
  let k = a()
  assert (h == (sum[l : (if true then args else (array[l : argnum] g))[{i(), f}{1}], m : args[(array[l : f, m : f] m)[to_int(b), g]], n : {(sum[l : 700] 363), argnum, j}{0}] argnum)), "l"
  let l = (sum[l : [{f, h, c()}][(argnum - g)]{0}, m : (if (if true then true else (b <= j)) then {(if false then 606 else g), k} else {g, a()}){0}, n : to_int(sqrt(sqrt(acos(b))))] to_float(n))
  return (array[m : (sum[m : 498, n : (g - (- (g - g)))] m), n : 655, o : (- (array[m : h, n : (if false then argnum else 23)] argnum)[(if (g < argnum) then to_int(l) else 414), ((sum[m : f, n : g, o : argnum] 60) * 723)])] (array[p : (argnum * f), q : (sum[p : 364, q : h, r : n] p), r : n] (array[s : m, t : q] {}))[(sum[p : argnum, q : f] (- n)), m, f][(if (if (l > b) then (m != 24) else false) then (array[p : o, q : o, r : h] g)[925, to_int(2.02), h] else m), f])
}

let j[k] = args
