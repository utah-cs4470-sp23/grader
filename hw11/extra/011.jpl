fn a() : float[] {
  let b[c, d] = (array[b : ((argnum % argnum) + (argnum % argnum)), c : {653}{0}, d : to_int(asin(90.93))] {(array[e : 793, f : argnum] args), false, c})[(sum[b : {208}{0}, c : (- (- 622))] b), 631, to_int({787, 4.52}{1})]{0}
  let e = 104
  return (array[f : {14, e, argnum}{0}, g : (sum[f : to_int(16.96), g : (- argnum)] e)] {{b, g}, (array[h : d] 46.98), args})[{(- argnum)}{0}, (sum[f : c] c)]{1}
  let {{f[g, h, i]}} = (array[f : (array[f : 908, g : d] e)[(sum[f : e] (sum[g : f, h : e, i : d] argnum)), 411], g : (if (! false) then {argnum} else {e}){0}, h : {cos(23.91), 784}{1}] {{(array[i : h, j : h, k : h] argnum)}})[(if (! ((true && false) || (! false))) then {61, to_float(c), (sum[f : d, g : argnum, h : argnum] 38)}{2} else e), (array[f : to_int((sum[f : c, g : e] 80.77)), g : c, h : 259] 531)[c, {c, false, (array[f : argnum] a())}{0}, 557], argnum]
  return (array[j : h] sqrt(a()[(if true then 734 else argnum)]))
}

let b = exp((if (a()[argnum] <= asin(76.62)) then {asin(46.97), tan(45.36), to_float(argnum)} else {sin(31.08), sqrt(72.6), 30.65}){2})
write image (if {acos(40.21), (atan2(b, 24.5) / 92.76), {false, {}}{0}}{2} then [(array[c : (if true then 97 else 76), d : to_int(b)] {4.1, 4.7, 63.95, b})][({433, args}{0} - (- (argnum % 520)))] else (if (! (92 != to_int(b))) then (array[c : argnum, d : 972] {to_float(969), atan2(b, 45.74), tan(b), sin(37.11)}) else (array[c : {argnum}{0}, d : {669}{0}] {atan2(44.38, 25.86), to_float(c), 98.51, to_float(c)}))) to "c.png"

time print "c"

fn c({ d : bool, { e[f, g, h] : bool[,,] }, i : {bool,bool} }) : {{float,int},bool} {
  return (if {(array[j : h, k : g] d)}{0}[14, f] then (if (if {d}{0} then d else (array[j : f] false)[(if false then argnum else h)]) then {{29.46, g}, true} else c({(if d then d else d), {e}, i})) else c((if ((sum[j : argnum, k : h] g) == f) then {(g != h), {e}, {true, true}} else {(f != h), {e}, i})))
  assert (if ((false || (d && d)) || (h >= (g / h))) then [{e, false, false}][argnum] else {{e}{0}, (to_float(argnum) >= log(56.37)), (d != (if d then d else true))}){1}, "j"
  let {j[k, l], m} = (if true then {(array[j : (- h), k : (array[j : f, k : f, l : argnum] h)[f, argnum, (705 / f)]] j), atan((- tan(b)))} else {(array[j : (if false then g else h), k : 526, l : (- h)] (array[m : f, n : g] l))[argnum, {d, argnum, e}{1}, h], exp(tan(b))})
  let {n[o, p, q]} = (if ((e[(g / h), argnum, 39] && (f > (if d then g else g))) == {e}{0}[f, to_int(b), (- f)]) then {(if ((! d) || i{0}) then (array[n : h, o : argnum, p : 454] 915) else (if d then (array[n : h, o : l, p : l] f) else (array[n : argnum, o : l, p : 310] n)))} else {i, {(array[n : f, o : 304, p : f] l)}}{1})
  return (if (true || (argnum >= (if true then q else g))) then {sin(50.34), {{b, h}, false}} else {cos(86.22), {{m, l}, false}}){1}
}

let d[e, f] = (if ((array[d : (sum[d : 50] argnum), e : to_int(b)] to_float(e))[(array[d : argnum, e : 674, f : argnum] argnum)[(sum[d : 248, e : argnum] 17), argnum, (argnum / 115)], (argnum - (- argnum))] == sin(atan2(sqrt(b), (- b)))) then {(array[d : (if true then argnum else 620), e : (argnum % 231)] (d == 609)), (sum[d : (- argnum), e : 459, f : (- 458)] b)}{0} else (array[d : {(- 33.3), to_int(51.47)}{1}, e : argnum] ((! (false && false)) || (array[f : d, g : argnum, h : e] false)[argnum, (sum[f : 646, g : 200] f), (if true then d else d)])))
let {g, h[i]} = (array[g : (344 * argnum), h : f, i : {argnum, a(), d}{0}] (array[j : argnum, k : e] {f, args}))[(array[g : (- 561), h : (f * e)] (sum[i : h, j : f, k : 52] h))[to_int((sum[g : 966, h : 538] 0.27)), {718}{0}], 301, (array[g : e] argnum)[620]][(if ((if (735 >= f) then (argnum > 103) else (true || false)) || (true && true)) then to_int(88.19) else (array[g : (297 % 216), h : 351] (sum[i : e, j : g] j))[{e, argnum}{0}, 724]), (- 271)]
print "j"

fn j(k[l] : int[]) : float {
  let m[n, o, p] = {199, {19.73, (array[m : i, n : 971, o : l] args)}}{1}{1}
  return atan((if (! false) then 45.73 else a()[g]))
  assert true, "q"
  let q[r, s] = (if (array[q : f, r : (- g)] (o <= i))[p, 324] then (array[q : (if (o != n) then argnum else f), r : g] d) else (if (d[n, i] || (o < argnum)) then (array[q : argnum, r : (- argnum)] d) else (array[q : (sum[q : g] i), r : e] (array[s : r, t : f] false))))[{{f, args}}{0}{0}, p]
  return atan({(cos(b) - sqrt(53.76)), ((- f) % argnum)}{0})
}

let k[l] = args
let {{m[n, o]}, {{}, p[q]}} = {(if (array[m : (sum[m : f, n : 445, o : e] g), n : (sum[m : f] f), o : (- f)] d[argnum, argnum])[e, l, 156] then {d} else (array[m : argnum] {d})[argnum]), (if (acos(acos(b)) <= 38.0) then (if (array[m : argnum] false)[(sum[m : i, n : e] i)] then (if (false && false) then {{}, a()} else {{}, a()}) else (if (! true) then {{}, a()} else {{}, a()})) else {(array[m : f, n : i, o : f] {})[(- l), e, i], [sin(b), exp(b)]})}
assert ({g, (if false then d else d)}{1}[o, n] || true), "r"
