fn a() : int {
  let b = pow(tan(((76.26 / 53.02) % sin(76.55))), pow(tan(cos(sin(59.05))), to_float(501)))
  let {c[d, e]} = {{(array[c : (- argnum), d : 604] d)}, log(atan2((- 69.51), exp(b))), asin(asin(sqrt(58.23)))}{0}
  let {} = {sqrt((sum[f : 743] 56.28)), argnum, {{}}}{2}{0}
  return ((sum[f : argnum, g : e, h : argnum] e) - a())
  return (- (if (argnum <= (sum[f : d] argnum)) then e else e))
}

let b = asin(to_float(argnum))
let c = (117 * 239)
let {d, e} = (array[d : c, e : (if (false || true) then 196 else c), f : ((- 181) % c)] (array[g : e, h : 445, i : (if false then e else e)] {h, b}))[a(), ({c, b, c}{2} % (- (sum[d : 696] a()))), argnum][(631 % (sum[d : (sum[d : 35, e : (sum[d : c, e : a(), f : 87] argnum), f : argnum] (196 - d))] d)), a(), 844]
fn f(g[h, i, j] : bool[,,], k : int) : bool {
  let l[m] = args
  let {{}, n, o} = {[(if (313 < h) then {} else {})][j], (if (if (sqrt(17.85) <= b) then true else ((! true) || (! true))) then d else k), e}
  let p[q, r, s] = (if (if ((- o) > (sum[p : n, q : 519, r : h] b)) then (m != (c % 291)) else (if true then false else false)) then {{j, g}}{0} else {a(), (if false then g else g)}){1}
  assert (f({p}{0}, i) == true), "t"
  return (m > n)
}

let {g, h, i} = {argnum, {}, (a() == (- (sum[g : (a() * c), h : argnum] c)))}
let j[k, l, m] = (if ({false}{0} && (((false || false) != (c != c)) || (c != a()))) then (array[j : argnum, k : to_int((sum[j : argnum, k : (d % argnum)] 39.07)), l : ((c - (- a())) + (- c))] i) else (array[j : to_int(sqrt(b)), k : (if (d == d) then c else c)] (array[l : 904, m : k, n : to_int(67.23)] (true || i)))[d, (- argnum)])
let n = 22.31
let {o[p, q], {r, s}} = (if false then (array[o : a(), p : (sum[o : (sum[o : l, p : k] p), p : to_int(e), q : c] argnum)] {(array[q : l, r : 657] d), {args, argnum}})[to_int(cos(b)), k] else {f((array[o : argnum, p : l, q : argnum] false), d), c, {(array[o : 470, p : k] p), {args, l}}}{2})
write image (array[t : to_int(cos(acos(n)))] (array[u : (array[u : g, v : q] s)[m, l], v : c] {exp(80.09), b, e, to_float(c)}))[(if false then (array[t : l, u : a(), v : k] l)[c, (if (! true) then k else (- a())), c] else c)] to "t.png"

time let t = args
read image "u.png" to u[v, w]

