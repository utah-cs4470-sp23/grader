fn a(b[c, d, e] : {int}[,,], f[g, h] : bool[,], i[j, k, l] : {}[,,]) : float {
  return atan2(59.89, (if {(array[m : c, n : 170] b), to_int(93.14), (e < k)}{2} then acos(atan2(a(b, f, i), 81.81)) else acos(asin(21.37))))
  let {} = (if (d >= e) then (if f[g, (e + 954)] then (if (! false) then (array[m : e, n : e] {}) else (array[m : l, n : l] {})) else (array[m : g, n : e] {}))[argnum, (if (true && (! false)) then d else argnum)] else {{}}{0})
  let m = {{args, false, false}}{0}{0}[argnum]
  let {n, o, p[q, r, s]} = (array[n : [args, args][(- h)][(sum[n : g, o : argnum, p : m] (- h))]] {{args, g, i}}{0})[to_int(to_float(l))]
  return a((array[t : c, u : (d - d), v : k] {b})[e, l, o]{0}, (array[t : m, u : q] ({false}{0} || true)), {p}{0})
}

assert (((false || (! false)) && true) || false), "b"
let b = to_float((- {77.52, (sum[b : argnum, c : 578] 551), (! true)}{1}))
assert ((cos((- exp(13.96))) / 8.4) == asin((- atan(atan(42.1))))), "c"
let c[d, e, f] = {{exp(b), (array[c : argnum, d : argnum, e : 382] e)}}{0}{1}
let {} = (if (array[g : argnum, h : f] (argnum == h))[(if true then d else argnum), ((sum[g : 298] 925) % (if true then d else d))] then (array[g : (if false then d else (sum[g : argnum] g)), h : (array[g : argnum, h : argnum] g)[argnum, f], i : (e * d)] {}) else (array[g : (- (argnum % argnum)), h : 851, i : to_int(asin(b))] (if (! false) then {} else {})))[d, argnum, d]
let g = c
let {h[i]} = {(array[h : e] args)[f]}
let j = sqrt(log(tan(cos(acos(b)))))
fn k() : int {
  return (sum[l : e, m : 865, n : e] l)
  assert (! false), "l"
  return 705
  let {} = [(if (! false) then (array[l : argnum, m : argnum] {}) else (array[l : i, m : d] {})), (array[l : i, m : k()] {}), (array[l : i, m : (if true then argnum else f)] (if true then {} else {}))][(if (if (e == f) then false else false) then e else (- k()))][e, to_int((- (sum[l : f, m : g[d, i, 92]] (- j))))]
  return (sum[l : argnum, m : k()] (984 + (- argnum)))
}

let l[m, n] = (array[l : (if {f, (f <= argnum), atan2(95.88, b)}{1} then e else to_int(38.26)), m : to_int(cos(sqrt(sqrt(15.87))))] (sum[n : f, o : 336] (- o)))
let o[p, q, r] = g
