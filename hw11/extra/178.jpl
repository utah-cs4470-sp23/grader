fn a({ b[c] : bool[,,][] }, d : {}) : float[,] {
  let e[f] = [atan2(sin(tan(log(45.23))), cos(acos(sqrt(95.21))))]
  let g = atan2(pow(pow(sqrt(cos(70.72)), pow(39.33, sin(65.74))), 54.83), cos(cos((asin(66.28) % tan(40.16)))))
  let {h} = (if (g != (- to_float(f))) then (array[h : (sum[h : 601] (sum[i : f] 415)), i : ((argnum % c) / c)] {d}) else (if (f < (argnum / c)) then (array[h : argnum, i : 64] {d}) else (array[h : (sum[h : c, i : argnum, j : 895] j), i : c] {d})))[(if ((c - (- c)) >= ((sum[h : argnum] 863) - (- f))) then to_int((log(89.21) % g)) else (sum[h : (sum[h : c] to_int(g))] ((sum[i : c] f) % (if false then 296 else h)))), f]
  let i = (- to_float(({283, argnum}{1} + (argnum % c))))
  return {exp(i), c, (array[j : ((sum[j : 647, k : c, l : 39] c) - c), k : (- to_int(g))] i)}{2}
}

fn b() : float {
  let {} = (if (43.81 < cos(asin(54.34))) then {{{}}}{0} else {{argnum}, {{}}}{1}){0}
  let c = exp(b())
  let d[e, f] = (array[d : {{false, c}{1}, (if (argnum < 3) then argnum else argnum), tan(sin(c))}{1}, e : (- (- argnum))] (- exp((sum[f : d, g : (- e)] b()))))
  assert (if false then false else ({(15.33 > c), atan2(c, c)}{0} && (if (array[g : f, h : argnum, i : f] false)[(714 % argnum), argnum, (e % e)] then (! (b() != c)) else ((argnum >= 470) || (56.21 > c))))), "g"
  return to_float(e)
}

let c[d] = args
let {e[f, g], {{{}}, h, i}} = {(array[e : (if false then (if false then d else argnum) else (- (- argnum))), f : {c, asin(b()), (sum[e : 850, f : argnum] f)}{2}] pow(sin(b()), acos(log(11.31)))), {{{}}, to_float(((- d) % (argnum + 800))), cos(cos(asin(60.82)))}}
let j[k] = [19.65, (if [false, false][f] then to_float(to_int(acos(b()))) else log(h)), asin(h)]
fn l(m[n, o] : {float,bool,float}[,], { p : float, q : bool, r[s, t] : bool[,] }, u[v] : bool[]) : int {
  return {sin(atan(j[n])), k}{1}
  return [(n - f)][o]
  let {} = {{{}, false}, q}{0}{0}
  assert ((if r[(if (o == k) then v else d), k] then q else {(i / h), k, u[t]}{2}) || q), "w"
  return (if (q || (! (true && q))) then l((if (sqrt(75.24) == cos(h)) then (array[w : f, x : f, y : v] m)[s, (if true then d else 803), 304] else m), {{p, q, r}, v}{0}, (if true then {u}{0} else (array[w : v] (d == f)))) else l((if (p == b()) then (array[w : o, x : argnum] m) else (array[w : 119, x : v] m))[(if q then t else 426), (sum[w : f, x : f, y : k] g)], (array[w : 68] {h, false, r})[(if (! true) then args[d] else d)], u))
}

let {m, {{n, {o, p[q]}, r}, s, {{t, u[v, w], {x, y}}}}} = {argnum, {{f, {argnum, j}, (to_int(i) == (if false then argnum else 651))}, i, {{cos(26.18), e, {h, args}}}}}
let z[A, B] = a((if [(! r), (q > o), (argnum >= w)][(array[z : n, A : f, B : n] o)[n, o, n]] then {[(array[z : d, A : g, B : w] r), (array[z : argnum, A : o, B : m] false), (array[z : o, A : q, B : argnum] true)]} else {(array[z : (888 * g)] (array[A : z, B : 93, C : w] true))}), {})
fn C({ D : int }, E : int[,], {  }) : bool {
  let F[G, H, I] = (array[F : o, G : q] (array[H : (sum[H : argnum, I : w, J : D] g), I : argnum, J : n] (array[K : G, L : 952, M : J] 358)))[d, w][q, l((array[F : w, G : to_int(atan(s))] (if r then {h, false, 35.29} else {s, r, i})), {tan(tan(b())), (if false then (if r then false else true) else (s == x)), (array[F : D, G : v] r)}, [r]), 86]
  let J = ((if (array[J : g, K : H, L : E[B, n]] (B <= d))[108, m, argnum] then w else G) > argnum)
  let K[L] = p
  let M = true
  return (t <= sqrt(atan2(sqrt(asin(x)), h)))
}

let D = r
fn E({  }) : int {
  let F = m
  let {{G[H, I], J, K}, L[M, N, O], P[Q, R, S]} = (if (! D) then {{{z, o, c}, (array[G : w, H : d, I : f] e), (array[G : A, H : m, I : k] o)}, tan((- s))} else {{{u, w, args}, (array[G : d, H : B, I : 591] u), (array[G : 557, H : F, I : v] 976)}, tan((if r then 58.75 else b()))}){0}
  let {} = {{(array[T : n, U : R, V : J] d), (if true then {} else {})}, B}{0}{1}
  let T = m
  return f
}

fn F(G[H] : {bool,bool}[], { I : bool }, { J[K, L] : {bool,float,int}[,] }) : float {
  let {{M, N}, O, P} = {{(if D then {o, o} else {f, g}), (k == (q % A)), (! D)}}{0}
  return cos((sum[Q : d, R : f, S : f] h))
  let Q = h
  let R = false
  return x
}

