fn a(b[c] : float[], d : bool) : float {
  return asin(81.82)
  let e = [args, args, [c, c]]
  let {f, g[h, i, j], k[l]} = (if (d || {false}{0}) then (array[f : c, g : (sum[f : (if true then c else 987), g : argnum, h : (if d then 72 else argnum)] (if d then argnum else f)), h : c] {d, (array[i : h, j : g, k : c] 91.13), args}) else (array[f : to_int(exp(96.82)), g : (sum[f : (sum[f : argnum] argnum), g : c, h : (argnum * argnum)] c), h : ((- 873) * (if d then 205 else c))] {(! d), (array[i : h, j : c, k : c] 80.65), args}))[(if (cos(atan(12.06)) > tan(cos(13.53))) then to_int(atan(b[c])) else c), (if (array[f : c, g : (- c)] true)[251, (if d then (if true then 124 else c) else (- 391))] then to_int(exp(41.64)) else c), to_int(atan((sum[f : c, g : (sum[f : argnum] 74), h : c] to_float(44))))]
  assert f, "m"
  return acos(atan2((exp(to_float(l)) * cos(48.33)), atan2(cos(19.07), atan(96.04))))
}

fn b({ {  } }) : int {
  let c[d] = {args, sqrt(sin(66.08)), (if (! false) then {args, args} else {args, args})}{2}{1}
  let e[f, g, h] = (array[e : d] (if true then (array[f : (argnum + e), g : d, h : (sum[f : 461, g : 857, h : e] h)] args) else (array[f : (sum[f : 136, g : argnum] argnum), g : (e % e), h : e] (if false then args else c))))[(if true then (if (true && (! true)) then 373 else d) else d)]
  return b({{(if false then {} else {})}}{0})
  let {i} = {33}
  return 797
}

fn c({ d[e] : {}[], f[g, h, i] : int[,,] }, j[k, l, m] : float[,,]) : {} {
  let n = f
  assert (if {{true, k, k}, m}{0}{0} then (exp(acos(log(12.22))) > (- (- cos(29.57)))) else (if false then (! (array[o : e, p : g, q : argnum] true)[argnum, (- i), 317]) else (array[o : m, p : argnum] (false != false))[n[k, k, e], (h - l)])), "o"
  return c((array[o : l, p : argnum, q : b({{}})] {[{}], f})[(- b({{}})), (- (sum[o : 470, p : (h + argnum)] p)), e], j)
  let o = h
  return [{(if true then {} else {}), to_float(o)}{0}, [{}][o]][to_int({23.21}{0})]
}

let d = asin({args, (array[d : 125, e : argnum, f : argnum] 80.03), {false}}{1}[(sum[d : 794, e : (array[d : 900, e : argnum] e)[(- argnum), argnum], f : (if false then 977 else (- 652))] {84.59, f}{1}), (if (tan(69.54) == exp(16.87)) then argnum else argnum), (291 * argnum)])
let {e, f} = {92, sin(tan(pow(asin(31.55), 69.87)))}
fn g({ { { h : float[,,], i : bool } } }, j[k] : bool[]) : {} {
  let l[m, n, o] = (if (! (! (e >= k))) then (if (e == (argnum / k)) then {h} else {h}) else {(array[l : k, m : (- e), n : argnum] cos(d))}){0}
  return {(array[p : 388, q : to_int(f), r : (if i then k else argnum)] {})}{0}[n, {to_int(d)}{0}, args[(n * m)]]
  let p = pow(tan(exp((if (n <= m) then d else (sum[p : e, q : argnum, r : o] f)))), 15.72)
  let q = atan2((sum[q : (m - (if i then (k + 616) else (- e))), r : (sum[q : m, r : (946 % (e % 376))] e), s : (sum[q : n] 869)] (sqrt(l[n, m, k]) / pow(f, pow(53.41, p)))), tan(log(pow(cos(28.57), f))))
}

assert (! (if (array[h : (- argnum)] true)[(array[h : argnum, i : 495, j : 574] i)[876, (argnum + e), argnum]] then false else (if (e >= e) then (array[h : e, i : argnum] false) else (array[h : e, i : 974] true))[{e}{0}, (- 294)])), "h"
let h = b((if ((e + 571) >= e) then (array[h : (977 + e), i : e] {{}}) else (array[h : (- e), i : (argnum + e)] {{}}))[e, argnum])
let i[j] = (array[i : b({{{}}, argnum}{0})] argnum)
let {} = {}
show argnum

let k = ((sum[k : {i, 963}{1}, l : (sum[k : e, l : e] j), m : (if true then (array[k : argnum, l : argnum] e) else (array[k : argnum, l : argnum] l))[(if (788 >= j) then h else h), e]] (- 22.5)) <= atan(a((array[k : h] atan2(f, f)), true)))
