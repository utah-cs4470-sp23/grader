let a[b] = (if (if ((true && (914 != argnum)) || (argnum > (sum[a : 447, b : 195] 251))) then (array[a : (- argnum)] true)[(if (argnum != 743) then 518 else (- 135))] else (array[a : argnum] false)[(if (948 == argnum) then argnum else (- argnum))]) then [(if (exp(31.23) != to_float(948)) then {{}, to_int(51.98), [887]} else {(if true then {} else {}), (sum[a : argnum, b : argnum, c : 269] b), args}), (array[a : (- argnum), b : (- argnum), c : 170] {{}, b, args})[to_int(acos(47.22)), (sum[a : argnum] (- a)), args[argnum]], (if {argnum, false}{1} then (if (! true) then {{}, 199, args} else {{}, argnum, args}) else {{}, (159 % argnum), (array[a : 774] 699)})] else [(if (sqrt(25.78) <= 91.62) then {{}, 48, args} else {{}, (- argnum), args})])
fn c(d[e, f, g] : bool[,,], h[i, j] : bool[][,]) : bool {
  let {k, {l, m[n]}} = (array[k : (if false then j else (argnum / f))] {true, {to_float(b), (if false then a else a)}})[i]
  let o = d
  let {p, q[r, s, t]} = (if c({(array[p : i] f), (i < e), d}{2}, (array[p : e, q : b] (array[r : argnum] (if true then false else k)))) then (if k then (array[p : (sum[p : j] b), q : to_int(l)] {95.71, o})[(sum[p : j] p), e] else {l, {89.87, d}, to_float(740)}{1}) else {atan((- l)), {cos(94.45), (if false then o else o)}}{1})
  let {} = {{{}}, p, n}{0}{0}
  return k
}

assert {(array[d : (sum[d : 28, e : argnum, f : b] f), e : 808, f : 717] true)}{0}[to_int(cos(cos(sin(78.53)))), (- to_int((to_float(710) % to_float(b)))), b], "d"
let d = [false, {a, {false, b}, (if true then 440 else b)}{1}{0}, {((sum[d : b, e : b] d) > (sum[d : b, e : 331, f : argnum] e)), (acos(40.88) < cos(27.9)), args}{0}]
let e = ({false}{0} && (if (if (if (201 > argnum) then false else (! false)) then d[777] else (false || (821 == b))) then false else (false && (argnum >= (sum[e : 627] 628)))))
let f = 834
let {g, h} = (array[g : (- (if false then argnum else 93)), h : argnum, i : (- (970 / b))] {{e, a}}{0})[to_int(exp(pow(30.46, sqrt(10.48)))), f, (argnum * (sum[g : argnum] (f + g)))]
let i = cos(pow(sqrt(log(asin(74.26))), sqrt(atan2(acos(8.75), exp(45.33)))))
let {{}, j[k, l], {m[n]}} = (if false then {{{}, 192, args}{0}, (array[j : to_int(asin(i)), k : (sum[j : (sum[j : argnum, k : f] f), k : (- b), l : (- argnum)] argnum)] (array[l : f, m : j] b)[(j - j), k]), (if g then {d} else {[g]})} else {(if (if (! e) then e else (f != 798)) then {} else {{}}{0}), (array[j : (sum[j : f] (- f)), k : (array[j : 995] j)[(sum[j : argnum] 832)]] k), {d}})
fn o({  }) : float {
  return 67.47
  let p = exp(i)
  let q = 641
  return i
  return p
}

fn p() : bool {
  assert false, "q"
  return (true && e)
  let q = a
  let {} = {(if true then {{}} else {{}})}{0}{0}
  return {g, {p()}}{1}{0}
}

fn q() : int {
  let r[s] = args
  let {t} = {pow(cos(sqrt((i % i))), pow(log(o({})), tan(i)))}
  let u = r
  let {v} = {asin(sin(93.25)), {{}, {argnum}}}{1}{1}
  return to_int(exp((exp(29.43) - atan2(log(i), tan(17.18)))))
}

