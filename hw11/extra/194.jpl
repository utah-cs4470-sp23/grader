type a = float
let b[c, d, e] = (if (((sum[b : (- 799), c : (- 263), d : (- 9)] c) < 800) && (argnum != 245)) then (array[b : to_int(tan(log(30.78))), c : (array[b : (if true then 615 else 193), c : (- argnum)] b)[130, (if false then (if true then argnum else 1000) else argnum)], d : (- (array[b : argnum, c : 395] 818)[(- argnum), (- argnum)])] c) else (array[b : (sum[b : (- (sum[b : argnum] 57)), c : {789}{0}, d : (sum[b : (- 326)] (b + argnum))] 410), c : (- (559 + to_int(22.18))), d : to_int(asin(tan(55.46)))] (- argnum)))
fn f(g : {}) : a {
  let {h[i, j]} = (if false then {{(array[h : 736, i : argnum] c)}{0}} else {(if (array[h : 75] true)[52] then (array[h : c, i : e] e) else (if (! true) then (array[h : argnum, i : d] h) else (array[h : e, i : d] d)))})
  assert {(array[k : e, l : i, m : args[argnum]] (- c))[838, {c, i}{0}, (sum[k : (- j), l : e] argnum)], ((- c) != (- i))}{1}, "k"
  let k = (array[k : (- (sum[k : j] k)), l : e] log(sin(acos(11.81))))
  let {{}, l, {m[n, o, p]}} = (if (! (if ((! false) || (argnum > d)) then false else (array[l : d, m : j, n : argnum] true)[c, (sum[l : d] d), argnum])) then {(if true then (e <= j) else (false && false)), pow(20.78, to_float(j)), {{}, false, {b}}}{2} else {g, (! (! false)), {e, to_int(35.13), {b}}{2}})
  return 1.27
}

fn g() : float {
  return sin(sqrt(43.54))
  let h[i, j] = {atan(acos(g())), (array[h : (- d)] (array[i : c, j : h] b)), acos(asin(g()))}{1}[c]
  let k = (if (array[k : (- argnum), l : (array[k : e] c)[(sum[k : j, l : c, m : c] c)]] (if (k > argnum) then (328 <= k) else true))[417, [i][e]] then ((if (false && true) then {c, e} else {844, d}){0} + to_int(33.98)) else to_int(sin(atan2(g(), 50.78))))
  assert ((array[l : (if (if true then false else true) then c else (- e)), m : (- 848)] (array[n : d] k)[j])[(sum[l : (sum[l : 535, m : e, n : argnum] (548 - e)), m : b[i, 914, to_int(g())]] argnum), k] >= {c, d}{1}), "l"
  return tan(pow(sin(cos(91.34)), atan2(log(63.38), {g(), h}{0})))
}

let {h, {}} = (array[h : d, i : d] {{e, {}}})[{(c * c), 9.33, e}{0}, c]{0}
assert ((! ((c >= d) || ((false && true) == false))) || (acos(log(50.97)) != to_float(argnum))), "i"
let i = b
fn j() : bool {
  let {} = {{(if true then i else b), {}, true}}{0}{1}
  let k = (- (array[k : 210] (array[l : k, m : k] m))[e][186, to_int(asin((- g())))])
  assert ((argnum > (if ((! true) && (! true)) then h else (sum[l : (- c), m : k, n : h] (h + h)))) != (! {j(), d, exp(16.67)}{0})), "l"
  let {l[m]} = (if true then {{37.61, (array[l : argnum] argnum), cos(83.87)}{1}} else {b, {(array[l : e] c)}, (f({}) == (sum[l : h, m : c, n : h] 72.56))}{1})
  return false
}

fn k({ {  } }, { l : a }, { m[n, o, p] : float[][,,], q : int }) : int {
  return q
  assert (if (c == (if j() then {n, n} else {argnum, d}){1}) then (if (! (! false)) then [(if j() then false else true)] else [(g() < g())])[{d, tan(g())}{0}] else j()), "r"
  let r[s] = (array[r : c] (if (true && true) then [args, args][(- q)] else (array[s : h, t : p] args)[o, argnum]))[n]
  let t = (if (if (to_float(o) <= asin(g())) then (p < p) else (if j() then (h == c) else (j() || true))) then (if (26 <= i[h, argnum, c]) then (if (if j() then true else true) then m[e, 262, p] else (array[t : d] g())) else (if false then m[s, 844, p] else m[n, c, d])) else (array[t : s] l))[q]
  return n
}

let l = cos(g())
let m = (if false then g() else acos(to_float(c)))
fn n(o : float, p : a) : float {
  let {q, r} = (array[q : to_int((sum[q : d, r : h, s : (sum[q : argnum] c)] (sum[t : s, u : 156] l))), r : e] {{46.67, d}}{0})[h, k((if ((e == c) || (o > g())) then {{}} else (if j() then {{}} else {{}})), {{p}}{0}, {(array[q : to_int(g()), r : c, s : d] [p]), (sum[q : h, r : (sum[q : c] e)] (sum[s : r] h))})]
  let s[t, u, v] = (if (if false then [(if j() then true else j())][to_int(atan(g()))] else (if (if (! j()) then (if true then false else true) else true) then ((false == true) == (j() || false)) else false)) then {{i, 72.62, r}}{0}{0} else {{b}, j()}{0}{0})
  let w = acos(f((if (if (if false then j() else false) then (! false) else (! j())) then {} else [{}, {}][e])))
  let {} = {}
  return 85.36
}

