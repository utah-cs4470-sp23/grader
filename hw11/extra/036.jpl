fn a() : bool[,,] {
  let {} = (if (array[b : to_int(51.43)] (array[c : 232, d : b] false))[((sum[b : 396, c : argnum, d : argnum] argnum) / (- argnum))][((- 194) * (sum[b : 33, c : 287, d : (argnum - argnum)] b)), 152] then {} else (if (! ((! true) || false)) then {(if true then argnum else argnum), {}}{1} else [{}, {}, (if true then {} else {})][(- argnum)]))
  assert ((- (- (if false then (if false then 868 else argnum) else (argnum - argnum)))) != {{943, 28.49, 91.39}, {}}{0}{0}), "b"
  let b[c] = (if false then (array[b : (sum[b : argnum] b)] {args})[to_int(to_float(938))] else (array[b : argnum, c : 973] {args})[586, args[(sum[b : 256, c : argnum, d : argnum] argnum)]]){0}
  return (array[d : ({c}{0} * (if (! (if true then false else false)) then (- to_int(89.51)) else argnum)), e : c, f : c] {{false, d}, {f}}{0}{0})
  return {{(c < argnum), a(), false}{1}, asin((array[d : argnum, e : 568] 31.63)[323, (sum[d : c] 920)])}{0}
}

let b = to_float((sum[b : {(- argnum)}{0}, c : {360, argnum, 364}{1}, d : (sum[b : (sum[b : 806, c : argnum, d : (sum[b : 374, c : 619] b)] argnum), c : (if false then (- argnum) else 930), d : (10 * 952)] 554)] b))
write image (if (array[c : argnum, d : to_int(b)] a())[(43 + (if true then argnum else 948)), argnum][5, argnum, {(if false then argnum else 917), asin(11.61), 513}{2}] then (if (! ((- 33.24) <= 93.41)) then (array[c : 339, d : args[(- 973)]] {tan(86.85), cos(51.06), acos(22.17), 62.63}) else (array[c : (sum[c : (- argnum), d : argnum] (sum[e : argnum] 107)), d : (sum[c : argnum] c)] {sin(54.72), 27.66, (sum[e : d] b), atan(59.11)})) else (array[c : (- (sum[c : 72, d : argnum] (sum[e : argnum, f : argnum, g : 306] c))), d : (array[c : to_int(b), d : argnum, e : (- 697)] e)[(sum[c : (if true then argnum else 491)] to_int(b)), ((247 * argnum) / (249 - 319)), 6]] {(62.42 / log(70.35)), (sum[e : 793, f : c] asin(b)), (sum[e : (sum[e : d] argnum), f : (sum[e : d, f : 52] argnum), g : to_int(b)] 61.3), cos(43.99)})) to "c.png"

let c = (- (if {false}{0} then (array[c : argnum, d : (- argnum)] 618) else (array[c : 632, d : (sum[c : 132, d : argnum] d)] argnum))[{argnum, argnum}{0}, to_int(83.49)])
write image (array[d : 128, e : 304] (array[f : {244, e}{0}, g : argnum] {(- b), (b + b), atan(19.82), asin(b)}))[([(sum[d : 866] c), (if true then 895 else argnum), argnum][(array[d : argnum] argnum)[926]] - c), 252] to "d.png"

let {{d, e[f, g]}, h} = (array[d : ((sum[d : 407] d) / argnum)] {{(true || false), (array[e : d, f : argnum] 37.58)}, (if (true && true) then (768 > d) else a()[929, c, c])})[467]
fn i(j[k] : int[]) : bool[] {
  let l[m] = i((array[l : f] 208))
  let n = (! ((((401 * 370) % m) == m) != (! true)))
  let o[p, q] = e
  return i((array[r : (sum[r : (if a()[g, m, f] then f else m), s : (sum[r : p] m)] q)] (sum[s : 160, t : argnum] f)))
  return (if (if false then (b != sin(cos(b))) else d) then (array[r : (if (array[r : argnum] n)[p] then (- k) else k)] ((n || n) && n)) else [(if h then {h} else {true}){0}])
}

let {j[k, l, m]} = (if (! d) then {{(if false then a() else a())}, i(args), (sum[j : argnum] g)} else {{a()}, (if h then (array[j : g] true) else [h, d]), f}){0}
let n = {935, atan(sin({argnum, b, {}}{1})), e}
let o[p, q, r] = (array[o : args[argnum], p : (if (! (atan(b) <= b)) then (k / l) else ((sum[o : (k * k), p : l] (p % 490)) + (sum[o : (- m), p : 800] o))), q : g] n)
let s = [{e}{0}, e][q][c, l]
let t = (if h then {n} else {{argnum, 49.28, e}}){0}{0}
