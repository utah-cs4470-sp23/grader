let {{}, a[b]} = (if true then [{(if false then {} else {}), args}, {{}, [argnum]}, {{}, [34]}] else [{{}, args}, {{}, (array[a : 353] argnum)}, {{}, (array[a : argnum] a)}])[207]
fn c({  }, { d[e] : {int,bool,int}[], f[g, h] : int[,], i[j] : bool[] }, k[l, m, n] : int[,,][,,]) : {int[,,],float} {
  let o = sqrt(atan(cos(acos((sum[o : n, p : j, q : b] 78.8)))))
  return {(atan(atan(o)) != exp(asin(o))), args, {(array[p : l, q : g, r : e] g), asin(to_float(b))}}{2}
  let p[q, r, s] = {(if (exp(o) == tan(o)) then (if (if false then true else false) then (array[p : g, q : h, r : g] n) else (array[p : j, q : argnum, r : e] q)) else (if (true == false) then (array[p : j, q : 234, r : h] h) else (array[p : g, q : argnum, r : g] 370))), (b > j)}{0}
  return {l, [{p, o}, {p, 66.69}, {p, 65.64}][(if false then f else f)[r, (if false then q else b)]]}{1}
  return {(if (atan(o) < asin(atan2(60.59, o))) then (array[t : argnum, u : b, v : n] n) else (if (! false) then p else (array[t : b, u : b, v : r] b))), tan({atan(16.72)}{0})}
}

let d[e] = (if (array[d : 766, e : (sum[d : 211, e : argnum] 893), f : 454] (array[g : 162] true))[b, [476, argnum][303], b][argnum] then (if ({argnum}{0} == argnum) then [to_int(to_float(b)), {argnum, argnum, b}{1}] else args) else (if ((if false then (true && false) else (argnum == argnum)) || (if true then false else true)) then {args}{0} else (array[d : (if false then a else args)[(sum[d : 487] b)]] (sum[e : (d - b), f : b, g : d] b))))
let f[g, h] = (if (array[f : (sum[f : e, g : e, h : 142] h), g : argnum] [true])[e, e][argnum] then (array[f : (if (true || true) then (array[f : b, g : e, h : 181] b) else (array[f : e, g : b, h : argnum] f))[(sum[f : b, g : e, h : b] (- h)), argnum, (sum[f : (e + 450), g : argnum, h : argnum] b)], g : to_int(to_float((e + b)))] args) else {((false && true) && (true || false)), (if (true || false) then (array[f : 213, g : argnum] args) else (array[f : e, g : 782] d)), sin(to_float(607))}{1})
let i[j, k] = (array[i : argnum, j : (if (! (true && (b <= g))) then h else (if true then g else b))] [h, (if false then i else to_int(to_float(e)))])
fn l(m[n, o] : {float,int,int}[,], p[q, r, s] : int[,,], t : {}) : float {
  let u[v, w, x] = (array[u : {242}{0}, v : (- j)] (if (k > u) then {p} else {p}))[o, o]{0}
  let y = asin(to_float(g))
  let z = args
  let {A} = {sqrt(pow({t, i, 55.92}{2}, atan2(cos(y), sin(y))))}
  return (if (cos((- 99.58)) > atan(atan2(pow(y, 99.14), tan(84.33)))) then A else asin(y))
}

fn m(n[o, p] : bool[,][,], q[r, s, t] : float[,,], u : {int}) : {{float,int,float}} {
  let v = (- h)
  let w = s
  let {x} = m((if ((false || false) && (k <= 207)) then {i, n, a} else {(array[x : g, y : o] a), (if true then n else n), args}){1}, (array[x : k, y : s, z : v] sqrt(sin(to_float(h)))), (if (if (true != (b < w)) then {true}{0} else (p == e)) then {251} else (if (true != true) then (if true then u else u) else u)))
  let {{}, y} = (array[y : o, z : o, A : (- k)] {pow(47.88, 98.74), {{}, w}}{1})[t, {((v > 973) || (t == r)), v, o}{1}, (if (if (if (! true) then (! true) else (true == false)) then (array[y : p, z : r] false)[(v * o), v] else true) then v else g)]
  return (if (w > b) then (if (! (false && false)) then {{x}, r} else {{x}, (argnum / j)}) else (if (to_float(b) <= asin(8.76)) then {{x}, r} else {m(n, q, u), h})){0}
}

let n[o, p, q] = {{k, (array[n : k, o : g, p : k] false)}, d}{0}{1}
fn r(s[t, u, v] : {}[,,]) : int {
  assert (! (((g - j) >= k) && ((array[w : 954, x : 616, y : k] g)[g, (argnum / argnum), v] == (sum[w : p] e)))), "w"
  return g
  let {} = {}
  assert {{n}{0}, t}{0}[(if (array[w : 673, x : g] n)[p, (q - t)][v, o, h] then e else (558 + to_int(asin(12.3)))), to_int(pow(tan(sqrt(84.54)), log(78.14))), v], "w"
  return to_int(sin(tan(asin(atan2(71.24, 69.02)))))
}

fn s({ { {  }, t[u, v, w] : {bool,bool,int}[,,] } }, x[y, z] : bool[,]) : int {
  return v
  let A = false
  let {B[C, D, E]} = (if true then (if (a[b] <= y) then {n, {t}} else {n, {t}}) else {{n}{0}, (if A then {t} else {t})}){1}
  assert {false}{0}, "F"
  return q
}

let t[u, v] = f
let w[x, y, z] = {i, (if true then (array[w : argnum, x : h, y : v] n) else (array[w : o, x : e, y : q] n))}{1}[(p + to_int(exp(33.62))), g, argnum]
