type a = float
let b[c, d] = [(array[b : 193] (array[c : argnum, d : b] argnum))[((- 68) % to_int(20.23))]][to_int(pow(77.63, (sum[b : (sum[b : argnum] b), c : 37, d : (sum[b : 290] argnum)] 75.38)))]
let e = 8.62
fn f(g : a, h[i, j] : {a}[,]) : a[] {
  let {k, l[m]} = (if (! (if false then (true && (true && false)) else (acos(e) == log(g)))) then (if ((! false) == (false && true)) then {(false && false), {730, args}} else {(false && false), {c, args}}){1} else (if (! (exp(g) != e)) then (if (array[k : j, l : c, m : i] true)[(j + c), d, argnum] then {c, [d, 877]} else {c, (array[k : 466] c)}) else (array[k : (sum[k : i] i)] {435, args})[to_int(sqrt(95.01))]))
  let n = e
  let o[p, q] = (array[o : j, p : argnum] (array[q : k] (array[r : k, s : j] d)))[(array[o : m, p : m, q : i] j)[i, (sum[o : (sum[o : d, p : i] argnum), p : (sum[o : argnum, p : argnum] o), q : m] (q % 722)), 469], m][(sum[o : j, p : (sum[o : argnum] o)] to_int((- exp(e))))]
  let {} = {}
  return (array[r : 810] e)
}

let g[h, i, j] = (array[g : 959, h : (if {(if false then false else true), (- argnum), (160 != d)}{0} then (if (true || (! true)) then 56 else 847) else 529), i : (to_int(acos(e)) - {to_int(e), (sum[g : c] argnum)}{1})] atan(exp((sum[j : argnum, k : g] 51.81))))
write image (array[k : 466, l : j, m : i] (array[n : d, o : j] {to_float(c), to_float(argnum), atan(e), (- e)}))[d, (- to_int(atan2(acos(37.85), sqrt(56.66)))), j] to "k.png"

let k[l, m] = (array[k : (- argnum), l : to_int((if ((- 307) != (- h)) then log(asin(e)) else (sum[k : (h * d)] exp(98.33))))] false)
type n = float
type o = bool[,,]
assert (if (! true) then (array[p : m] k) else [k])[(606 % d)][c, i], "p"
let p[q, r, s] = (if (if {m, (h >= argnum)}{1} then k[j, (if false then d else (sum[p : l, q : d] 518))] else (true && (! (argnum >= c)))) then g else {(array[p : h, q : j, r : l] g)}{0}[l, d, 717])
let {t, u[v], {{}, w}} = {{asin(e), args, {{}, sqrt(29.24)}}, j, (! true)}{0}
