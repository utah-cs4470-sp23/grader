type a = bool
type b = float
read image "c.png" to c

write image (if (array[d : to_int(31.29), e : (sum[d : argnum, e : 149] e)] (false != false))[(if false then (- argnum) else (if false then argnum else 982)), (array[d : argnum] argnum)[(- 414)]] then {{c}, true, sin(65.69)}{0} else (array[d : (- argnum), e : 439, f : 768] {c})[to_int(exp(62.08)), (if (false && false) then argnum else (- argnum)), {argnum}{0}]){0} to "d.png"

let {d[e], f} = (if ((log(exp(20.32)) != acos(exp(28.64))) && {true, true}{1}) then {{(true || true), [c]}{1}, (! (if (if true then false else false) then (true && false) else (argnum >= 190)))} else (array[d : (array[d : argnum, e : argnum] d)[argnum, (if false then 883 else 917)], e : argnum] {(array[f : 997] c), (d > e)})[{(607 * argnum)}{0}, (sum[d : (- (sum[d : argnum, e : 862, f : 739] f)), e : to_int(cos(42.05)), f : {c, argnum}{1}] (sum[g : (- argnum), h : argnum] (if true then h else e)))])
fn g(h[i, j] : float[,], { { k[l] : b[] }, m : bool }) : {int,bool} {
  let {{n[o, p, q]}, r} = (if m then (if (! true) then {{(array[n : e, o : i, p : argnum] n)}, k} else {{(array[n : e, o : e, p : j] e)}, k}) else (if true then {{(array[n : l, o : l, p : l] l)}, k} else {{(array[n : e, o : j, p : argnum] p)}, k}))
  assert [(! {true}{0})][((sum[s : i, t : (p - (q % i))] (- p)) / j)], "s"
  let s[t, u] = (array[s : argnum, t : (sum[s : e, t : {l, o}{0}, u : p] p)] d)
  let v[w] = (if {(array[v : (- u), w : e, x : i] tan(99.76)), {m, 757}{0}, (array[v : p, w : p, x : p] u)}{1} then {m, c, (array[v : i, w : o, x : e] k)}{2}[t, u, u] else (array[v : t] acos({47.4}{0})))
  return (if (if (array[x : t, y : 212] m)[664, q] then (array[x : q, y : (sum[x : l] q), z : p] true) else (array[x : t, y : t, z : (sum[x : j, y : q] t)] f))[223, argnum, (array[x : (t / i), y : 917] (sum[z : 29] y))[(sum[x : u] argnum), w]] then (if (i == u) then g((array[x : j, y : t] to_float(e)), {{r}, f}) else (array[x : (if false then p else p), y : argnum] {j, m})[u, j]) else {(if (! m) then {l, f} else {o, f})}{0})
}

let {} = (array[h : to_int(to_float(argnum)), i : 813, j : (array[h : 435, i : 517, j : (239 % e)] argnum)[323, to_int((sum[h : 193, i : 298] 61.64)), to_int(exp(65.54))]] {})[to_int(36.5), argnum, (if ((! f) || f) then (array[h : 19, i : 992, j : 811] h) else (array[h : (- 247), i : (- e), j : argnum] (if f then argnum else h)))[(419 + {556, 971}{0}), to_int(to_float((704 % argnum))), argnum]]
let h[i, j] = (array[h : (- argnum)] (if ((if f then true else f) || (f && true)) then {false, 44.36, c}{2} else (if (! true) then c else (if true then c else c))))[e]
let k = 495
read image "l.png" to l[m, n]

fn o(p[q, r, s] : b[,,], t[u] : bool[]) : {{},float,bool} {
  let v = sin(to_float(s))
  return (if true then {(if (f && f) then (array[w : m, x : i] {}) else (array[w : 82, x : argnum] {}))[j, u], (sum[w : (330 / s)] tan((if f then v else 94.79))), (if (m != (sum[w : i, x : s, y : u] m)) then {f, m}{0} else (f || (! true)))} else (array[w : to_int(to_float(u))] o((array[x : r, y : k, z : 253] 70.77), (array[x : k] f)))[i])
  let w[x, y, z] = (array[w : u, x : q, y : (- {argnum}{0})] atan2(atan2(11.95, cos(cos(v))), acos(exp((sum[z : u] v)))))
  return (array[A : k, B : z, C : i] o((array[D : s, E : C, F : z] sin(56.04)), [(true || f), (! true), (x < e)]))[{d, (array[A : z, B : i] q), j}{1}[(sum[A : e, B : s, C : j] to_int(to_float(m))), y], e, to_int((if ((j == x) && (f && f)) then pow(65.81, 26.74) else v))]
  return (if (atan((if (! f) then asin(v) else log(v))) == sin(log(v))) then o({p}{0}, t) else (if (if (r <= i) then (array[A : 845, B : q] f) else (array[A : q, B : u] f))[to_int((- v)), (sum[A : i, B : j] z)] then o(p, {t}{0}) else {{x, q, {}}{2}, exp(45.37), false}))
}

let {p} = {{((if false then false else f) && f)}}{0}
