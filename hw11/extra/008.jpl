let a[b, c] = (if (! true) then {(if true then (array[a : 833, b : 750] argnum) else (array[a : argnum, b : 705] a))} else {(array[a : (- argnum), b : 593] (- a))}){0}
let {d[e, f, g], h[i, j], {}} = {(array[d : c] (array[e : (- 215), f : b, g : b] (- argnum)))[341], a, (array[d : (- (sum[d : argnum, e : argnum, f : c] e))] (if false then {} else {}))[{argnum}{0}]}
fn k({ l : bool }) : int[][,,] {
  return {{(true && l), (array[m : argnum, n : j, o : c] args), a}{1}}{0}
  let m[n] = [cos(log(cos(21.22))), sqrt(cos(((sum[m : c, n : b, o : argnum] 45.64) * (- 65.67))))]
  assert (sin(log((sum[o : c, p : j] (91.9 / 98.15)))) < ((if (c == d[n, n, e]) then (- tan(1.27)) else atan((- 24.15))) - log(pow(cos(42.75), sqrt(95.36))))), "o"
  let o = a
  return (array[p : (if (array[p : c, q : f] true)[f, (j - (b / i))] then (if ((l == l) == (l && l)) then (- i) else j) else {argnum, m, (! l)}{0}), q : c, r : [n, f, g][(if (l || l) then to_int(60.39) else c)]] [(if (q != f) then args else args), [args][i]][argnum])
}

fn l() : int {
  let {m[n]} = {k({(false || false)})[j, c, g]}
  let {} = {}
  let {o[p, q, r]} = (if (if false then (array[o : g, p : c, q : n] false) else (array[o : l(), p : n, q : f] true))[f, 507, to_int(acos(89.47))] then (array[o : h[to_int(55.78), (f % i)], p : (sum[o : i, p : i, q : to_int(57.73)] a[g, 826]), q : (sum[o : l(), p : c, q : n] 602)] {d}) else (array[o : i, p : to_int(atan(96.98)), q : c] {(array[r : 651, s : i, t : f] argnum)}))[(sum[o : j, p : (if (array[o : n] true)[g] then {c}{0} else b), q : to_int(acos(to_float(n)))] e), (sum[o : g, p : argnum, q : e] l()), (if ((! (! true)) && (array[o : b] true)[i]) then f else g)]
  assert ((! ((sum[s : i, t : (if true then e else i)] j) <= p)) == (array[s : b] (if (n < p) then (e != j) else false))[(n % p)]), "s"
  return p
}

let m[n, o] = {(array[m : l(), n : (- args[e])] to_int((- 50.77)))}{0}
assert (if (array[p : (n * n), q : f, r : o] {false})[o, g, e]{0} then (((o >= c) != (true == false)) || ((array[p : b] false)[g] == [false, false][c])) else ({{}, 0.58}{1} != (array[p : (l() + f), q : c, r : f] asin(70.22))[(if false then g else f), f, (- e)])), "p"
let p = (! false)
fn q(r : {}, s : float) : int {
  let {t[u]} = [(array[t : j, u : g] {args})[c, b]][n]
  let v[w] = t
  return to_int((sum[x : o, y : (if ((sum[x : j, y : w, z : j] 46.99) <= exp(s)) then w else (- i)), z : b] (if false then sin(cos(81.1)) else acos(sqrt(57.8)))))
  let x[y] = args
  return b
}

print "r"

fn r(s[t, u, v] : int[,][,,]) : int {
  return c
  assert (if (if (b != l()) then {p}{0} else {(true || p), 565}{0}) then true else ((if (array[w : t] true)[(if p then j else l())] then (! (! false)) else p) && (array[w : v, x : e, y : g] (if true then false else p))[j, {i, 425}{0}, 854])), "w"
  return argnum
  let {w[x, y, z], A[B], {C[D, E, F]}} = (if p then {{(if true then d else d), args, {s}}, u} else {{d, [c, u, e], {s}}, (sum[w : argnum] o)}){0}
  return (sum[G : 911, H : 992] x)
}

fn s(t[u, v, w] : {int,int,bool}[,,]) : {}[,][] {
  let x[y, z] = m
  let A[B] = {v, atan(to_float(n)), (array[A : l(), B : y, C : n] s(t))}{2}[g, (y % y), i]
  assert (! true), "C"
  assert (! ((! false) != ((! false) && {p, p}{0}))), "C"
  return A
}

let t = n
