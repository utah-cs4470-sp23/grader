fn a(b[c] : float[], d[e] : bool[]) : bool {
  let {} = {}
  assert (! (if true then (! true) else ((array[f : 94, g : c] true)[971, (sum[f : e, g : 36] c)] && (a(b, d) || false)))), "f"
  let f[g, h] = (array[f : (if (d[c] && (820 > 205)) then e else {c, argnum}{0})] (if (argnum < f) then (array[g : argnum, h : (- c)] 995) else (array[g : (sum[g : c] 995), h : 148] argnum)))[c]
  let {i[j, k]} = (array[i : (h + g), j : g] {(array[k : g, l : argnum] d[e])})[e, (- (sum[i : to_int(asin(88.67)), j : (- c)] 730))]
  return {(asin(24.54) <= log((- 29.07))), i}{0}
}

let b[c, d, e] = (if (if (! false) then {true} else {false}){0} then {exp((- 62.81)), (array[b : 574, c : (argnum / 224), d : (903 + argnum)] sin(71.6))}{1} else (if ((26.23 != log(49.49)) || true) then (array[b : (if false then 785 else argnum), c : 477, d : to_int(21.18)] cos(52.79)) else (array[b : argnum, c : ((sum[b : argnum] argnum) * (if false then 124 else argnum)), d : (sum[b : (154 * argnum), c : (- 630)] c)] {17.42, 957}{0})))
show 364

let f[g, h, i] = (array[f : argnum] (array[g : {c}{0}, h : to_int(to_float(argnum)), i : argnum] exp(b[argnum, g, h])))[to_int(exp(to_float((argnum % argnum))))]
print "j"

fn j() : int {
  let k[l] = {(if true then (array[k : i, l : g, m : i] args) else (array[k : j(), l : d, m : c] args))[(sum[k : (sum[k : c, l : i, m : h] d), l : (- 78), m : h] k), j(), h]}{0}
  let {m[n, o]} = (if ((g != argnum) == (! (534 < j()))) then (array[m : {629, c, c}{0}, n : i] {(array[o : i, p : n] n)}) else (array[m : {{}, c}{1}, n : c] {(array[o : l, p : e] m)}))[(if ((i == argnum) && (416 >= e)) then {{h, j()}, h, i} else {{h, j()}, d, (if true then 465 else c)}){2}, (i / c)]
  let {{p[q, r, s], {t}, {u, v, {w, {}, x[y]}}}, z[A, B]} = {{(array[p : m[e, d], q : d, r : (d + n)] f)[(- (i + d)), (- argnum), {f, l}{1}], (array[p : c, q : o, r : 160] {g})[(if true then n else d), d, (- i)], (if ((argnum != c) && (if true then true else false)) then {{}, false, {n, {}, args}} else {{}, (! false), {c, {}, k}})}, (array[p : argnum, q : (array[p : c, q : argnum, r : c] l)[n, to_int(36.95), e]] (array[r : c, s : (sum[r : d, s : argnum] j())] k))[c, (o * e)]}
  return (A - o)
  return to_int((sum[C : d, D : g] {u, acos(76.1), D}{1}))
}

assert ({cos(to_float(g)), (if (false || false) then (e > c) else (i > c))}{1} != a((array[k : (d - e)] (if false then 26.98 else log(91.49))), (array[k : e, l : argnum, m : (sum[k : g, l : g] j())] (array[n : argnum] false))[d, j(), (sum[k : h, l : (- g)] j())])), "k"
fn k({ {  }, l : bool }, m[n, o, p] : bool[,,]) : {int} {
  let q[r, s, t] = (if (l && (sqrt(to_float(c)) == asin(exp(68.33)))) then b else (if (c != g) then f else {f, i}{0}))
  let u[v] = [f, (array[u : 63] (array[v : o, w : argnum] f))[g][n, o]]
  let w[x, y, z] = (if (if {s, m[h, i, p]}{1} then ((s == d) || {l}{0}) else (! {g, d, l}{2})) then u[n] else q)
  let A[B] = (array[A : p] v)
  return {y}
}

let l = sqrt((- (if false then (array[l : 632] 99.47)[d] else (sum[l : 574] to_float(h)))))
fn m(n[o] : bool[,,][], { {  }, p[q, r, s] : {}[,,], t[u] : {float,bool}[] }) : int[,,] {
  let {} = {}
  assert ((if false then {true} else {(o <= j())}){0} || ((array[v : r, w : d] (false || true))[(sum[v : (- i)] h), g] && (log(l) < [l, l][argnum]))), "v"
  let v[w, x] = (array[v : q, w : (q % o), x : o] (array[y : i] (array[z : h, A : v] f)))[q, i, (- r)][argnum]
  let y[z, A] = v
  return (if (w == argnum) then (if false then (array[B : {args, g, y}{1}, C : argnum, D : A] h) else {x, (array[B : e, C : A, D : j()] d), argnum}{1}) else (array[B : h, C : h, D : to_int((sum[B : i, C : (- argnum)] l))] A))
}

let {} = {}
let {n[o], p} = {{{args, d}, argnum, d}}{0}{0}
