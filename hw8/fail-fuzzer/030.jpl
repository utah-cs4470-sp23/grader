let a = {}
read image "b.png" to b

fn c(d[e, f] : int[][,]) : float {
  let {{g, h[i, j]}, k, l} = {(if ((sum[g : (- f)] (- 62.82)) != acos(to_float(argnum))) then (array[g : (argnum / 383), h : (- argnum)] {g, d})[(- 987), (if true then argnum else argnum)] else {(sum[g : 882, h : 136] f), {f, d}, to_float(939)}{1}), (if sin(exp(19.25)) then (array[g : (sum[g : (- argnum)] f)] cos((2.15 % 18.98))) else (array[g : (sum[g : (- e)] e)] (sum[h : e, i : f, j : g] to_float(g)))), atan2(33.43, 94.38)[{645, args, (argnum + 22)}{0}, f]}
  let m[n, o, p] = (if (f != f) then (array[m : argnum, n : argnum, o : (- j)] {m, args}{1}[o]) else (array[m : (- g)] (array[n : j, o : e, p : (f + g)] f))[g])
  let q[r, s] = (array[q : [f, 554][to_int(60.49)]] {d, h})[(array[q : g, r : i, s : l] args)[g, (sum[q : p, r : p] g), e][e]]{1}
  let t = sqrt(sin(cos(exp(exp(97.12)))))
  return (if (false || ((- f) <= (sum[u : (sum[u : j] o)] argnum))) then asin(atan2(sin(exp(t)), sin(to_float(559)))) else atan2(asin(pow(atan(91.92), t)), asin(pow(to_float(l), acos(22.92)))))
}

type d = {}
read image "e.png" to e

let f[g, h, i] = false
fn j() : int[,,][,] {
  return (array[k : (g == h){0}[to_int(cos(to_float(856))), (if ((if false then argnum else 725) == 538) then (sum[k : 995, l : (- g)] (sum[m : i] k)) else to_int(35.25))], l : (sum[k : argnum, l : (if false then {274, b} else {argnum, b}){0}, m : argnum] h)] (array[m : j()[(- l), g][k, 587, (- g)], n : (l / (if (g > k) then 440 else k)), o : g] h))
  let k = a
  let l = ((if (cos(5.89) > sqrt(to_float(argnum))) then cos(((- 24.77) - asin(15.91))) else cos(to_float(argnum))) * atan(asin(cos((sum[l : 677, m : i] 72.35)))))
  let {{m}, n[o, p], {}} = {{e}, (array[m : argnum, n : (288 % (if k then to_int(90.59) else i))] (sum[o : n, p : to_int(argnum), q : (h % argnum)] p)), {(array[m : i] e), {f, {}, e}}{1}{1}}
  return {{j()}, n}{0}{0}
}

time let k[l, m, n] = {{f}}{0}{0}

fn o(p : int, q[r, s] : int[,], { t[u, v] : d[,], w[x, y] : float[,] }) : int {
  let z = ((if (s <= s) then {q, u, i} else {(array[z : h, A : x] s), i, v}){2} + n)
  let {{}} = {(if (! {t, v, false}{2}) then (if k[l, argnum, 458]{0} then {a, 105}{0} else (array[A : x] a)[h]) else [a, {}][g])}
  let A[B, C, D] = (array[A : h, B : z, C : r] (! ((! (h < C)) == (if false then (l == 827) else false))))
  let {E, F} = {{{true, y}, tan(76.22)}, (if (z == m) then 897 else g)}{0}{0}
  return 431
}

fn p({ q : int[,,], { { r : float, { s : bool, t[u, v] : int[,], w[x] : d[] } }, y[z] : d[], A[B] : bool[,,][] } }) : d {
  let C[D] = (array[C : (- (if t then (if s then t else t) else t)[to_int(cos(69.66)), v])] tan(atan(tan(exp(r)))))
  let E = a
  let F[G, H, I] = k
  let {J[K, L], M[N]} = (array[J : (- G), K : H, L : m] {(if s then (array[M : H, N : m] N) else t), (array[M : I] args)[g]})[g, n, (if false then {H, G, q} else {m, z, q}){2}[(array[J : (- B), K : u, L : 670] m)[B, g, z], D, i]]
  return (if {(true && s), n}{0} then {[E, {}, E]}{0}[(sum[O : g, P : G, Q : to_int(r)] v)] else (array[O : h, P : g] {{}, B})[argnum, l]{0})
}

let q[r, s, t] = (if (((if false then true else true) != false) == (g <= (- 571))) then {[k][(- i)]} else {log(81.52), {k}, h}{1}){0}
fn u() : int {
  let v[w] = {args}{0}
  let x = [l, (- u()), t]
  let y[z, A, B] = (array[y : l, z : n, A : m] (if (n == h) then (array[B : l] q) else (array[B : A] f)))[l, g, {q, f, i}{2}][u()]
  assert false, "C"
  return o(argnum, (if ({x, true, k}{1} || (l != t)) then {(array[C : z, D : g] A)}{0} else [(array[C : r, D : n] argnum), (array[C : u(), D : t] s)][argnum]), {{h, (array[C : argnum, D : r] {})}{1}, (if (if (7.78 > 40.41) then (A != g) else (n >= A)) then (array[C : h, D : h] 49.71) else (array[C : argnum, D : g] (sum[E : m, F : z] 96.66)))})
}

