write image (array[a : (- 336)] (array[b : a, c : (if (685 == argnum) then argnum else (sum[b : 137] argnum))] acos(56.08)))[argnum] to "a.png"

fn a() : float {
  let b[c, d] = (array[b : args[830], c : (- to_int(sqrt(sqrt(a()))))] cos(sin((- sin(a())))))
  let e = sin(log(pow(sqrt((- a())), (if true then sqrt(87.66) else exp(a())))))
  assert (if (if (if (if (d > 575) then (e < 34.8) else true) then (if true then (! true) else true) else (if (a() < a()) then (! true) else (argnum <= c))) then false else false) then (array[f : c, g : c, h : c] (array[i : argnum, j : d, k : c] false))[442, (- argnum), {a(), c, args}{1}][to_int(acos(a())), argnum, (if (if (e < a()) then (c <= 4) else false) then d else (if (c >= argnum) then to_int(e) else (sum[f : 513] c)))] else true), "f"
  let f[g, h, i] = {(array[f : (c * argnum), g : (array[f : 519, g : argnum] d)[(sum[f : 868, g : 214] g), (537 % argnum)], h : d] to_float(473)), d, pow(true[d, (880 * d)], a())}{0}
  return sin(a())
}

fn b(c : bool, d : int, e : bool[,,]) : bool {
  let f = (- exp(exp({15.16, 7.11}{0})))
  return true
  assert ((exp((- a())) <= exp(exp(sqrt(52.65)))) && true), "g"
  let g[h, i, j] = e
  return b(((sqrt((f - 42.4)) == to_float((sum[k : i] i))) && (if (50.62 <= 57.16) then g else (if true then g else e))), h, e)
}

let c[d, e] = (if false then {(array[c : (sum[c : argnum] c), d : (sum[c : argnum] c)] a())}{0} else (if (false || (35.12 == a())) then {(array[c : 202, d : argnum] 26.29)} else argnum){0})
let f[g, h] = (array[f : argnum, g : to_int(54.23)] (array[h : args[g], i : g, j : (if true then d else argnum)] (array[k : i, l : i] j)))[argnum, to_int((sum[f : e] sqrt(a())))][argnum, (sum[f : 384, g : argnum, h : ((- (argnum / d)) % (- e))] h), {args}{0}[623]]
let i[j, k] = {[f], (if (e && true) then (array[i : d, j : (- e)] h) else f)}{1}
write image (array[l : d, m : k] (array[n : argnum, o : k, p : j] {atan(a()), sqrt(a()), a(), to_float(g)})[l, {tan(a()), (g != j), k}{2}, g]) to "l.png"

let l[m, n] = c
type o = bool
let p = sin(tan(acos(pow((sum[p : k, q : h, r : n] a()), (if true then 2.8 else a())))))
let q[r, s, t] = (if ((if true then p else a()) != sqrt(a())) then {(if (true && false) then (array[q : n, r : n, s : m] c) else (array[q : argnum, r : g, s : h] l)), (! (argnum > 12)), k} else {(array[q : m, r : d, s : j] l), (if j then (g == e) else p), {h}{0}}){0}
let u[v] = [l]
