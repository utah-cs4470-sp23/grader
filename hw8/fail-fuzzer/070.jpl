type a = bool
let b = to_int(((- (- sin(90.5))) / asin(acos(asin(67.94)))))
fn c({ d[e, f] : int[,] }, g : float) : a {
  let h[i, j] = (if (if (array[h : 805, i : (argnum % b)] false)[argnum, 743] then true else (! (! (e != e)))) then d else (array[h : b, i : {atan(g), (- f)}{1}] i))
  return (acos(tan((array[k : f, l : argnum] g)[d[32, e], e])) != tan((sum[k : argnum, l : (- 753)] acos(log(g)))))
  let {k, l[m, n], o} = (array[k : to_int(acos(acos(g))), l : {i, 693, cos(g)}{0}, m : b] d)[to_int(tan((if (false && false) then 84.32 else sin(g)))), f, (sum[k : to_int(g), l : f] argnum)]
  assert ((- acos(atan(o[f]))) <= (if (c({d}, to_float(i)) || (if true then true else (j != m))) then {(- g), exp(g), h}{0} else (- acos(17.96)))), "p"
  return (if (! ((if false then true else k) || (j >= f))) then {g, k, (array[p : b, q : n, r : i] true)}{2} else (array[p : e, q : i, r : (- f)] ((sum[s : q, t : q] q) != p)))[(- {argnum, d}{1}[i, (sum[p : 437, q : b] q)]), n, e]
}

fn d(e[f, g, h] : int[,,]) : a {
  return c((if d((array[i : b, j : (sum[i : 853, j : f] f), k : (- 623)] (sum[l : i, m : 878, n : i] h))) then {(array[i : (- argnum), j : (f + b)] g)} else {(array[i : f, j : (f % b)] (sum[k : j, l : j, m : f] b))}), [{65.73}][argnum]{0})
  let i[j] = (array[i : b] exp(to_float((- g))))
  let k = (f > ((array[k : (- j), l : j] argnum)[659, (array[k : argnum] b)[j]] - argnum))
  let {{l, {}}} = (if (if (d(e) && false) then k else (array[l : argnum] k)[442]) then (array[l : g, m : (sum[l : argnum, m : (- f)] l), n : (if false then argnum else b)] {{k, {}}}) else j)[f, j, argnum]
  return (c({(array[m : argnum, n : f] argnum)}, (if (919 == b) then sin(sqrt(21.13)) else cos(exp(69.39)))) && (if c({(array[m : b, n : h] b)}, exp(log(25.93))) then (if false then {j, f, k} else {f, j, true}){2} else (! false)))
}

type e = int
let f = pow(acos((if (false == true) then (b > argnum) else (26.28 * pow(13.88, 83.1)))), pow(atan2(72.66, log(to_float(843))), atan2((argnum - argnum), (sum[f : (623 * argnum), g : (- b), h : 9] to_float(h)))))
let g = (36.35 + f)
let h = (sum[h : ((if false then b else (- b)) - argnum)] (if ((h > (- 999)) && ((sum[i : 779, j : 547] g) == (69.33 * f))) then to_int((atan(g) * atan2(g, f))) else argnum))
let {i[j], k[l, m, n]} = {{(if false then (array[i : 318] 442) else [b, b, h]), (array[i : (- h), j : h, k : h] j)}}{0}
print "o"

fn o(p[q, r] : bool[,]) : e {
  assert ((! ((! true) || (! false))) && d(k)), "s"
  let s = tan((if true then {g} else {f}){0})
  return args[to_int(pow(s, s)), o({p}{0})]{1}
  let {{}, t[u, v], w[x, y]} = {(if (if (2.02 == 2.29) then {l, q, false} else {argnum, 438, true}){2} then {} else {}), (if ((- 803) <= (- n)) then {s, p}{1} else (array[t : to_int(cos(s)), u : h] true)), p}
  return to_int(atan(atan(tan(log(g)))))
}

fn p({ q : int, r[s, t, u] : e[,,], { v[w, x, y] : a[,,] } }) : int {
  let z[A, B] = (if (if v[s, b, argnum] then (log(g) != tan(sqrt(f))) else {k, true, g}{1}) then (array[z : x] (array[A : 786, B : w] f))[s] else (if d((array[z : w, A : l, B : h] j)) then (array[z : l, A : 193, B : h] (array[C : b, D : A] f)) else (array[z : n, A : 470, B : x] z))[u, y, (if (s <= u) then (array[z : s, A : w] x) else (array[z : argnum, A : x] n))[w, o(n)]])
  let {C[D, E], F[G, H, I], J[K, L]} = (if ((h < m) && true) then {s, B, {(array[C : q, D : y] m), v, (if true then z else z)}} else n){2}
  return b
  let {M, {{N[O, P, Q], R[S, T, U]}, {}}, V[W, X, Y]} = (if (! d(r)) then {B, {{(array[M : m, N : t, O : y] B), r}, {{}}{0}}, {r}{0}} else {b, {{r, (array[M : u, N : E, O : j] x)}, {}}, (if {true}{0} then r else (if false then (array[M : E, N : t, O : q] y) else (array[M : I, N : I, O : x] n)))})
  return I
}

