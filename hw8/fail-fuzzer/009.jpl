fn a() : bool[,] {
  assert ((if (651 != argnum) then {a()} else {a()}){0}[751, (- (if false then to_int(1.74) else argnum))] && (cos(log(to_float(argnum))) >= (sum[b : 272] 71.11))), "b"
  let {b} = [(false || false)][to_int(sqrt(true))]{0}
  let {{}} = (if (log(46.88) > [asin(92.67)][argnum]) then (if (! true) then (array[c : 331, d : (- argnum), e : (819 % b)] {{}}) else (array[c : argnum, d : (sum[c : b, d : b, e : b] d), e : 317] {{}}))[(sum[c : (- argnum)] (- 534)), (sum[c : args[argnum]] (767 / args[argnum])), (975 + ((- 547) - b))] else (if (125 != to_int(to_float(b))) then {{{}}}{0} else (array[c : argnum, d : 23] {{}})[(229 % (if false then 904 else b)), b]))
  let c[d, e, f] = (if ((- b) < argnum) then (if ((! false) && false) then (array[c : to_int(95.07)] (array[d : c, e : 750, f : b] a())) else (array[c : argnum] (array[d : c, e : argnum, f : c] a())))[169] else (array[c : ((sum[c : argnum, d : (b % b)] (argnum + d)) * (- (- b))), d : (if (! false) then {args, b}{1} else (sum[c : 5] (- b))), e : (9 + argnum)] (array[f : (sum[f : c, g : c] 901)] a())[{9.29, a(), e}{2}]))
  return a()
}

fn b({ {  } }, {  }) : {int,bool} {
  return (array[c : b({{}}, {}){0}, d : (- (sum[c : true, d : (- argnum), e : 220] (sum[f : 370] f))), e : {54.21, argnum}{1}] (if false then b({{}}, {}) else {argnum, true}))[{acos(to_float(603)), args, ((sum[c : argnum, d : argnum] d) + 943)}, {argnum, (array[c : argnum, d : 510] {args, 665}), args}{0}, [to_int(to_float(argnum))][[argnum, (sum[c : argnum] c)][(sum[c : argnum, d : (- argnum), e : argnum] 214)]]]
  assert ((true && ((argnum - argnum) != {argnum}{0})) || b({{}}, {}){1}), "c"
  assert {{false, (! true), {59.74, 21.95, argnum}}, 387}{0}{0}, "c"
  return b(args[(if {args, true}{1} then to_int(84.15) else ((- argnum) + (if true then argnum else 512))), (- (if false then (sum[c : 255] argnum) else 647))], (if ((! true) == ((false && true) == (318 == argnum))) then (if (if true then false else (! true)) then args{0} else {{}}{0}) else (if (60.94 != exp(11.15)) then {} else (if (491 != 955) then false else (if true then {} else {})))))
  return (array[c : [argnum, argnum, 18][425], d : (if (argnum <= 479) then 868 else argnum)] (array[e : d, f : argnum] {84, true}))[(sum[c : ((- 365) / argnum), d : to_int(asin(48.1))] c), (if (if false then false else (if true then false else false)) then (sum[c : argnum, d : (- argnum), e : 530] (735 * argnum)) else argnum)][255, 602]
}

show to_float(to_int(atan(cos(79.39))))

let c = to_int(pow(log(acos(46.25)), to_float(argnum)))
let {d, e[f]} = (if (if true then (! (! (true && true))) else (if (true || true) then false else ((if false then 645 else argnum) > (591 - argnum)))) then (if (if a()[(c * 870), (c - 68)] then (if false then false else false) else ((if true then c else argnum) > 637)) then (array[d : argnum, e : to_int(59.12)] {a(), args})[(- (c / c)), argnum] else (if {false}{0} then {a(), args} else {a(), (array[d : 540] argnum)})) else (if (974 == 603) then {true, (if (argnum >= argnum) then [c, 285] else args)} else (if (if (c > 788) then (127 == 160) else (true && false)) then {a(), (array[d : c] d)} else {(array[d : argnum, e : c] true), (array[d : 724] 975)})))
let g[h] = (array[g : 649] (- c))
type i = int
type j = bool
let k = 72
let l = (852 < (sum[l : 207, m : c] m))
fn m(n : {}[]) : bool[,,] {
  let {o, p, q} = {e, n, to_float(k)}
  assert (if ((- to_float(c)) >= (array[r : (argnum + c), s : (- 293), t : f] 56.43)[k, h, (if l then (f + k) else (sum[r : c] c))]) then d[(if true then (- k) else f), 321] else h), "r"
  let r[s] = (if (to_int(atan2(84.31, q)) <= 298) then {{n, o}, 1.08}{0}{1} else [(- (array[r : f, s : argnum] r)[k, to_int(90.25)]), (- g[argnum]), h])
  let {t, {u}} = {{e, {f}}, (atan(log(q)) + to_float((if l then argnum else k))), m(n)}{0}
  return m((if (if (if l then a() else d)[k, (sum[v : s, w : argnum] s)] then (! l) else l) then [{}, {}, (if (f < k) then {} else n[argnum])] else (array[v : (sum[v : c, w : c, x : r[c]] e[f])] (if false then (if true then {} else {}) else (if false then {} else {})))))
}

let n = h
