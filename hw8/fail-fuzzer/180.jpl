let a = to_int(exp(sin(68.25)))
show log(sin((if false then sin(atan(18.42)) else (array[b : a] 80.97)[argnum])))

let b[c, d, e] = (array[b : (if (if (false || true) then (array[b : 682, c : argnum] false) else (array[b : argnum, c : 817] false))[(if (true != true) then (sum[b : a, c : 261] argnum) else argnum), (- argnum)] then (to_int((sum[b : argnum, c : 53] 82.41)) * 520) else to_int(args[a, a, 417])), c : (sum[b : 385] to_int(atan2((- 65.9), cos(18.79)))), d : (if (! false) then (array[b : (sum[b : a] 862), c : (104 * a)] a) else (array[b : a, c : (sum[b : 472, c : a] c)] argnum))[831, args[(- (- 898))]]] [tan(acos(acos(25.38)))])
let f = b
fn g() : int[,] {
  return (array[h : (if (array[h : c, i : argnum] (false && true))[d, d] then (if true then (- (c + argnum)) else d) else (d % (g()[argnum, a] * e))), i : {(array[h : argnum, i : a] d)}{0}[[to_int(12.61)][to_int(to_float(d))], d]] a)
  let h = (! (! (((! false) && (! false)) && false)))
  let i = 86.93
  let j[k, l] = g()
  return g()
}

fn h() : bool {
  let {i, j[k, l], {}} = {b}{0}[c, to_int(69.72), (- argnum)][argnum, (if (array[i : (- a), j : a, k : d] h())[(array[i : argnum, j : c, k : argnum] argnum)[376, e, c], argnum, a] then a else 107), (sum[i : (if (if (! false) then (false == h()) else (false || false)) then d else (e % c)), j : g()[(- d), (sum[i : e] (sum[j : c, k : 969, l : 71] c))]] (if false then h(){1} else a))]
  let m = [asin(pow(asin(asin(49.82)), (if (l != d) then sin(99.02) else sin(12.3)))), tan(sin(sin(atan(98.77))))]
  let n = {}
  let o = 71.68
  return false
}

fn i(j[k, l] : int[,,][,], {  }, m[n, o] : float[,]) : {{{},bool,float},{bool,bool},{bool}} {
  return {(array[p : 128, q : l, r : (- c)] i(j, {}, m)), (array[p : a, q : k, r : a] q)[(l + k), o, (- argnum)], d}{0}[(l * a), d, a]
  return (array[p : d, q : a] i({j, argnum}{0}, {21.0, {}}{1}, (if (h() || false) then m else (if true then m else m))))[o, n]
  let p[q, r] = m
  let s[t, u, v] = b
  return {(if ((sqrt(98.05) - (86.81 * 42.2)) <= {6.53}{0}) then l else {(if h() then (if false then {} else {}) else {}), h(), 97.85}), (array[w : u, x : q, y : o] (if h() then {true, false} else {false, h()}))[763, u, (- (d % (d - l)))], (if (tan(57.98) == m[r, v]) then (array[w : l, x : o, y : u] {true}) else (array[w : l, x : n, y : u] 746))[(sum[w : n, x : a, y : to_int(26.98)] x), to_int(acos(exp(81.31))), l]}
}

fn j(k : float, {  }, { { l : bool, m[n, o] : bool[,] }, p : float }) : int {
  assert (atan2(sin((array[q : n, r : c] p)[(- e), c]), cos(to_float(e))) == tan(log((- p)))), "q"
  let q[r] = (array[q : e] sin((acos(tan(96.87)) - (- asin(k)))))
  assert ((atan2(log((sum[s : c] k)), cos(k)) + 44.71) < cos((if (array[s : n, t : d, u : r] l)[(- r), (if false then d else d), (if l then o else e)] then {p}{0} else log(exp(54.64))))), "s"
  let {s[t, u, v]} = (if ((n < n) && (to_float(n) != cos(sin(39.1)))) then {(array[s : 110] (array[t : 726, u : a, v : 849] c))[o]} else {(if (argnum < d) then (array[s : d, t : (- a), u : n] (argnum + o)) else (if false then (array[s : e, t : n, u : e] n) else (array[s : n, t : a, u : r] a)))})
  return sin(acos(acos(k))){0}
}

let k = asin(atan((if (if false then (! false) else (! true)) then 76.57 else sqrt(36.47))))
fn l(m : {{}[,,],int,float}) : {int[]} {
  let {} = {[{}, (if true then {} else {}), {}][(- 514)], l({m, 777}{0}), f}{0}
  return {[e, d]}
  let {{{n[o, p, q]}, r, s}, {t, u, {}}, v} = (array[n : a, o : argnum, p : (- a)] {{{b}, g(), g()}, {h(), to_float(c), {}}, o})[e, argnum, argnum]
  assert (array[w : p, x : o, y : v] sqrt(49.67))[v, v, {to_int(k)}{0}][(if e then h() else (array[w : 66, x : (if h() then c else d), y : e] v))[167, (if h() then v else 863), q], (o - v), (array[w : d, x : 377] c)[v, (if (t && h()) then argnum else p)]], "w"
  return (if (! (d > v)) then (if (h() && h()) then (if h() then l((if h() then m else m)) else l(m)) else l(m)) else (if false then (array[w : (sum[w : 232] c), x : o, y : p] {args}) else (array[w : a, x : (sum[w : p, x : argnum] v), y : q] {args}))[{b, c, d}{2}, c, (if true then ((e * e) - p) else (if true then s else r)[(if true then p else q), (if t then v else c)])])
}

let {{m[n, o], p}, q, {r[s, t], u}} = {to_float((- (if h() then 35 else 245))), a, {(if (a <= c) then {g(), g()} else {g(), g()}), args, (if (if false then h() else true) then {g(), c} else {g(), e})}}{2}
show argnum

