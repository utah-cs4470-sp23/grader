fn a() : int {
  let b = {acos({(- 48.97), 699, to_float(623)}{0})}
  let c[d, e, f] = (if ((array[c : a(), d : 623] argnum)[a(), 509] == ((if false then a() else argnum) * (a() % a()))) then {(argnum >= argnum), atan(tan(73.11)), (array[c : 665, d : argnum, e : to_int(7.86)] atan(0.42))} else {(a() == a()), tan(to_float(a())), (array[c : args[930], d : (221 - a()), e : 492] tan(80.41))}){2}
  let g = c
  let {} = (if {c[a(), argnum, f], atan(83.96), false}{2} then (array[h : f, i : argnum] {{}, false, false})[to_int(89.06), f] else {61.58, (array[h : 823] false)[args[argnum]], (! false)}){0}
  return (593 + e)
}

let b[c, d, e] = (array[b : argnum, c : a()] {(array[d : c, e : argnum, f : a()] 35.36), atan(53.0)})[{(- a()), (701 <= a())}{0}, ({argnum, true}{0} - {argnum, false}{0})]{0}
let f = (e > (- d))
let {{{g[h], i, j}, k[l, m], n}, o, p[q]} = (if (if (to_float(e) != exp(92.22)) then [f, f] else (array[g : argnum] true))[d] then {{{[58.32], b, 907}, (array[g : 969, h : c] b), (tan(88.71) < 87.05)}, sqrt(sqrt((sum[g : e] 34.88))), (array[g : {e}{0}] (array[h : d, i : 520, j : argnum] c)[(if f then e else c), (- argnum), g])} else {{{args, (if false then b else b), to_int(1.67)}, (array[g : c, h : f] g), (if f then false else (false && true))}, (- to_float(a())), [711, (c * c)]})
show ((- (if (! n) then (array[r : d, s : a()] j) else (array[r : m, s : d] j))[a(), (array[r : argnum, s : h] argnum)[h, h]]) >= to_int(tan(atan(23.29))))

let r[s, t, u] = i
let {v[w, x, y], {{}, z[A, B], C}} = {(array[v : q, w : l, x : 45] (array[y : e, z : s, A : h] y)), {{{}}{0}, {argnum, (array[v : u, w : d] s), asin(o)}{1}, 275}}
fn D(E : {{float,bool}}, F[G, H, I] : int[,,]) : float {
  let J = k
  return atan2(((sum[K : A, L : h, M : z[I, m]] (sum[N : 766] (- o))) % log(o)), atan2(acos(D((if f then E else E), v[C, argnum, q])), D(E, F)))
  let {{K[L, M, N], {}}, O[P, Q, R], {S[T, U]}} = (if [d][H]{0} then {k, {{i, {}}, F, {z}}, p}{1} else (array[K : d, L : c, M : s] {{b, {}}, F, {z}})[C, t, h])
  let {V[W, X], Y, Z[aa]} = {{k, j, p}, O, asin((array[V : argnum] 52.01)[d])}{0}
  return log((- (if (false && (I == 358)) then atan2(w, g[332]) else o)))
}

fn E({ { F : {int,float,int}[] }, { G[H, I] : {float,bool}[,], { {  }, J : bool[], K : {bool,bool[,,],float} }, { L[M, N] : int[,], O : float, { {  }, P[Q] : bool[], R[S, T, U] : bool[,,] } } }, {  } }, { V[W, X, Y] : int[,,], {  }, Z : {int}[] }) : bool[,,] {
  let aa = C
  let ab = tan(tan(exp(acos(o))))
  let {ac[ad, ae, af]} = (if n then (if (if n then (f && false) else (! f)) then (array[ac : W, ad : argnum] {i}) else (array[ac : t, ad : d] {r}))[t, S] else (array[ac : 879, ad : (sum[ac : to_int(ab)] M)] (if (ab <= O) then {r} else {b}))[T, aa])
  assert true, "ag"
  return E({{(if R[af, C, T] then F else F)}, {(array[ag : af, ah : a(), ai : S] G)[j, argnum, T], {{}, P, K}, {L, (sum[ag : X] O), {{}, P, R}}}, {}}, {V, {{}, e}{0}, [Z[ad]]})
}

fn F() : float[,,][,] {
  let {} = c{0}
  let G = m
  assert (if (if f then {f} else {n}){0} then (if (! n) then {f, l} else (if false then {f, c} else {false, argnum})) else {{true, A}, {true}, (array[H : h] r)}{0}){0}, "H"
  let H[I] = g
  return (if (if (n && n) then n else (t < h)) then {{k, k, b}} else {{k, k, r}}){0}{1}
}

let {} = (array[G : h, H : (sum[G : h] (if (A != w) then (if f then q else e) else (- t))), I : c] {})[t, h, (sum[G : s, H : a()] H)]
fn G(H : int, I[J, K] : int[,]) : {bool,bool,bool}[,,] {
  let L = q
  return (if (sin(tan(cos(1.07))) > to_float(s){0}) then {G((- x), I), sqrt(o), atan(atan2(o, o))}{0} else G(t, (array[M : j, N : to_int(to_float(J))] s)))
  assert (! ((t != J) || (tan(asin(66.39)) != atan(exp(38.93))))), "M"
  return (array[M : (if ((- sin(35.66)) <= 52.51) then j else l), N : j, O : H] [{f, (if f then f else false), f}, {f, f, (o >= o)}][A])
  return (if f then [(if false then G(644, z) else G(L, z))][j] else G((if (! true) then (- (- u)) else (J - B)), (if n then {z} else {z}){0}))
}

