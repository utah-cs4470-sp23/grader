let {a, {}, b[c, d, e]} = (if false then {to_int(sqrt(exp(65.91))), (if true then (if (if true then false else false) then {} else {}) else {}), {(false && false), (array[a : argnum, b : 286, c : 667] 30.82), argnum}{1}} else {(sum[a : (997 / 429), b : (sum[a : argnum, b : 961] 471), c : 844] atan(62.7)), {920, {}, false}}{1})
fn f() : float {
  return sin(exp((atan2(f(), 9.74) / asin(tan(57.93)))))
  let g = atan({{f(), a}}{0}{0})
  let {{h, {i, j}}, {{k, {l, m[n, o, p]}}}, q} = (if (array[h : e, i : (if (! true) then e else args[962])] (if (e <= d) then (a > a) else (if false then false else true)))[to_int(to_float((a % a))), (sum[h : d] (if (d != c) then a else e))] then {{f(), {d, c}}, {{e, {f(), b}}}, tan(atan2(g, tan(g)))} else {{(f() % (g * 58.81)), acos(91.97)}, {{d, {g, b}}}, g})
  let {r[s, t]} = {(array[r : k, s : d] ({h, 41.28, j}{1} + (if (g == l) then sin(q) else f())))}
  return atan2(m[e, d, p], g)
}

show [pow(acos(sqrt(tan(f()))), pow(tan(asin(17.11)), atan2(to_float(814), tan(94.24))))]

fn g(h : int, i : float) : {} {
  let {j[k, l, m], n[o], p} = (if (array[j : a, k : d, l : d] false)[a, h, (- h)] then (array[j : d] {(array[k : d, l : e, m : 524] j), [argnum], to_float(c)}) else (array[j : d] {(array[k : argnum, l : d, m : h] l), args, to_float(c)}))[a]
  let q[r, s, t] = (if (if true then {a} else {c}){0} then (array[q : (- e), r : to_int(89.32), s : k] (array[t : argnum, u : m] j))[l, h, argnum][(h + (- argnum)), k] else {{j, false}{0}}{0})
  assert (array[u : (array[u : l, v : r] (sum[w : l, x : v] 378))[e, e], v : l] (! true))[{log(p), {t, m, q}, f()}{1}{1}, a], "u"
  let {} = (if {g(to_int(i), (sum[u : k, v : k, w : argnum] 53.85)), o, (false || false)}{2} then j else g(h, sin(asin((sum[u : a, v : 517] p)))))
  return (if (a >= (- c)) then g((sum[u : a, v : a] ((r * e) - (sum[w : t, x : o, y : r] c))), sin(cos(i))) else g(l, exp({24.31, a}{0})))
}

let h = (48.56 <= tan(to_float(c)))
assert {{(f() <= 88.63)}}{0}{0}, "i"
assert (if ((sum[i : c, j : c, k : d] a) == (if (! h) then a else 338)) then (array[i : e, j : args[a]] (! (716 < c))) else [(array[i : 224, j : argnum] h)][(- a)])[e, (if (array[i : argnum] h)[d] then {log(f()), c, true} else {acos(f()), e, h}){1}], "i"
let i = g(to_int(cos(58.51)){0}, atan2((if (h && true) then sqrt(13.44) else to_float((- 192))), (if (argnum > a) then (array[i : a, j : e] f()) else (array[i : c, j : e] 96.0))[(if h then c else (d * a)), d]))
fn j() : bool {
  let {k[l], {m, {n[o], p}, q[r, s, t]}} = (if {(argnum > 213), [e, 952, c], [j(), j()]}{2}[(- {e}{0})] then {(if (! j()) then {f(), args} else {88.42, args}){1}, {(a > to_int(f())), {[7.15], 369}, {b}{0}}} else {[d], {(j() && h), {(array[k : argnum] f()), (if h then e else d)}, b}})
  let u = argnum
  let v[w, x] = (array[v : args[(if h then (if false then s else 72) else (sum[v : a] argnum))], w : (- o), x : u] (if (! (j() != false)) then (array[y : p, z : x] e) else (array[y : (sum[y : o, z : d] z), z : r] r)))[l, l, p]
  let y = i
  return (if true then {(! (x == x)), i, t} else (array[z : (p - o)] {h, i, t})[t]){0}
}

assert true, "k"
print "k"

fn k({ l : float[,,], { m[n, o] : int[,,][,], p[q, r, s] : {float,bool}[,,], t[u, v, w] : bool[,][,,] } }, x[y, z, A] : float[,,]) : float {
  return sqrt(f())
  assert j(), "B"
  let B = u
  let C = s
  return 25.72
}

