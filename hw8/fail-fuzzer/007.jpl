fn a() : float {
  assert (! {(276 != (- 419))}{0}), "b"
  assert (if {} then ((array[b : 756, c : argnum, d : argnum] (b > argnum))[(if (argnum <= argnum) then (- 585) else to_int(a())), (if true then argnum else 246), 367] == (array[b : (sum[b : argnum, c : argnum] b)] (! true))[argnum]) else ((! ((80.38 == a()) && (64.61 < a()))) && (argnum == (array[b : argnum, c : 839, d : argnum] b)[argnum, argnum, argnum]))), "b"
  assert false, "b"
  return atan2((if (atan2(97.71, a()) == atan(a())) then (array[b : argnum, c : to_int(a())] 1.14) else (array[b : (argnum % argnum), c : (- 604)] log(26.21)))[((sum[b : argnum] argnum) / (323 / (sum[b : argnum, c : 835, d : 105] 68))), (if {argnum, true}{1} then 206 else (sum[b : (sum[b : argnum, c : 226] b), c : (sum[b : argnum] argnum), d : argnum] argnum))], exp(acos((- (sum[b : 839, c : argnum, d : 747] 7.25)))))
  return atan((if false then atan(tan(pow(60.59, a()))) else a()))
}

let {{b, c}, {{d[e, f, g], h[i, j], k[l]}}} = {(if true then {atan(a()), {argnum, args}, cos(a())} else {a(), {894, args}, acos(a())}){1}, (if false then {{(array[b : 64, c : 336, d : argnum] 925), (array[b : 506, c : argnum] b), (array[b : argnum] argnum)}} else {{true, 71.9, [argnum, 106]}})}
let m = e
fn n(o : float) : int {
  let p = (- (array[p : i] (array[q : j] 17.16))[m][argnum])
  let q = to_float((- (if (false && false) then {f, args} else {argnum, c}){0}))
  let r[s, t, u] = (array[r : i, s : m, t : l] asin(a()))
  assert (if (array[v : (sum[v : t, w : n(10.41)] (l % m)), w : b, x : f] ((i == f) && (g == x)))[e, argnum, (if false then true else {l}){0}] then ((if (if (l != l) then (341 > 258) else (t > l)) then (! (true != true)) else (u > g)) && (array[v : g, w : e] false)[d[f, (sum[v : argnum, w : b, x : j] w), e], j]) else {(array[v : g] true), args}{0}[g]), "v"
  return j
}

let o[p] = k
fn q() : float {
  let r = exp((if ((f == l) && {false}{0}) then tan(tan(log(q()))) else acos(pow(sin(q()), atan2(36.63, q())))))
  let {} = (if (a() < sqrt(args)) then {(if (argnum > e) then (if true then {} else {}) else {})} else {e, {{}}}{1}){0}
  let s = 76.5
  let {t[u, v, w], x, {y[z], {A[B], {C, D[E, F, G], H[I, J]}}, {K[L], M}}} = {d, tan(atan(cos((sum[t : p] a())))), {o, {k, {(- e), (array[t : argnum, u : g, v : b] v), m}}, {o, 110}}}
  return exp((- s))
}

show (- (array[r : {d, p, 438}{2}, s : j] b)[g, e])

fn r(s[t, u] : int[,], v[w, x] : int[,], y : bool) : float {
  let z = q()
  let A = i
  let B[C, D, E] = (if (! (to_float(g) >= tan(a()))) then {(array[B : (x + j), C : m, D : 739] to_float(j))} else (if false then {(array[B : w, C : f, D : x] q())} else {(array[B : x, C : f, D : 369] q())})){0}
  let F = to_int(r(h, v, (array[F : b, G : D, H : (- u)] true)[l, (m + 915), j]))
  return asin(sin(atan2((- pow(z, a())), r((array[G : 591, H : j] t), s, (if y then true else true)))))
}

fn s({  }, t[u, v, w] : bool[,,]) : bool {
  let x[y] = k
  return s({i, (if false then {} else {}), e}{1}, (if s({}, (array[z : b, A : b, B : b] false)) then {j, t, f} else (if t[i, argnum, w] then {u, t, e} else {175, t, y})){1})
  assert {s({}, t)}{0}, "z"
  let {z[A, B, C], D[E, F, G]} = (if s((array[z : y, A : l] {})[i, (- g)], (array[z : p, A : (- e), B : (if true then j else p)] t[argnum, w, argnum])) then {{t, (if true then d else d)}, asin(log(a())), args} else {{t, (array[z : j, A : e, B : l] m)}, q(), k}){0}
  return true
}

assert false, "t"
fn t({ u[v] : float[] }, { { w[x, y, z] : int[,,] }, A[B, C, D] : bool[,,], { { E : float[,], F[G, H] : {}[,] }, {  }, I : float } }, J : {int,float,int}) : float {
  let K[L, M] = (array[K : y, L : argnum] (q() < {atan2(I, I), c}{0}))
  let N[O, P, Q] = A
  return r((if true then (if {E, false}{1} then (array[R : C, S : y, T : P] h)[n(I), g, 599] else {h}{0}) else (array[R : P, S : g] (array[T : argnum, U : e] S))[b, (- P)]), (array[R : O, S : B] O), {pow(I, cos(I)), cos(q()), (f != M)}{2})
  let R[S, T, U] = (if K[v, C] then {(array[R : x, S : (sum[R : l] C), T : b] exp(a()))} else {(array[R : G, S : (- H), T : z] a())}){0}
  return (if (if (if (if true then false else true) then s({}, A) else K) then [(G >= argnum), M] else [true, s({}, N), (O != e)])[(sum[V : g] 840)] then sin(atan2(asin(I), sqrt((- a())))) else a())
}

fn u(v : {bool}, w : {bool,float,bool}) : bool {
  let x[y, z] = (if u(v, w) then (array[x : e, y : (if (array[x : p] false)[e] then to_int(sin(a())) else (m - f))] (true && false)) else {(array[x : f, y : j] (q() == a()))}{0})
  return (if (! s({}, (array[A : z, B : y, C : i] true))) then (array[A : argnum, B : args[argnum]] {A, true})[z, f] else (array[A : (- j)] b)[p]){1}
  let A[B] = (if ((852 == y) != (i < b)) then (array[A : g, B : to_int(tan(a()))] args) else (if (array[A : f] true)[(226 * m)] then (if false then (array[A : g, B : y] c) else (array[A : e, B : argnum] k)) else (array[A : (m / l), B : i] k)))[z, y]
  let C = sqrt(asin(cos((sum[C : f] sin(47.56)))))
  return u({(array[D : j, E : e, F : B] (e == g))[13, b, y]}, {(u({false}, (if true then w else w)) || (! false)), tan(p[argnum]), (u(v, w) || (p >= f))})
}

