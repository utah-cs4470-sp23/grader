let a = atan2(51.19, exp((- acos(cos(29.56)))))
write image (array[b : (array[b : argnum, c : (if true then argnum else 238)] b)[1000, ((sum[b : argnum] 745) + to_int(78.23))]] (array[c : 915, d : a] {tan(26.21), log(a), sin(a), 60.1}))[(if (if (833 >= 577) then {true} else {false}){0} then (args[(sum[b : argnum] argnum)] / (- argnum)) else {args[argnum]}{0})] to "b.png"

let {b[c, d, e], f[g, h, i]} = {{cos(tan(65.17)), (array[b : (718 / 94), c : argnum, d : 687] 34.11), cos(sqrt(14.84))}{1}, (if (false && true) then (array[b : 686, c : argnum, d : to_int((- a))] (935 != b)) else (! true)[((- 91) - 149), (array[b : argnum, c : 56] b)[(- 284), argnum]])}
let j = pow((- log(cos(to_float(i)))), {(sum[j : argnum, k : 88] exp(66.86)), {b}{0}}{0})
let {} = {}
let {} = (if (atan(j) < to_float(i)) then {j, acos(a), {i, {}}} else {(97.33 / j), (sum[k : d, l : g] a), {453, {}}}){2}{1}
fn k(l : bool, { m : {bool[,]}, {  } }) : bool {
  let {{}, n[o, p, q], {{{r}}, s, {{t[u, v, w]}}}} = {(if ((- cos(51.75)) < (- sin(a))) then {(if l then {} else {}), asin(7.46), to_int(81.79)}{0} else (if (if true then (! l) else true) then (array[n : c] {})[i] else {c, {}}{1})), {{b, f}, args, (array[n : 392] h)}{0}{1}, {{{m}, g}{0}, (sin(asin(j)) == (19.61 + (sum[n : 505] j))), {{(array[n : i, o : 407, p : i] e)}}}}
  let x = 96.79
  return (s && s)
  return ((! g) == k(s, {{m, {}}}{0}))
  return (! (k(((- x) == exp(a)), {m, {}}) == k((array[y : g] s)[119], {{r}, (if false then {} else {})})))
}

let l = to_float((- g))
let {{{{}, {m, n[o], p[q, r, s]}}, {t[u, v], w}, x}} = {{c, {(array[m : (- i), n : g] [a, 7.4, 61.24]), asin(j)}, to_float(e)}}
fn y(z : {bool,{}[,,]}, A[B, C, D] : float[,,]) : {bool} {
  let {E[F, G, H], I, {J}} = {b, B, {m}{0}}
  assert (! {sin(cos(a)), (to_int(j) == (F * 931))}{1}), "K"
  let K = r
  let {} = (array[L : h, M : D] (if true then (if true then {} else (if true then {} else {})) else {}))[c, g]
  return (if ((if f[v, e, q] then (array[L : q] false) else (array[L : u] true))[e] != z{0}) then y((if (a != x) then (array[L : q, M : v] z) else (array[L : D, M : q] z))[q, (o + (F % G))], (if false then {A, n} else {b, n}){0}) else {(if false then (! true) else (if false then (false && false) else true))})
}

fn z({ { A[B, C, D] : int[,][,,], E : float }, { { F : int, G : int[,,] }, H[I] : {int}[], { J[K] : bool[], L : int, { M[N] : {bool}[], O[P, Q] : bool[,], {  } } } }, R : float[][,] }, S[T, U, V] : {bool,int,int}[,,]) : int {
  let W[X] = (if (argnum <= P) then args else (array[W : g] W))
  let Y[Z] = (if ((r >= (- F)) || (if ((c <= s) && f[K, X, q]) then (c < q) else (array[Y : q, Z : N, aa : D] true)[B, N, r])) then args else W)
  return P
  let {aa, ab, ac} = (if (array[aa : B, ab : X] {b, 73.21, true})[(- X), argnum]{2} then {(if O[N, K] then {x, u, V} else {83.83, d, L})}{0} else {111, K, (if false then {E, argnum, Z} else {a, Q, o})}{2})
  return (- X)
}

print "A"

