let a = to_int(acos(log(to_float(to_int(48.38)))))
fn b() : {}[,,] {
  let {c, d[e, f], g[h, i]} = (if ((false || (false || (a < a))) != (false && (if (a != argnum) then false else (a != argnum)))) then (if (a > (a - a)) then {(- tan(1.76)), (if (107 > a) then (array[c : a, d : 298] b()) else (array[c : 293, d : a] b())), (array[c : argnum, d : 568] to_float(765))} else {asin(23.68), (if true then (array[c : 450, d : a] b()) else (array[c : 287, d : argnum] b())), (array[c : to_int(2.38), d : 530] sqrt(41.54))}) else {sin(cos(exp(63.96))), (array[c : a, d : (- (- a))] (array[e : a, f : d] b())[c, 690]), 623[a]})
  return (array[j : argnum, k : (- (sum[j : (sum[j : h] (sum[k : a] k)), k : ((sum[j : f, k : 64, l : a] h) / i), l : (array[j : a, k : 76] e)[e, argnum]] e)), l : e] {{}, [97.02, to_float(l)]}{0})
  let j[k, l, m] = (if (f == (if false then h else e)) then (if (true != true) then (array[j : e, k : argnum] d) else (array[j : argnum, k : h] d)) else (if false then (array[j : e, k : e] d) else (array[j : f, k : 812] d)))[i, a][e, h]
  return (array[n : a, o : (- (sum[n : l] (array[o : m, p : i, q : a] i)[h, (if false then n else i), 980])), p : (- (sum[n : (- 806), o : (if true then f else to_int(16.88))] a))] {{{}}, (array[q : k, r : h, s : k] m), j}{0}{0})
  return (array[n : (array[n : to_int((sum[n : m] c)), o : to_int(28.11)] l)[to_int(tan(sqrt(c))), i], o : a, p : argnum] (if (if false then false else (! (false || true))) then (if false then (array[q : a, r : n] {})[(f - p), to_int(38.74)] else j[m, n, (- p)]) else [{}, {}, {}][to_int(acos(26.34))]))
}

let c[d, e, f] = (if ((sum[c : (argnum - argnum), d : 775, e : (- a)] sin(16.64)) < to_float((- 590))) then {(array[c : a, d : argnum, e : (- argnum)] e), cos(cos(86.91)), pow(atan(52.53), to_float(848))} else {(array[c : a, d : (- 852), e : 37] (argnum + e)), acos(cos(13.74)), to_float((if false then a else 149))}){0}
let g = (! true)
fn h() : bool[] {
  let {i[j], k} = (array[i : (- e)] (array[j : argnum, k : 787] {h(), 120}))[(if true then (- (978 / f)) else d)][a, e]
  let {l[m], n} = (if (! (if ((! g) || g) then (true || (! g)) else g)) then {{(array[l : e] g), c}}{0} else (if ((if g then g else (if g then g else true)) && (k == (- argnum))) then (array[l : (sum[l : f] l), m : f, n : 686] {h(), c})[j, (if false then (sum[l : e, m : j] d) else (if false then f else j)), (- k)] else (if ((! false) && (true != true)) then {[g, g, false], c} else {h(), (array[l : f, m : argnum, n : f] l)})))
  let o = asin((sum[o : to_int(tan(exp(78.17)))] ((sum[p : m, q : a, r : c[a, m, j]] to_float(p)) % acos(57.33))))
  let {} = {(array[p : f, q : k, r : m] b())}{0}[f, ((if (e == k) then args[argnum] else j) % j), (if (false || true) then {f} else {k}){0}][d, f, f]
  return (array[p : argnum] {l, e, sin(o)})[(if (! (argnum >= d)) then (array[p : m] j)[e] else j)]{0}
}

fn i() : bool {
  let {j[k]} = (array[j : (a + f), k : (if (argnum == a) then argnum else (- (argnum + d)))] {h()})[(if (! (e < (sum[j : f, k : f, l : 543] d))) then (array[j : argnum, k : (- 490)] (sum[l : k, m : j] l))[612, a] else 378), (- (if false then {a, a, e} else {e, 69, a}){2})]
  assert (if i() then (array[l : argnum] (array[m : a, n : 832] true))[k] else (array[l : (d + a), m : k] ((f == 850) != (k > k))))[argnum, (if (log(sqrt(91.43)) != exp(acos(61.85))) then (- {c, 851}{1}) else argnum)], "l"
  return (exp((sum[l : (sum[l : (d - argnum), m : (if i() then f else e), n : argnum] (f / f)), m : a] to_float((- a)))) >= asin(sqrt((sum[l : k] 94.62))))
  return false
  return i()
}

let j[k, l] = (array[j : (sum[j : (if true then (array[j : d, k : d] d) else (array[j : d, k : a] j))[((sum[j : d, k : a, l : argnum] l) % c[f, f, a]), (if (a > argnum) then (sum[j : d, k : argnum] e) else (sum[j : e, k : a] j))]] a), k : (- 282)] pow(acos(51.9){1}, tan((array[l : e] 22.6)[to_int(90.6)])))
time let m[n] = [atan2(asin(to_float(argnum)), 41.69)]

time write image (if i() then (array[o : (- l), p : k] {to_float(l), 59.01, m[262], 96.11}) else (array[o : f, p : (- d)] {(- 44.79), cos(56.53), m[738], sin(36.69)})) to "o.png"


assert (if ((sum[o : 223, p : k, q : e] 35.66) <= atan(93.13)) then (if i() then {h(), args} else {h(), args}){0} else (array[o : n, p : (sum[o : k, p : e, q : k] 16), q : argnum] (array[r : a] g))[67, e, 513])[(to_int(atan2(12.34, log(31.31))) % k)], "o"
fn o() : {float} {
  assert (({(e / l), j[555, d]}{1} != {m}{0}[f]) && (({g}{0} && (24.2 < tan(39.57))) && (! g))), "p"
  let {p} = (if (! {26.77, a, i()}{2}) then {k} else {(- (array[p : d, q : e] e)[a, (sum[p : 199, q : f, r : d] r)])})
  assert [({i()}{0} && ((92.22 >= 56.81) || g))][677], "q"
  let q = (- (if (g && i()) then to_int(to_float(l)) else 805))
  return (array[r : (sum[r : e, s : 414, t : p] e), s : to_int(atan(acos(43.16)))] o())[k, d]
}

fn p() : int {
  let {{q[r, s, t]}} = (if (array[q : n, r : p()] ((f == l) && i()))[d, (array[q : d, r : (if i() then p() else l)] k)[p(), n]] then (if (array[q : n, r : (e / 49), s : k] (if g then true else g))[p(), (- argnum), (if (! i()) then a else e)] then {(if true then {c} else {c})} else {{(if false then c else c)}}) else {{c}})
  let u = args
  let {{}} = (if (if (i() && false) then (if g then {true} else {g}) else {(! true)}){0} then (if ((if (k == l) then m[n] else sqrt(18.62)) != ((sum[v : argnum] 61.09) - to_float(k))) then (if (exp(82.16) > tan(88.39)) then {{}} else {(if i() then {} else {})}) else {(array[v : p(), w : a] u), argnum, {{}}}{2}) else {(array[v : argnum, w : (- t), x : t] {})[l, r, s]})
  assert false, "v"
  return t
}

