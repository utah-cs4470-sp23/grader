let a[b, c, d] = (array[a : (array[a : args[argnum], b : 820] 640)[to_int((sum[a : 99, b : argnum, c : 445] 55.21)), 716]] {{a}, (array[b : a, c : a, d : a] d)}{1})[to_int(tan((if (! true) then 24.85 else exp(82.78))))]
assert ((! ((- to_float(d)) != pow(14.69, cos(19.71)))) || false), "e"
let e = 50.22
fn f(g : float[,]) : int {
  let h = (- (- (- to_float((sum[h : c, i : b] h)))))
  return (if (if true then e else (22.41 > 31.04)) then {{argnum, args}} else {{b, args}}){0}{0}
  let i = true
  let {j, k} = (array[j : (if true then to_int(sqrt(h)) else c), k : f({argnum, g}{1})] (if (if (! i) then true else false) then {cos(e), 273} else {to_float(d), j}))[to_int(h), (array[j : c, k : argnum] (array[l : d, m : 834] k))[(if true then (if false then 393 else argnum) else (sum[j : 206, k : c] d)), f(g)][argnum, b]]
  return (if (d <= 174) then d else (553 - to_int(e)))
}

let g[h, i] = (array[g : (array[g : (- c), h : argnum] g)[(- (648 - c)), 399], h : d] (array[i : 550] (array[j : argnum, k : d] 85.67))[(b / d)])[(to_int(e) + (if true then (sum[g : (sum[g : c, h : d] h)] (847 % b)) else argnum)), ((if (b != (- argnum)) then (if (true && true) then d else a[argnum, 86, d]) else d) + (if false then {b, b, argnum} else {b, b, b}){1})]
fn j(k[l] : int[]) : int {
  return {to_int(to_float(to_int(85.04))), (l < j(args)), c}{2}
  let {m[n, o], {p, q}} = (array[m : h, n : (if (g != false) then (sum[m : argnum, n : (d / i)] b) else {l, argnum}{0}), o : (sum[m : (if (true == true) then h else (sum[m : l, n : l] l)), n : f((if true then g else g)), o : l] (- o))] (if ((o < c) || false) then {(array[p : o, q : o] {}), {m, a}} else {(array[p : 845, q : l] {}), {c, a}}))[h, argnum, b]
  return b
  let {} = (if (c != f(g)) then {acos(e), {{}}} else {e, {{}}}){1}{0}
  return to_int(exp(exp(log(sqrt(25.42)))))
}

show h

let k[l] = [{[a, a, a], (if true then e else e)}, {(array[k : h] a), g[d, i]}, {(array[k : argnum] a), e}][(- 965)]{0}
fn m(n : float, o : bool) : float {
  let p = i
  assert (! {{o, e, a}}{0}{0}), "q"
  let {{}, {{{q, {}, r[s, t]}, u}}, v} = (if cos(log(e)) then {(array[q : d, r : 259, s : i] (if true then {} else {}))[i, i, (i - argnum)], {{{k, {}, g}, (! o)}}, e} else {a, {{{k, {}, g}, (p == p)}}, e})
  return m(exp(e), u)
  return e
}

fn n(o[p, q] : float[,,][,]) : float {
  let r = (sum[r : p] argnum)
  let {s} = (if (if true then (if (if false then e else true) then q{2} else (cos(31.88) != to_float(d))) else (tan(n(o)) >= atan2(tan(58.17), g[i, i]))) then (if args[b] then 603 else {{i}}){0} else (if (if (! true) then (! true) else (j(args) < j(args))) then (if (! false) then (if l then {l} else {h}) else {(b + h)}) else {argnum}))
  let t[u] = (if {false, s}{0} then {{a, args}, exp(e)}{0} else {{argnum, a, false}{1}, {162, args}{1}}){1}
  assert (j(args) > s), "v"
  return log(m(tan(cos(n(o))), (false == (if true then true else (! true)))))
}

assert (b <= f(g)), "o"
let o[p] = k
