let a[b] = args
let {} = (if (b < (to_int(87.84) - 946)) then 44.53 else {})
let {{}} = {{(array[c : b, d : 765] {})[(- 997), b]}}{0}
fn c() : float {
  let {d[e, f]} = {(array[d : to_int(atan(c())), e : argnum] (array[f : (- 30), g : (- 873)] g))[to_int(atan2(pow(50.56, 65.55), sqrt(70.79))), argnum]}
  assert b, "g"
  assert {(- cos(64.1)), (array[g : (sum[g : f] argnum), h : (sum[g : argnum, h : f, i : argnum] 239), i : b] (h > 55))}{1}[(sum[g : argnum, h : (if {false, e}{0} then to_int(asin(c())) else (sum[g : e] argnum))] h), (if (if (c() == 48.53) then false else (b != 258)) then {(sum[g : argnum] 393)} else {to_int(c())}){0}, f], "g"
  let g = sin(asin(to_float((sum[g : (f % argnum), h : e, i : argnum] 991))))
  return to_float({38.45, {d, 861, 78}, (array[h : 679, i : b] 515)}{1}{2})
}

type d = float[,,]
fn e(f[g, h, i] : {bool}[,,], {  }, j[k, l] : float[,]) : bool {
  let {{{m[n], o[p], q}}, {{r}, {s[t, u, v], w}}} = [{{{args, args, i}}, {f[i, g, argnum], {f, f}}}][(i / h)]
  let x = b
  let y = a
  let z[A] = (array[z : t] {(- t), (array[A : b] w)}{1})[q]
  return (! (! {(if false then false else true), (h != n)}{0}))
}

let {} = (if {true, 238, (sum[f : b] c())}{0} then {argnum, a, {{}, 133}{0}} else (if false then {83, a, (if true then {} else {})} else (if (! true) then {470, a, {}} else {553, a, {}}))){2}
fn f() : float {
  return f()
  assert (! (! [true][to_int(atan2(c(), 60.89))])), "g"
  let g = atan(sqrt((exp(pow(c(), 44.34)) + atan(32.76))))
  let h = (array[h : to_int(acos((if false then g else 11.22))), i : (- (if true then (if true then b else argnum) else (argnum * 384)))] e(b, {}, (array[j : i, k : args[b]] (- 3.31))))[argnum, (if false then (sum[h : to_int(exp(73.66)), i : (- to_int(f()))] (sum[j : (- i), k : (i - 976)] (sum[l : k] j))) else b)]
  return atan({atan2(exp(f()), (- c()))}{0})
}

read image "g.png" to g

let h = (sum[h : (sum[h : (sum[h : argnum, i : (- (argnum / b))] argnum), i : (if (! false) then (array[h : b, i : argnum] b) else (array[h : b, i : b] b))[(sum[h : argnum] (sum[i : argnum, j : h, k : 503] argnum)), ((- b) / (if true then b else argnum))]] (to_int(sqrt(c())) + b)), i : b] (sum[j : 546, k : (array[j : (b + argnum)] (- h))[(if (! true) then 864 else h)], l : (- (h * 741))] (if (if (910 < l) then false else (f() == 85.56)) then (array[m : k, n : h] h)[h, (937 / 130)] else (if (j >= k) then i else k))))
let i = (- atan2(sqrt(cos(atan(30.98))), log(pow(atan(c()), (f() % 51.99)))))
fn j(k[l, m] : bool[,], n[o, p] : float[,]) : int {
  let q = (sum[q : l, r : p, s : argnum] (if e((array[t : (r / m), u : p, v : 197] {true}), {}, (if false then (array[t : l, u : m] 85.21) else n)) then ({r}{0} - m) else h))
  let r[s, t] = g
  let {{u[v, w, x]}} = log({atan(f())}{0})
  let y = p
  return t
}

