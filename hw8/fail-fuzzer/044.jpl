fn a({ {  }, b : {}, c : float }, d : float) : float[,][] {
  let e[f, g, h] = (if (argnum < ((- to_int(d)) - 265)) then (if (7 > argnum) then (array[e : 891, f : (argnum - argnum), g : 708] true) else (array[e : (argnum * 76), f : 842, g : argnum] (if (true && true) then (g < f) else (f == g)))) else {(array[e : 727, f : argnum, g : 635] (argnum >= f)), (array[e : 410] to_float(493)), (argnum <= (sum[e : 388] 320))}{0})
  let {} = b
  let i[j, k, l] = (array[i : argnum, j : to_int(cos(7.34)), k : argnum] 196)[to_int(asin(to_float(h))), ({(f % f)}{0} % f)]
  let m[n, o] = a({(if (true == true) then {} else {}), (if true then (if true then {} else {}) else {}), {e, d}{1}}, sin(26.94))[h]
  return [(array[p : 532, q : (- to_int(84.32))] cos((sum[r : o, s : n, t : (p / h)] m[j, 423]))), (if true then (array[p : (- o), q : 311] tan(c)) else (if (if false then (193 == n) else (argnum >= g)) then (if (812 >= g) then (array[p : k, q : g] 43.08) else (array[p : o, q : k] c)) else {m, g}{0})), (array[p : (- (g / (h - j))), q : k] (- cos(atan(c))))]
}

let b = 13.01
let c = 415
type d = bool
fn e() : bool {
  let {} = (array[f : (if (array[f : 243, g : argnum, h : 524] true)[(sum[f : c, g : c, h : argnum] 87), (- argnum), e()] then 601 else (sum[f : 617] (if false then 305 else f)))] {})[c]
  let {{f, g[h], i[j, k]}, {{}, l[m, n, o]}} = {(if (if true then false else (to_float(c) > b)) then {c, args, (array[f : (argnum - argnum), g : c] 722)} else {(array[f : 806] argnum)[330], [argnum, argnum], (array[f : 188, g : c] f)}), {(array[f : (argnum + c)] (if e() then {} else {}))[678], (if ((- argnum) != to_int(73.74)) then (array[f : argnum, g : c, h : argnum] argnum) else (array[f : (c + 214), g : to_int(77.67), h : (argnum + c)] (926 - 268)))}}
  return (if ((sum[p : (- m)] {b}{0}) <= cos(sin(exp(81.65)))) then atan2((acos(95.68) - 89.86), atan(sqrt(b))) else ((if ((argnum != 504) || (! e())) then m else (c % n)) >= k))
  let p = (if false then (if (216 != 257) then [i] else (array[p : 73] i))[o] else {(sum[p : j, q : o] m), 68.94}{1})[((sum[p : c, q : o] (array[r : k, s : o] j)[k, n]) * h), o]
  return (array[q : [(sum[q : o, r : k] r), (if false then p else j)][cos(35.25)]] false)[c]
}

assert ((asin(84.27) > (if (if e() then (! e()) else (e() && e())) then exp(sin(b)) else acos(exp(27.84)))) && (false && (c != b{1}))), "f"
fn f(g[h] : int[], { {  } }) : int {
  let i = a({(- c), {(if e() then {} else {}), {}, to_float(c)}, f(args, {{}})}{1}, (if (if ((sum[i : c, j : c] h) >= (- c)) then (! e()) else {e(), b, e()}{0}) then atan2(atan(to_float(c)), sqrt(sqrt(b))) else [log(b), asin(85.02), b][h]))
  return (if e() then ((array[j : argnum, k : 63] j)[h, argnum] * to_int(atan(to_float(h)))) else 797)
  let {} = [{}, (if true then {args, args, {}}{2} else {}), {b, (if false then {} else {}), atan(b)}{1}][(sum[j : 193, k : f((if true then args else g), (if (false || e()) then {{}} else {{}}))] g[(sum[l : (c % h), m : (sum[l : h, m : j] 281), n : 53] c)])]
  let j = to_float(c)
  return (sum[k : (sum[k : (array[k : (- 314), l : (- argnum), m : (sum[k : argnum] h)] 20)[847, 3, (sum[k : g[365]] (sum[l : 149, m : k] 967))], l : (if e() then g[519] else 171), m : (if false then argnum else h)] {m, argnum, {}}{1}), l : 93, m : 306] (sum[n : (sum[n : {m}{0}, o : (l / (- c)), p : argnum] l), o : to_int(atan2(log(74.69), 96.9))] {o, c}{1}))
}

fn g() : {d,d} {
  let h[i] = a((array[h : argnum, i : (argnum - (if false then argnum else c)), j : c] (if (true == e()) then {{}, {}, 86.25} else {{}, {}, b}))[451, (if g(){1} then argnum else argnum), ((sum[h : (- 823), i : 134] i) % c)], log(exp(pow(57.39, (b % b)))))
  let j[k, l] = (array[j : argnum] {(array[k : j, l : argnum] l)})[(c % (- 981))]{0}
  let {{m[n, o], p}, q[r], s[t]} = (if (if (! {true, g()}{0}) then (((! e()) || false) || (if (e() || false) then (! e()) else false)) else (atan2(acos(b), 53.68) == {72.44, h}{0})) then (array[m : l, n : l, o : (if true then j else j)[(- i), argnum]] {{j, c}, [m, o, o], (array[p : c] args)})[to_int(sin(to_float(argnum))), (i % k), (if e() then (array[m : c, n : 184, o : i] o)[l, (argnum * c), (k % l)] else argnum)] else {{577, {j, k}}{1}, (if (i < argnum) then [args] else [args, args])[(if (e() != e()) then l else i)], [(array[m : 969] c), (array[m : 622] (m + m))]})
  let u[v, w, x] = (array[u : n, v : i, w : (sum[u : (if (if e() then (l <= r) else e()) then t else k), v : o] u)] m)
  return (if (if e() then g(){0} else (if e() then e() else e())) then {r, {q, g()}}{1} else k){1}
}

fn h(i[j, k] : d[,], l : bool, m : int) : {}[,] {
  let {n[o, p], q} = (if false then (if (to_int(exp(b)) > m) then {(array[n : k, o : (c / argnum)] (j > m)), f(args, k)} else {(array[n : k, o : (- c)] (false || true)), argnum}) else (if (if ((! false) == true) then (array[n : 861, o : 452, p : c] e())[(if true then k else k), 939, (- c)] else e()) then (array[n : (sum[n : j, o : j] argnum), o : k, p : 638] {i, k})[to_int(asin(43.16)), m, j] else {i, k}))
  let r[s, t, u] = (array[r : (- {m, q}{1}), s : m, t : (if e() then (array[r : j, s : m] r) else (array[r : argnum, s : q] argnum))[p, 55]] (array[u : o, v : p, w : t] e()))[argnum, to_int(atan(cos(sin(33.74)))), f((if true then args else (array[r : m, s : m, t : argnum] args)[q, p, (sum[r : j, s : k] q)]), {{{}}}{0})]
  assert {to_float(j), g(), {g(), k, c}}{2}{0}{1}, "v"
  let v = s
  return (if (if g(){0} then (array[w : args[p]] (! e())) else (if e() then [e()] else [false]))[((- (if e() then k else 702)) - q)] then {h(n, (u != v), (u % s)), (- argnum), [n, (array[w : u, x : o] l), i]}{0} else {h((array[w : k, x : u] false), (89.26 != b), (sum[w : p] c)), v, h(n, e(), (v * t))}{2})
}

time read image "i.png" to i


read image "j.png" to j

let k[l, m] = i
