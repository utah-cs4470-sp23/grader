let {a} = {pow(log(sqrt(tan(33.6))), (sum[a : (array[a : 161, b : argnum, c : argnum] b)[875, argnum, argnum], b : ((if false then 915 else argnum) - (sum[a : 624] 486))] asin(asin(29.27))))}
fn b({  }) : float {
  let c[d, e] = {(if ((- 359) <= argnum) then (array[c : 465, d : (sum[c : argnum, d : argnum] c)] args) else (array[c : 704, d : (- 283)] (array[e : d] d))), sqrt((- a)), cos((a % cos(27.02)))}{0}
  let {{{{}}}, f[g, h, i], {j[k, l]}} = {{{{{}}}, (array[f : argnum, g : argnum, h : (sum[f : argnum, g : 815, h : argnum] e)] {e, a}), {c}}}{0}
  let m[n, o] = {(asin(a) >= a), (array[m : argnum] c), [tan(a), a, sqrt(a)]}{1}[l]
  let p = m
  return atan(b({}))
}

fn c(d[e, f] : float[,], g[h] : float[]) : int[,] {
  return (array[i : {146}{0}] (array[j : e, k : 372] k))[(f + (array[i : e, j : e] e)[argnum, (h / e)])]{2}
  let i[j] = [argnum]
  let {{k[l]}} = (if (j <= (- e)) then (if (if (log(a) >= tan(19.49)) then ((if false then f else f) > argnum) else (j > f)) then {{i}} else {{i}}) else (if true then {(if true then {i} else {args})} else {{i}}))
  let m = exp(exp(log((sum[m : f] pow(a, a)))))
  return c((if (((- f) == e) || {true, m}{0}) then d else (if false then (array[n : l] d)[l] else d)), (if (true != (if false then true else (false && false))) then [(sum[n : args[j], o : e] b({}))] else [sin((sum[n : f] 91.21)), log(a), asin(m)]))
}

fn d() : bool {
  return (((! ((d() && true) || (! true))) && {(array[e : argnum, f : 892] a), d(), a}{1}) || (! {true}{0}))
  let {e[f, g]} = asin(sqrt(a))[(sum[e : (if (array[e : argnum, f : argnum] false)[794, argnum] then to_int(a) else 817), f : (if args{0} then (argnum / argnum) else {argnum}{0})] 261), ((if (if (if d() then false else d()) then d() else true) then (- (- 774)) else args[(- argnum)]) % 931)]
  let h = (tan(pow(pow((a / a), 41.79), tan((- a)))) >= (- (- acos(to_float(g)))))
  assert (array[i : (sum[i : (if false then args else args)[(- g)]] i)] (79.31 == (if (! d()) then sqrt(a) else asin(a))))[474], "i"
  return (((if d() then (array[i : argnum] h) else [h, h])[(sum[i : (if h then argnum else argnum), j : (argnum - f)] args[173])] != (if d() then (array[i : g, j : g] h) else (array[i : argnum, j : g] false))[581, f]) != (if (h == (g == (- g))) then d() else (if (if (if true then true else h) then d() else (argnum == f)) then (! (! true)) else (823 != 711))))
}

let e[f, g, h] = (array[e : to_int(atan(atan(b({})))), f : to_int(cos(73.54)), g : (array[e : (sum[e : 82, f : 668] e), f : argnum] {f, a, argnum})[(array[e : 970] e)[916], argnum]{0}] tan(log(pow((if d() then 33.66 else a), to_float(f)))))
print "i"

fn i(j[k, l, m] : {float,bool}[,,], n : float[,]) : {int,float,bool} {
  let o = k
  assert {i((if d() then j else j), n), (array[p : (335 * g), q : argnum, r : m] (231 > m))}{1}[l, h, f], "p"
  let p[q] = (array[p : (sum[p : f] 387)] log((array[q : (argnum - l)] acos(a))[(sum[q : 323, r : p] k)]))
  let r = argnum
  return {q, (array[s : l, t : (sum[s : f] r), u : m] {l, a, d()}), sin(asin(a))}{1}[(array[s : (- l), t : l, u : r] o)[f, r, (if (h >= k) then q else k)], argnum, ((- to_int((37.92 / a))) + g)]
}

write image (array[j : 216, k : f] {{to_float(h), b({}), 70.97, 97.9}, false, sin(to_float(k))}{0}) to "j.png"

let j = ((array[j : (- (sum[j : 586, k : f, l : h] argnum))] acos(atan2(8.48, a)))[f] - (- (acos(sqrt(68.98)) - acos(sin(a)))))
fn k(l[m, n, o] : bool[,,]) : bool {
  let {} = {}
  let p[q, r, s] = e
  let {t, u[v, w], {}} = {asin(pow(sqrt(atan2(46.23, j)), cos(sin(j)))), (array[t : (- g), u : f] r), [(if (d() && d()) then (if true then {} else {}) else (if d() then {} else {})), [{}][h], (if l[f, argnum, s] then {} else (if false then {} else {}))][(if (o == g) then {g, true, f}{0} else q)]}
  assert ((! ((if true then j else true) || ((! d()) || false))) || (w < (- h))), "x"
  return (! (if d() then {(false || d())}{0} else (! (! true))))
}

let {l, m} = {(if (! (d() || true)) then {sqrt(j), (- j)} else {asin(j), asin(j)}), acos(tan(b({}))), acos(acos(cos(a)))}{0}
time print "n"


