let {} = (if (true || ((! false) != false)) then (array[a : argnum, b : argnum] {{}})[{argnum, args}{0}, 280] else (array[a : 19, b : (argnum * argnum)] b)[(- argnum), argnum]){0}
let {a[b, c], d[e, f], g} = {(array[a : ((- 86) / to_int(to_float(903))), b : (sum[a : (sum[a : argnum, b : (if false then argnum else 613)] (- 877)), b : (- 275)] 23.52)] {to_float(argnum)}), 39.4[argnum], (sum[a : (array[a : (- 680), b : argnum, c : argnum] (sum[d : a] 368))[(- argnum), to_int(32.14), (to_int(38.46) + 546)]] asin(to_float(argnum)))}
show {cos(exp((sum[h : b, i : argnum, j : 208] 30.93))), to_int((array[h : 811, i : c] g)[argnum, argnum]), true}{1}

fn h({ { { {  }, i[j, k, l] : {bool,int,bool}[,,], {  } }, m[n] : float[][], o : {bool,int,float[,]} }, p[q] : float[], r[s, t] : {}[,] }) : bool {
  assert false, "u"
  let u = sin((56.82 + 36.82))
  let {{}} = {{}}
  let {{}, v[w], x[y, z]} = (if (if (true || o{0}) then {d[e, k]} else {(44.12 > 28.4)}){0} then (array[v : t, w : s, x : s] b)[c, o{1}, to_int(sin(u))] else {(if (! t) then r[e, 529] else a), {tan(g), (u * 19.26), p}{2}, (array[v : k] (array[w : argnum, x : f] n))[j]})
  return (! m[s]{1}[(if (l != n) then f else j), (- z), y])
}

let {} = tan(acos(sin(g)))
let i = (array[i : argnum, j : (array[i : (b / b), j : (c - f), k : c] (array[l : 349, m : c] b))[to_int(to_float(e)), (sum[i : (e % f), j : (- f), k : 512] j), c][f, (if (! true) then f else (argnum - 702))]] d)
let j[k, l] = d
let m[n, o] = (array[m : (c * (- argnum)), n : l] a)[(sum[m : 542] m), {e, (array[m : argnum, n : 972, o : argnum] argnum)}{1}[args[l], b, 402]]
fn p() : {} {
  assert (! {o, to_float(to_int(97.6)), (false || true)}{2}), "q"
  let {} = [{48.69, p(), i}{1}][k]
  return (if (array[q : e, r : argnum, s : f] (q != q))[e, (if (863 >= e) then f else k), (- n)] then (if (array[q : argnum, r : c] false)[579, (sum[q : o, r : c] l)] then log(76.23) else (array[q : k, r : o, s : c] p())) else (if (array[q : e, r : k, s : k] false)[e, argnum, c] then (array[q : (sum[q : k] q), r : b, s : (sum[q : k, r : e, s : b] q)] {}) else a))[(- 123), l, (- 326)]
  let q = log(log(c[n, (k % (- o))]))
}

let q[r, s] = d
fn t(u : int) : bool {
  let v = (- {(array[v : b, w : u, x : s] n)}{0}[l, ([f, e][u] * argnum), (sum[v : k, w : argnum] l)])
  let w[x] = (array[w : e] atan((- g)))
  assert (if (if t((- o)) then (false != {v, false, i}{1}) else (48.05 >= pow(cos(82.52), exp(g)))) then true else (x <= n)), "y"
  let y[z] = w
  return (if t(b) then {(sin(5.3) < cos(7.65))} else {{false}}{0}){0}
}

fn u(v[w] : int[,,][], { x : float }, y[z, A, B] : bool[,,]) : float[,,] {
  let {{}} = (if true then {{q}}{0} else {p()})
  let C = (- atan2({k, sqrt(24.08)}{1}, to_float(b)))
  let D = {}
  let E[F, G, H] = (array[E : e, F : o, G : o] s)
  return (if {{true}, {i, g}}{0}{0} then D{0} else (if (! (e != b)) then {(array[I : B, J : w, K : F] x), A} else {(array[I : e, J : H, K : argnum] C), (f / G)}){0})
}

