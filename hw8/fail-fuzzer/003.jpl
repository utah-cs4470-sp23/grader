let a[b, c, d] = (if (array[a : {args, 525}{1}, b : to_int(acos(78.89)), c : (sum[a : (argnum / argnum)] argnum)] (! true))[837, ((- argnum) + 698), (array[a : (699 % 120), b : argnum] (a + a))[389, to_int(sin(25.4))]] then (array[a : 959, b : {to_int(43.21), (if true then argnum else 562), 239}{1}, c : argnum] (array[d : argnum, e : b] (array[f : 360, g : b] f))[39, a]) else (array[a : (! true){1}, b : argnum, c : (if (32.34 <= sin(8.09)) then (sum[a : (- argnum), b : (sum[a : 644, b : argnum] a), c : argnum] a) else 142)] [(array[d : 552, e : 619] c), (array[d : b, e : argnum] 898), (array[d : b, e : b] d)][(array[d : 782, e : c] d)[args[b], b]]))
fn e(f[g, h, i] : float[,,], { j : int, { {  }, k : {bool,{float,float}}, { l : bool, m : bool[,,][], n : bool } }, { {  } } }) : {} {
  let {o[p], q[r, s, t], u[v, w]} = {{m, (if l then f else (if n then f else f)), (array[o : b, p : d] true)}, (g > argnum)}{0}
  let x = s
  return {}
  let y[z] = m
}

assert (! (if (if {false}{0} then (sin(63.0) != atan(71.34)) else (true || (if false then false else true))) then (if false then {false, c}{0} else (if (c <= b) then (c <= d) else true)) else (if {true}{0} then [true][(810 - c)] else ((if false then c else b) > c)))), "f"
let f[g, h] = {a, false, {a, d, d}{1}}{0}[73, 719, {d, false, (array[f : 188, g : c, h : b] argnum)}{2}[(array[f : 58, g : b, h : b] argnum)[(sum[f : d] (b % c)), b, 542], to_int(log((sum[f : argnum, g : b, h : 35] 94.76))), (d[c, (- 714)] - 775)]]
let i = (sum[i : to_int(sin(787{0})), j : (if false then (if true then (array[i : 405, j : d] j) else (array[i : argnum, j : argnum] argnum)) else f)[g, argnum], k : to_int((if ((935 > g) && (false && false)) then (- acos(0.04)) else sin(acos(6.05))))] atan2(asin(sin(tan(52.34))), cos(log(to_float(argnum)))))
fn j({  }, {  }, k[l] : float[]) : float[] {
  let m[n, o] = (array[m : to_int(log(30.82)), n : (sum[m : l, n : g] argnum)] (array[o : to_int(45.86)] (array[p : d, q : h] p))[(if (d < l) then (sum[o : m, p : g] n) else h)])[d, (array[m : 272, n : (sum[m : h] l), o : d] (array[p : m, q : o, r : argnum] g))[l, to_int(atan(i)), c][h, l, l]]
  let p = (if (array[p : l, q : (sum[p : n, q : h] argnum), r : o] c)[(sum[p : (sum[p : g, q : o] argnum), q : argnum] n), n, c]{1} then (sum[p : n, q : (if true then m[args[argnum], to_int(i)] else argnum), r : d] (array[s : c, t : argnum, u : (- 280)] tan(36.24))[p, h, to_int(sin(19.47))]) else (- (if ((g >= 113) && (b != n)) then 49.68 else (- l))))
  let q[r] = (array[q : g] (l + {h, (array[r : g, s : argnum] n), to_int(78.46)}{0}))
  let {s[t, u], {}, {v, {w[x]}}} = (atan2(acos(log(95.95)), sqrt((- 99.91))) * exp(atan2(atan(89.93), (- p))))
  return k
}

let k[l, m, n] = (if (if true then (if (array[k : 26, l : c] false)[(622 * d), (- g)] then (b <= (- g)) else ((sum[k : d, l : g, m : g] d) > g)) else ((! false) && [true, false][h])) then a else argnum{0})
assert {((! (false && false)) || ((if true then true else false) && false))}{0}, "o"
type o = {int[],int[,,],float}
fn p(q[r, s, t] : bool[,,], {  }, { {  } }) : int {
  let u = a
  let {v, {}, w} = (if (i <= asin(sin(u))) then {{false, {}, g}}{0} else {false, log(acos(i)), n})
  let {x[y]} = (if (! (if v then (if false then (true != v) else (n < w)) else v)) then {args} else (array[x : l, y : (r % t), z : (418 * d)] (if false then {args} else {args}))[g, n, d])
  let z[A, B, C] = q
  return argnum
}

let {q[r, s], t, {u[v, w, x], y}} = {(if ((l > g) && true) then {f, n, {a, argnum}} else {k[argnum, argnum, h], m, {a, l}}), g}{0}
let z[A] = j({}, {t, (array[z : b, A : w, B : s] {})}{1}[l, (if true then [s, t] else args)[(if (m <= b) then b else l)], (- y)], {(array[z : to_int(16.38)] exp(43.11))}{0})
