let a = exp(sin(atan(tan(22.29))))
let b = ((argnum % argnum) % {(array[b : argnum, c : argnum] c)[(- 649), argnum]}{0})
print "c"

let c[d] = (array[c : {183, (! (argnum > argnum))}{0}] (array[d : argnum] to_float(d)))
let e[f, g] = (if (if (a > 70.3) then {true, c, c} else {true, c, c}){0} then {(array[e : d, f : (- argnum)] d)} else {(if (! true) then (array[e : argnum, f : 952] b) else (array[e : argnum, f : b] e))}){0}
show d

let {h, i, j} = {f, f, 474}
let {{k[l, m]}, n[o, p, q]} = {(if ((if (h <= f) then (- i) else argnum) > (if (h != 760) then g else (j + i))) then {{e, a, b}{0}} else {(if (true || false) then e else (array[k : g, l : b] d))}), (if {false, args}{0} then (array[k : e[(- 441), 937], l : 262, m : (array[k : h, l : i, m : d] j)[g, h, j]] ((714 == b) && (79.85 == 24.53))) else (array[k : {j, j, 73.34}{1}, l : (- argnum), m : ((- b) + 543)] (array[n : m] true)[argnum]))}
fn r(s[t] : int[], u[v, w, x] : bool[,,]) : float {
  let y = to_float(t)
  assert ((if u[f, l, s[m]] then (if (false != true) then (array[z : p, A : h, B : argnum] z) else (array[z : m, A : t, B : f] j)) else (array[z : l, A : g, B : m] m))[argnum, h, i] > i), "z"
  let z[A] = s
  let B[C, D] = e
  return (array[E : m, F : p] (array[G : 304, H : E, I : j] a))[to_int((array[E : i, F : i] a)[v, D]), e[o, p]][w, v, (- m)]
}

fn s(t : float) : bool {
  assert s(to_float(b)), "u"
  let u[v, w, x] = (array[u : to_int(sin(74.89)), v : g, w : p] b)
  return (t <= acos((if (if (false == true) then (! false) else (if false then true else true)) then sin(acos(t)) else a)))
  return (if s(67.23) then (if (! (tan(a) >= asin(t))) then (! (s(t) && s(a))) else ({true}{0} && (! (4.86 != t)))) else (! (if (asin(t) == t) then (if (! false) then s(t) else (p >= argnum)) else (! (! true)))))
  return (if ({a}{0} == a) then {((o >= l) && true)} else (if true then (- a) else {(t > t)})){0}
}

let t[u, v, w] = (array[t : argnum, u : o, v : argnum] asin(cos(acos(atan(a)))))
fn x(y[z, A, B] : {}[,,], C[D, E, F] : bool[,,]) : int {
  assert true, "G"
  let {{G, H[I], {{J[K], L[M, N]}}}, O} = args
  let P[Q, R, S] = (if K then (if false then (if false then {m, y} else {K, y}) else {M, f}) else (array[P : N, Q : o, R : (argnum - b)] {v, y})[d, (- (if false then f else m)), 54]){1}
  assert {q, {(! false)}, k}{1}{0}, "T"
  return q
}

