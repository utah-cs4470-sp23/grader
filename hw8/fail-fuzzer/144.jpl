write image (array[a : 898, b : 969] (if (! (50.43 == 84.65)) then {pow(log(25.06), 39.78), acos((sum[c : argnum] 71.82)), atan(asin(31.53)), (- pow(41.69, 51.71))} else (if true then {to_float(627), 75.0, asin(25.56), to_float(b)} else {sqrt(67.37), sqrt(35.65), log(97.04), acos(14.48)}))) to "a.png"

let a[b] = args
let c[d] = args
let {} = {}
assert {[(b != d), false], (sum[e : 820] (if false then b else b)), (if (false || true) then (! false) else (b >= b))}{0}[((sum[e : 304, f : argnum, g : (argnum * b)] argnum) + (- {d, {}, argnum}{2}))], "e"
type e = int
type f = int
let g = (({(sum[g : 353, h : d] g), 33, b}{1} == (- 927)) && (array[g : 477, h : argnum, i : [argnum, argnum, b][argnum]] ((false && true) || (b != b)))[290, d, (sum[g : to_int(to_float(argnum)), h : argnum, i : (sum[g : (- b), h : to_int(57.46)] argnum)] (i % (if true then h else 705)))])
fn h({  }) : e {
  assert {{g, c}}{0}{0}, "i"
  let i = {(663 - (if g then d else 522)), {(! g), 17.13}}{1}{0}
  let j = sqrt(sin(sqrt(cos(15.27))))
  let {} = [args, (array[k : b, l : h({})] {})][b][(array[k : (614 - 627), l : (sum[k : argnum, l : argnum] b), m : argnum] {c, true, m})[d, (sum[k : argnum] (b / argnum)), (if i then h({}) else h({}))]{2}, b]
  return to_int(exp(atan2(to_float((sum[k : 581] argnum)), (log(j) - pow(j, 7.01)))))
}

read image "i.png" to i[j, k]

let l = (if (! (g || (if true then false else true))) then {j, (argnum <= d), {j}}{2} else {j}){0}
let {} = (if true then (if ((! true) && (! g)) then {{}} else (if g then {{}} else {{}})) else {{{}}{0}}){0}
