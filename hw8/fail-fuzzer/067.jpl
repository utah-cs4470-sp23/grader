let a = {(array[a : (if true then 53 else argnum)] log(25.97))[argnum], atan(exp(53.62)), sqrt(sqrt(atan(65.91)))}{0}
let {b[c], d[e]} = (if (exp(atan2(19.19, a)) < asin((88.31 - 12.03))) then {{args, args}} else {false}){0}
fn f(g : float, { h : bool, i : int, j : {} }, { k[l, m, n] : float[,,] }) : float[,][,] {
  assert (! (if true then (log(62.81) >= (exp(g) - atan(83.3))) else exp(69.75)[239, (- l), 481])), "o"
  let {} = (array[o : (if (! h) then c else m)] (if h then e else (array[p : l, q : i] j)))[c][c, i]
  let o = sqrt(sin(exp(false{1})))
  let p[q] = (if {(argnum < 134), (h && false)}{1} then (array[p : e, q : (if h then c else m)] {g, b, i})[c, l] else {g, (array[p : n] (l / l)), to_int(cos(o))}){1}
  return (if (99.16 == {true, g, log(a)}{2}) then (array[r : {q}{0}, s : (if ((true || true) || (! false)) then q else to_int(pow(o, o)))] (array[t : q] (array[u : q, v : q] 22.95))[i]) else (array[r : (if (if (if h then false else h) then false else (! false)) then (array[r : l, s : e, t : q] e)[i, to_int(g), (if false then c else 814)] else (i * n)), s : (if (array[r : e, s : m] true)[(n % n), c] then (if (h && h) then m else i) else q)] sqrt(sin(36.69))))
}

fn g({ h[i, j, k] : {int}[,,], l[m] : bool[], n : float }, {  }) : float[,,] {
  let {o} = (if {false}{0} then {h} else [{h}][e])
  let {} = (if (if (if true then (if true then (! false) else (! true)) else (if (! true) then false else false)) then (((n < 31.86) && (a != a)) || (! (i != argnum))) else {h, true, true}{2}) then (if (if (! true) then ((sum[p : argnum, q : m, r : j] e) == (- argnum)) else false) then {} else {{}, 71.7, (array[p : k, q : 642] c)}{0}) else {})
  let {p, q[r, s], {}} = (if ((if (l[argnum] != false) then (! false) else (array[p : e, q : j] true)[j, e]) && ((if false then l else l)[k] && ((if true then false else true) != (c < m)))) then {{argnum, (array[p : k, q : 461] {}), {}}, to_int(log(87.77))}{0} else (if (if (if true then (! false) else l[966]) then (! (k == m)) else (atan(42.9) != sin(a))) then (if ((- n) <= pow(n, a)) then {j, (array[p : i, q : m] {}), {}} else {to_int(47.23), (array[p : m, q : k] {}), {}}) else (if (a > 51.91) then {m, (array[p : m, q : e] {}), m} else {m, (array[p : argnum, q : argnum] {}), {}})))
  let {{}} = n
  return (if ((! (i != i)) == (if (true != e) then (! (e != r)) else (m != k))) then {(array[t : j, u : (if false then argnum else c), v : c] n), p}{0} else (if (! (m < r)) then (array[t : j, u : (argnum % m), v : (m + 162)] (array[w : argnum, x : i, y : e] n)) else (array[t : (303 / c), u : 863, v : m] s))[r, j, 543])
}

type h = float
assert (exp(acos(pow(atan2(a, 61.89), 40.12))) >= acos(atan(log(atan(88.69))))), "i"
write image (array[i : (- (array[i : 81, j : e, k : (argnum * c)] (k * 578))[to_int(log(a)), (if (1.58 <= 16.99) then c else (- argnum)), a{1}]), j : 87] (array[k : (if true then 275 else to_int(30.56)), l : argnum, m : 810] {to_float(k), (- 15.33), sin(a), exp(54.1)})[{atan(1.19), (sum[k : c] i), a}{1}, (if (argnum != j) then {i} else {c}){0}, (sum[k : c, l : (sum[k : j] (- c))] ((if true then i else c) - 852))]) to "i.png"

let i[j, k, l] = (if ((- 155) < e) then (array[i : to_int((sum[i : e, j : c, k : argnum] 53.66)), j : ((sum[i : argnum, j : c] c) % (if true then c else 61))] (array[k : (- 311), l : i, m : (sum[k : j, l : 558] k)] args)) else (array[i : (if false then c else (- c)), j : (- argnum)] (array[k : j, l : j, m : j] [m, c, c])))[to_int(tan(a)), 411]
fn m() : bool {
  let {} = (array[n : c, o : {args, a, m()}{0}[{{}, j, k}{2}], p : {a, d}{1}[(k * to_int(77.63))]] [{}][667])[j, {to_int(24.79), [args], b}{2}[(sum[n : (array[n : k, o : j, p : c] p)[l, (743 * l), argnum], o : e] argnum)], argnum]
  let {n[o, p]} = (if m() then (array[n : to_int((sum[n : c, o : k, p : argnum] 11.87)), o : to_int(a), p : (j - (- k))] {(array[q : e, r : o] c)})[l, (sum[n : (494 % d[c])] k), to_int(cos(sqrt(a)))] else {{(array[n : e, o : argnum] k)}, (sum[n : j, o : c, p : l] a)}{0})
  let q = atan((array[q : (sum[q : c, r : c] o), r : (- j), s : (if m() then o else j)] {20.6, l})[(sum[q : c, r : (sum[q : j] l)] (if m() then j else e)), (if m() then (p % c) else p), argnum]{0})
  assert (((if (l + p) then true else ((- k) < (- argnum))) || (false || (m() || false))) && (m() && (array[r : (- c), s : (- k)] (q <= q))[c, p])), "r"
  return m()
}

assert (if (if ((a * a) == sin(a)) then (array[n : c, o : c, p : c] true) else (array[n : c, o : e, p : k] (if m() then m() else m())))[l, argnum, 937] then (j == (- c)) else (! (if m() then (! a) else (m() && false)))), "n"
read image "n.png" to n

let o = c
