let a[b, c, d] = (if (argnum == argnum) then (if false then (array[a : argnum, b : (- 57.12), c : ((- 82) % true)] cos(to_float(33))) else (if (if true then false else false) then (array[a : (- 691), b : argnum, c : to_int(65.49)] sin(99.4)) else (array[a : (- 1), b : (- 520), c : 749] log(68.34)))) else [(array[a : (- argnum), b : 754, c : (sum[a : argnum, b : argnum] b)] asin(64.09)), (array[a : (- 185), b : to_int(51.19), c : 367] 47.65), (array[a : (- argnum), b : 815, c : argnum] sin(81.84))][(if {false, true}{1} then to_int(to_float(argnum)) else 564)])
let e[f, g, h] = a
let {i[j, k], {}, {l[m, n]}} = {{(array[i : (- argnum), j : (c * d)] e[i, g, f]), {}, {(array[i : 410, j : h] e)}}, exp(cos(tan(61.27)))}{0}
fn o() : {{int,bool},int,int} {
  let p[q, r, s] = e
  let {t, u[v, w, x]} = {(if (! (! true)) then {to_int(19.78), (if true then e else e)} else {o(){2}, p})}{0}
  return (if [(! true), (array[y : x, z : v] false)[k, d], (true && false)][to_int((sum[y : v] 62.76))] then {{k, {n, true}}{1}, (k - (sum[y : (- s), z : (sum[y : 71] b)] r)), v} else (if (array[y : h, z : 61, A : (238 + g)] false)[b, f, argnum] then {{x, false}, f, 324} else (if (! (j > g)) then (array[y : v] o())[n] else (array[y : 814, z : w] o())[k, (r * b)])))
  let y[z] = args
  return {atan(sqrt(97.09)), (array[A : f, B : g] (if true then o() else o()))}{1}[(sum[A : m] (- g)), (sum[A : v, B : h] h)]
}

let {} = {}
let {{{}, p, q[r, s, t]}, u, v[w]} = {{{{}}{0}, sqrt(asin(atan(95.34))), (if (! (false || false)) then (array[p : (sum[p : d, q : n] n), q : f, r : d] q) else (array[p : b, q : (n / h), r : argnum] k))}, j, (array[p : (sum[p : ((sum[p : 335] g) - j), q : g, r : d] f)] exp((if true then e[h, g, d] else to_float(d))))}
fn x({  }, { y[z, A] : float[,][,], { B : bool[][], {  } } }, C[D] : int[]) : float {
  let E[F, G] = y[(sum[E : w, F : c, G : t] (- f)), d]
  let {H, I[J, K]} = (if (g < (q[w, c, A] * k)) then (array[H : w, I : argnum] {h, (if true then l else l)}) else (if (! true) then (array[H : r, I : f] {j, l}) else (array[H : F, I : to_int(19.4)] {u, l})))[h, G]
  let L = to_int(sqrt(exp(p)))
  assert (if (atan(p) <= asin((- 63.75))) then (array[M : to_int((sum[M : argnum] p))] (false || (! false)))[u] else false), "M"
  return atan2(log(log(sin(p))), asin(atan(atan(tan(57.99)))))
}

let y[z] = {to_float(n), {h, args}}{1}{1}
fn A(B : int, C : int) : float {
  let D[E] = y
  let F[G, H, I] = (array[F : B, G : r, H : to_int((- to_float(c)))] asin(atan2(atan2(84.78, A(s, F)), sin(tan(72.32)))))
  let {} = {}
  let {} = (if {(d >= w)}{0} then (array[J : c, K : c, L : argnum] {}) else (array[J : B, K : B] o())[argnum, 189])[b, r, 479]
  return exp(to_float((if false then argnum else h)))
}

assert (! (tan(pow(tan(16.4), asin(55.63))) <= {p}{0})), "B"
let {} = {}
assert (j > k), "B"
