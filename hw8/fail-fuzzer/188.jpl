read image "a.png" to a

time write image (array[b : 299, c : (- argnum)] {869, 578, a})[((- 912) % argnum), to_int(sin(89.45))]{2} to "b.png"


type b = bool
assert {args, args, (array[c : (- 880), d : argnum, e : (- argnum)] true)}{2}[394, (argnum - (if false then argnum else (sum[c : args[399]] argnum))), (if (if true then true else false) then (if (true && true) then {807, 430} else 655){1} else {179, asin(14.19)}{0})], "c"
let c = to_float((sum[c : (sum[c : (if (! false) then argnum else argnum)] 21)] 824))
write image a to "d.png"

let {} = {{}, tan((sum[d : argnum, e : (sum[d : 27, e : argnum] argnum), f : (sum[d : argnum, e : argnum] d)] tan(c))), pow(pow(63.33, c), 64.36)}{2}
fn d() : b[,] {
  let e = cos(exp(sqrt(sin(acos(c)))))
  let f = argnum
  let g[h] = (if (if (cos(e) < asin(e)) then (if (c != e) then (array[g : argnum, h : argnum, i : argnum] true) else (array[g : argnum, h : argnum, i : argnum] true)) else (array[g : f, h : {}, i : (if false then argnum else argnum)] d()[f, h]))[(array[g : (if false then 48 else f), h : 836, i : 264] 624)[(if (! true) then to_int(85.91) else to_int(c)), (sum[g : (f - 931)] (sum[h : f] 796)), (- 732)], [(213 - argnum), (if true then argnum else 246), (if false then 317 else f)][(- to_int(e))], {(if false then argnum else f)}{0}] then args else (if ((true && false) != (43.78 > e)) then (array[g : argnum, h : argnum, i : (sum[g : argnum] g)] args) else (if (f != argnum) then (array[g : argnum, h : argnum, i : 322] args) else (array[g : f, h : 885, i : argnum] args)))[to_int(sin((- c))), to_int((- log(e))), f])
  assert ((if (if (sin(2.85) > sin(21.84)) then true else (if true then f else (if true then true else true))) then asin((array[i : f] 72.55)[(if false then f else 575)]) else e) <= h{0}[to_int(c)]), "i"
  return (if [[false, false]][(if (! true) then f else (sum[i : f, j : f] 389))][311] then (array[i : (sum[i : 624] h), j : (if true then f else f), k : 153] {d()})[(sum[i : f, j : argnum, k : 979] (if true then 521 else argnum)), argnum, (if (true || true) then to_int(c) else argnum)]{0} else [(array[i : f, j : f, k : argnum] d()), (array[i : h, j : 850, k : 487] d())][{args, f, h}{2}][h, f, (if (true || (! true)) then (array[i : h, j : f, k : 728] i)[h, argnum, (- 752)] else to_int(c))])
}

let {} = {}
fn e(f[g, h] : bool[,], i : b, { j[k, l, m] : bool[,,] }) : b {
  return (((if (k != argnum) then {c, h} else {c, 491}){1} / to_int(acos(c))) == argnum)
  let {} = {(sum[n : k, o : to_int(to_float(g)), p : k] m), (if i then {{}} else {{}}){0}, l}{1}
  let n[o, p, q] = j
  let r = ({{i}}{0}{0} || (if i then (((! i) || (if i then false else false)) || i) else (if false then argnum else (j[m, l, o] && false))))
  return ({(array[s : l, t : q, u : 441] r)[argnum, h, (- q)]}{0} || (q != h))
}

let {f[g]} = (if ((- argnum) < (sum[f : (- 866), g : 350] to_int(83.97))) then {{(array[f : argnum] args)}, (if (476 > argnum) then pow(53.33, c) else to_float(845))} else {{(array[f : argnum] args)}, log(sin(56.08))}){0}
fn h({ { { i : bool[][], j[k] : float[,][], { l : b } } } }, { { { m[n, o] : b[,], { p[q, r] : {bool,bool,bool}[,] } } }, s[t, u, v] : b[,,] }) : b {
  assert (! (! ((array[w : u, x : argnum, y : 516] u)[k, k, t] > t))), "w"
  let w[x] = i[v]
  let y = false
  assert false, "z"
  return e((if y then 272[((- r) - k)] else (if (if false then y else true) then (array[z : u] m) else [d()])[q]), (exp(sqrt(sqrt(c))) < (- asin(log(c)))), (if (if (if true then (! y) else (if l then y else l)) then (to_float(argnum) == (if y then 33.05 else c)) else l) then {(array[z : (o / o), A : x, B : (sum[z : k, A : n, B : t] t)] (u == u))} else {s}))
}

