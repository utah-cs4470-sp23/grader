let a[b, c, d] = (if (! (tan(17.44) < cos(10.7))) then (if (false || true) then {true} else {(array[a : 634, b : 848, c : argnum] true)}) else {(array[a : (sum[a : argnum] 554), b : (- argnum), c : 884] true)}){0}
fn e({  }) : bool {
  let f = sin(acos(atan(cos((- 97.01)))))
  return (cos((if ((464 == c) == a[b, d, d]) then sin(to_float(c)) else cos(66.48))) == 97.7)
  let g = exp(acos(atan2(to_float((c * b)), atan(exp(f)))))
  let h = sin((- g))
  return (e({}) || true)
}

fn f(g : {int[,,],int}, h : {}, i : {}) : int {
  let j[k] = (array[j : c] a)
  let l = to_int({((false || true) && false), (- tan(95.82))}{1})
  let m[n, o] = {[(array[m : l, n : argnum] i), (array[m : argnum, n : l] i)][k], h}{0}
  let {} = (if e({}) then i else {})
  return to_int(log(63.39))
}

fn g(h : float[,], i[j] : bool[]) : {{bool,float,int},bool,bool} {
  let {k[l], {m}, n[o]} = {(array[k : ((if (false || false) then (- c) else (if false then j else d)) * j)] (array[l : d, m : 653] a)[242, j][c, (- (sum[l : j, m : d, n : b] b)), argnum]), (if e({}) then (array[k : args[b]] {991}) else (array[k : to_int(51.16)] {k}))[335], (array[k : (array[k : argnum] d)[(array[k : c, l : d, m : b] l)[j, c, j]]] h)}
  let p = (- sqrt(pow(tan(57.94), exp(23.3))))
  let {q, {{r[s, t, u]}}} = {argnum, {{{a}, 88.72}{0}}}
  let {{{{}, v}}, w[x, y, z]} = {(if ((array[v : d, w : j] b)[m, o] <= (sum[v : l] t)) then {{{}, (s <= l)}} else {(if true then {{}, false} else {{}, false})}), r}
  return (if (j == u) then (if {true, argnum}{0} then (array[A : (if false then s else s)] g(h, i)) else (array[A : l] g(h, i))) else (array[A : 842] {{false, 61.93, u}, (b >= c), a[x, z, u]}))[(sum[A : x, B : y, C : x] m)]
}

let h = (sum[h : d, i : [(array[h : d] h)[d]][703], j : {asin(sqrt(40.88)), 295}{1}] argnum)
show 982

let i[j] = (if e({}) then {{args, args}}{0} else {867, {args, args}}{1}){1}
let {k[l, m]} = (if (array[k : argnum, l : (- b)] false)[(array[k : argnum, l : 670, m : j] 144)[b, argnum, h], (sum[k : h, l : h, m : c] j)] then {{(array[k : j, l : c] i)}, args, args} else {{(array[k : d, l : j] i)}, (if a[c, j, h] then [b] else i), (if a[argnum, d, c] then (if true then args else i) else [b, c, j])}){0}
assert (sin(sqrt(sqrt((- 73.69)))) != acos(log(atan2((sum[n : j, o : l] 10.62), 14.82)))), "n"
let n = log([(array[n : h, o : 181] 42.73)][{h}{0}][903, d])
fn o() : bool {
  let p = acos(sin((if (argnum != m) then {60.08} else {n}){0}))
  assert false, "q"
  let {q, r[s]} = {{{l, args}}}{0}{0}
  let {{t, {}, u}} = {{{c, (if false then {} else {}), q}}}{0}
  return (! e((if false then (if e({}) then {} else (if o() then {} else {})) else {k, {}, n}{1})))
}

let p[q, r, s] = a
