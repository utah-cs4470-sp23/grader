fn a() : float[][,] {
  let b = true
  return (array[c : to_int(sqrt(tan(asin(23.86)))), d : to_int([to_float(144)][(array[c : argnum, d : 959] d)[(if true then argnum else argnum), (sum[c : 107] 375)]])] (array[e : d] (if true then sqrt(to_float(e)) else (if b then exp(54.94) else 87.14))))
  assert (array[c : (array[c : to_int(98.04), d : (- argnum)] (- argnum))[581, argnum], d : to_int(sin(acos(20.04))), e : 942] 60.14{0})[(- (if ((sum[c : 45] c) > (sum[c : argnum, d : argnum, e : 273] c)) then (- (- argnum)) else (sum[c : argnum, d : 449] c))), (array[c : 929, d : (if true then 627 else argnum)] (array[e : d, f : c] c))[to_int(acos(55.38)), {argnum}{0}][347, (sum[c : argnum, d : {argnum, argnum, args}{1}] argnum)], {to_float(39), (- (- 688))}{1}], "c"
  let c[d] = args
  return a()
}

let b = sin(asin(cos(tan(log(90.11)))))
fn c() : int[,] {
  let d[e] = args
  let f[g, h, i] = {log(log(tan(b))), 935, {(array[f : 785, g : 919, h : argnum] b)}{0}}{2}
  let {j[k, l], {m[n, o, p], q, r}} = (if (tan(atan(acos(b))) == [pow(b, 15.75), exp(41.84)][argnum]) then [{(array[j : 283, k : h] g), {f, b, h}}][h] else (if (if true then f else args){0} then {(array[j : 847, k : 989] g), {f, a(), 601}} else {{c(), a()}{0}, {f, 66.86, (g * 739)}}))
  return {(if (! false) then {m, c()} else {f, c()})}{0}{1}
  return (array[s : (array[s : p] (if true then p else p))[(if (! (true || true)) then o else i)], t : (if (((if true then false else true) != false) && (! (true == true))) then (- e) else i)] r)
}

fn d(e[f, g] : int[,], h[i] : float[], j : float) : float[,] {
  return ({false, (- j), cos(74.08)}{0} || ((sin(68.36) - to_float(f)) >= sqrt(exp(54.79))))
  let k[l, m, n] = (if (acos((- atan(j))) != atan2((- asin(34.37)), 81.0)) then j else (array[k : log(j), l : (- 720)] (array[m : f, n : l, o : 386] j))[g, (- (- i))])
  let o[p, q, r] = {acos(cos(j)), (if (! true) then (array[o : i, p : argnum, q : m] k) else (array[o : g, p : l, q : 517] k))}{1}[(n / 41), to_int((if (atan(57.26) != sqrt(74.01)) then 77.88 else (atan(66.88) / atan(b)))), l]
  let {s, t[u], v[w]} = {(! (if (tan(b) != sin(b)) then (! g) else (! (g < m)))), [exp((if true then log(12.64) else pow(j, j)))], {h}{0}}
  return (array[x : u] (array[y : m, z : u] i))[p][m, l]
}

fn e(f[g, h, i] : {{},{},int}[,,]) : float[,] {
  let j = true
  return (array[k : g, l : h] sin(pow(to_float(h), 50.26)))
  return e({[f, f][502]}{0})
  let k = false
  return (if (k || (! true)) then e({(if j then f else f), [f, f, f]}{0}) else e((array[l : g, m : g, n : i] (if false then f else f)[(sum[o : n] h), (- h), n])))
}

let f[g, h] = [{(false || true), (- 660), (array[f : argnum, g : 265] args)}{2}, [(array[f : argnum, g : 485] args)][((sum[f : argnum, g : 786] 517) % (sum[f : 378] f))], (if (if (887 >= 848) then (! false) else true) then (if false then (array[f : argnum, g : 447] args) else (array[f : 402, g : 561] args)) else (array[f : (473 % argnum), g : (- argnum)] [807]))][{args, a(), b}{0}[460]]
let i[j, k, l] = (if true then {(array[i : 641, j : 302, k : (110 % argnum)] h), (to_float(h) == (if true then b else b)), (array[i : 461, j : (- 220), k : (- 369)] g)} else {args[g], args, (array[i : (- argnum), j : to_int(b), k : (490 * h)] g)}){0}
time let {{}} = (if [(j > h)][(sum[m : argnum, n : g] (- l))] then {{}} else {[{}][j]})

let m = asin(29.98)
let n = m
let {o[p, q]} = {f}
let r[s] = (if (if (! [false, true][argnum]) then (! (b < pow(45.25, 70.09))) else (! false)) then {q, {o, o, args}}{1}{2} else (array[r : (- (q - l)), s : (if (! true) then (h % j) else j), t : (h + j)] [l])[p, (k + k), (p - p)])
