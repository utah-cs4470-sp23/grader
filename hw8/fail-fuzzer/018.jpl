assert (if (false && (! false)) then (if {false}{0} then {args} else {(argnum > 151)}) else [{false}, {false}][(argnum / to_int(48.35))]){0}, "a"
let {} = (if (! (exp(20.82) > to_float(argnum))) then (array[a : ((sum[a : argnum] 862) * (- argnum))] {}) else (if ((671 == 462) && (! true)) then [{}, {}] else (array[a : argnum] {})))[argnum]
type a = float
let b[c] = args
fn d({  }, e : float) : bool {
  let f = (array[f : 668, g : (if (! (351 == 351)) then (array[f : (argnum - c), g : to_int(49.62)] (- f)) else (array[f : (sum[f : argnum, g : argnum, h : 114] g), g : 979] c))[(- (sum[f : (c % c)] c)), sin(6.38)[(- 356), (- to_int(59.08)), argnum]]] to_float(argnum))
  let g = to_float((sum[g : ((sum[g : argnum, h : c] c) - to_int(e)), h : c] c))
  let h = sin(e)
  let i[j] = (if (if (d({}, 87.49) || (g < sin(g))) then true else d({{}, f}{0}, asin(sqrt(h)))) then (if (to_int((g - e)) > 321[argnum, (if false then 197 else 481), 641]) then {(array[i : c] b), 58.4, 63.62}{0} else (if false then (if (! true) then (array[i : 55] b) else (array[i : 48] b)) else [(array[i : argnum] 464), args, args])) else [(array[i : argnum] (if (h >= 45.68) then 918 else 744))])
  return ((j <= (sum[k : (- (if true then argnum else 868)), l : (j * (c - argnum)), m : ((- 298) - (sum[k : argnum, l : argnum] j))] to_int(log(g)))) && [d(i, (sum[k : j] h)), true, ((sum[k : j, l : c] c) != (- j))][j])
}

fn e({ f : a[,,], { g : int, h : bool } }) : float[,] {
  return log(cos(log(to_float(345))))
  return (if (if ((- g) >= argnum) then (! h) else d({}, 97.64)) then [(array[i : g] 437), (array[i : (sum[i : g, j : argnum] j), j : (argnum / c)] (if true then 64.04 else 87.43)), (array[i : c, j : (if h then argnum else g)] to_float(g))] else (array[i : c] (if (c != 971) then (array[j : argnum, k : c] 30.17) else (array[j : g, k : 461] 26.29))))[(- g)]
  return (if ((array[i : argnum, j : 106, k : g] true)[argnum, (- argnum), c] || h) then exp((- 74.93)) else {(array[i : (sum[i : 623, j : g] 677), j : (sum[i : 848, j : argnum] j)] to_float(186)), h}){0}
  let i = d((if (log(f[120, 136, argnum]) > exp(c)) then (if args{1} then g else [{}][344]) else {{}, (sum[i : 988] 517)}{0}), (log(atan2(52.74, sin(21.75))) / 79.2))
  return (array[j : (sum[j : {(sum[j : g, k : g] 117)}{0}, k : g] (- k)), k : argnum] acos(to_float(((k + j) + (sum[l : g, m : 26, n : j] k)))))
}

write image {(array[f : to_int(to_float(argnum)), g : (sum[f : (sum[f : 318] c), g : (- argnum)] c)] argnum)}{0} to "f.png"

let {{f[g, h], {{i}, {j, k[l], m[n, o]}}}, p} = {{(if d({}, 69.99) then (array[f : c, g : (sum[f : 264, g : c] f)] sin(63.93)) else (array[f : (sum[f : 976, g : c, h : argnum] c), g : 646] log(97.21))), {{176}, {(array[f : argnum, g : argnum, h : 483] f), b, (array[f : 436, g : argnum] f)}}}, pow((- to_float(681)), pow(asin(asin(8.03)), atan2(38.03, log(72.45))))}
assert ({(array[q : i, r : l, s : argnum] true)}{0}[(if false then (sum[q : g] 89) else (if true then i else 443)), (sum[q : c] to_int(p)), {j}{0}[g, n, c]] == (if (array[q : l, r : n] 349)[(- argnum), (- n)] then (10.53 >= (- tan(p))) else ((95.39 == (sum[q : o, r : g, s : i] p)) && false))), "q"
fn q({  }, r[s, t, u] : int[,][,,]) : {bool,{int},int} {
  let v[w, x, y] = j
  let {z[A]} = {{{(! false), o, r}, {k, argnum, f}{0}, w}{1}}
  let {B[C, D, E], F, G} = {(if (if (d({}, p) && true) then d({}, cos(13.91)) else (! (argnum < h))) then (if (68.86 < p) then {m, r, l} else {m, r, h}){1} else {(array[B : y, C : u, D : y] m), u}{0}), j, (to_int(acos(p)) <= c)}
  return {(acos(atan(pow(65.86, 96.63))) > cos(asin(atan(p)))), (if ((c < D) && G) then {g, z, {D}} else {y, b, {n}}){2}, s}
  return (if (array[H : (- w), I : 903] {u, s, true}{2})[C, (if (! true) then {s, n} else {h, i}){1}] then asin(cos(p))[argnum, argnum] else (if (if (229 <= C) then (array[H : t] G) else [G, G])[E] then {q({}, B){0}, {j[E, E, argnum]}, to_int(to_float(s))} else (array[H : (g / D), I : C] q({}, r))[{A, h}{1}, (- t)]))
}

let {} = {}
show c

