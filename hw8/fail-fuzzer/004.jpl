print "a"

fn a(b[c] : float[], { d[e, f, g] : bool[,,] }, h[i, j, k] : float[,,]) : bool {
  let {} = (if ((array[l : c, m : e] d)[c, e][g, 331, k] || ((6.4 + 0.07) > exp((- 81.25)))) then (if ({d, false, 8.05}{1} != a([70.77], {d}, h)) then (array[l : argnum, m : (f / g)] {})[(- (- j)), (e + k)] else {}) else (array[l : e] (array[m : l, n : e] {})[c, argnum])[(if (true && false) then (array[l : 78, m : g] k) else (array[l : j, m : f] m))[(- c), (if (argnum == k) then args[f] else j)]])
  return a([(array[l : c] 94.32), (if (false && false) then b else b), b][886], {{to_float(i), to_float(130), d}{2}}, (if {c, false, false}{2} then {e, {e}}{0} else (if (i == f) then (array[l : 393, m : k] h) else (array[l : k, m : argnum] h))[i, g]))
  let l[m, n, o] = (if (c != k) then h else [h][(sum[l : (- argnum), m : 741] g)])
  let p[q, r, s] = d
  return {cos(tan(19.43)), args, (if (! false) then (array[t : r, u : g] true) else (array[t : c, u : k] false))}{2}[c, (- c)]
}

let {{b, c[d, e]}, f, g[h, i]} = (if [13.83, 26.46][(- argnum)]{1} then {{{argnum, {}}{0}, (array[b : to_int(17.44), c : argnum] (sum[d : c, e : argnum] 862))}, pow((if false then cos(20.61) else asin(38.37)), asin((sum[b : 331, c : argnum] 59.31))), (if (if (982 <= 312) then (! true) else false) then (array[b : 89, c : (sum[b : 716] b)] c) else (array[b : (- argnum), c : 535] b))} else {{(sum[b : 974, c : (if true then 982 else 1)] 234), (array[b : args[354], c : 600] (- 801))}, acos((sin(41.34) + exp(44.14))), (array[b : 40.93{1}, c : 919] ((sum[d : b] d) * (sum[d : argnum, e : 5, f : 700] argnum)))})
fn j(k[l] : int[]) : {}[] {
  let m[n, o, p] = {(if {g, i, false}{2} then (if false then (array[m : h, n : 467, o : l] o) else (array[m : 720, n : i, o : e] 881)) else (if false then (array[m : i, n : e, o : b] e) else (array[m : e, n : l, o : b] n))), [(- to_float(d)), sin(exp(f)), (sum[m : l, n : b] 48.26)]}{0}
  let {{{{}, {{{}, q, r}, s}, t}, u, {}}, {v}} = {{{{{}}{0}, {{{}, k, 57.85}, i}, o}, c, (if ((! true) || true) then {} else {})}, (array[q : o, r : p] false){0}}
  assert (((if (s != (- argnum)) then atan(atan(f)) else atan(exp(f))) % acos(sqrt(v))) <= r), "w"
  let w = s
  return j((if false then (if (atan(f) != to_float(b)) then (array[x : n] argnum) else (array[x : m[t, argnum, l]] x)) else (if (false && true) then {k, args} else {args, args}){1}))
}

fn k() : bool {
  assert a({(if true then [f, f] else [f, f]), 776}{0}, (if k() then (if (acos(f) == to_float(d)) then {(array[l : h, m : i, n : e] k())} else {142}) else {(if k() then (array[l : e, m : argnum, n : b] false) else (array[l : 256, m : d, n : h] k()))}), (if false then (if (! (! k())) then (array[l : h, m : 843, n : (b + b)] (sum[o : l, p : b, q : b] f)) else (e / b)) else (if (598 != to_int(f)) then (array[l : e, m : (- e), n : i] f) else (array[l : e, m : i, n : h] 24.97)))), "l"
  assert sqrt(70.18){0}, "l"
  let l = b
  let m[n, o, p] = {(array[m : d, n : c[e, (- e)], o : e] log(log(f))), atan(asin(90.2))}{0}
  return {(if (86.35 == 58.94) then {h, k(), g} else {argnum, true, g}), b}{0}{1}
}

assert (array[l : e, m : i, n : b] {j(args), (argnum != h)})[h, h, h]{1}, "l"
let {{l[m, n, o], p[q, r, s], t}, u[v, w]} = {(if (if k() then [true, k(), false] else [k()])[h] then {(array[l : to_int(f), m : 71, n : e] c[d, 578]), (array[l : (if k() then b else argnum), m : to_int(32.03), n : argnum] args), f} else {(if false then (array[l : argnum, m : argnum, n : i] i) else (array[l : 969, m : 883, n : i] 849)), e, (sum[l : g[696, b], m : (797 / h), n : i] (sum[o : 311, p : 441] f))}), (if k() then c else (array[l : ((sum[l : e, m : h, n : 173] h) - e), m : 797] to_int(atan(f))))}
write image (if (if (k() == true) then [(false && k()), (n >= d), true] else [true, (h >= r)])[(sum[x : o, y : n] v)] then (array[x : e, y : h] {log(t), {b, f, b}{1}, to_float((sum[z : q] q)), atan2(sin(f), t)}) else (array[x : d, y : (if ((true && true) != (! k())) then argnum else v)] (if k() then {to_float(e), tan(f), asin(18.05), log(82.9)} else {t, (sum[z : s] 9.36), exp(f), 59.25}))) to "x.png"

fn x() : int {
  let y = acos((sum[y : b] exp(sin((sum[z : argnum] t)))))
  assert a((if (if k() then k() else (! k())) then [[f, 97.31, t]] else (array[z : argnum] [y]))[x()], {(if (! (true || k())) then (array[z : x(), A : (sum[z : b, A : b] s), B : w] (k() != k())) else (array[z : b, A : l[e, o, i], B : h] (! k())))}, (if k() then {x(), (array[z : i, A : h, B : v] f), m}{1} else {(array[z : m, A : v, B : h] y)}{0})), "z"
  let z[A, B] = (array[z : x(), A : h] (array[B : q] (sum[C : z, D : B, E : argnum] D))[q])
  let C[D] = args
  return s
}

fn y() : float {
  let {{z[A, B, C]}, D[E], {}} = {{{(array[z : s, A : b, B : n] c)}, p[n, d, (sum[z : e, A : d] argnum)], (if false then {} else (if true then {} else {}))}}{0}
  let {F, G[H], I} = {(if {k()}{0} then (((! false) && (y() != 88.93)) || (false || z)) else (! (false == k()))), args, tan((if k() then (array[F : m, G : x(), H : 246] t) else (array[F : b, G : argnum, H : q] y()))[b, i, m])}
  let {J[K, L], M} = (if ((! (F || k())) != (f <= log(tan(y())))) then {g, (o == d)} else {{g, false}}{0})
  let N = atan2(y(), (atan(log(cos(71.92))) * asin(acos(exp(y())))))
  return f
}

let z[A] = j({{q, args}, e}{0}{1})
fn B(C : int, { D : float, {  } }, E : float) : int {
  return q
  let F = atan2((if (if false then p else (array[F : C] true)[A]) then cos(exp((- D))) else cos((to_float(A) * atan2(f, 66.95)))), D)
  let G[H] = j((if false then {log(E), (array[G : d] A)} else {(- D), p[A, q, i]}){1})
  let I[J, K] = {[u, g]}{0}[909]
  return to_int((sum[L : d, M : C] F))
}

