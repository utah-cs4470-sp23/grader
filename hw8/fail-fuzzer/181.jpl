let a = pow(sin(atan2(sqrt(25.85), sin(96.51))), log(exp(to_float((28 - argnum)))))
type b = float[,]
write image (array[c : (array[c : 720, d : argnum] {c})[(if true then args else args)[(- 723)], argnum]{0}, d : (if (! true) then (- argnum) else (- {506, false, argnum}{0}))] {(argnum > c), {log(a), 14.82, a, (- 87.07)}, (! true)}{1}) to "c.png"

let c = (if (! (if false then true else true)) then [(array[c : argnum, d : 307, e : 795] d), (array[c : 782, d : argnum, e : argnum] d), (array[c : argnum, d : 538, e : 868] c)] else [(array[c : 520, d : 80, e : argnum] d)])[831][{420}{0}, to_int((to_float(111) / a)), to_int(27.67)]
fn d() : int {
  let e = acos((if ((- argnum) < (if false then 381 else c)) then {exp(88.0), 36.28} else {sqrt(55.63), exp(61.9)}){0})
  let f[g, h] = (array[f : (- to_int(e)), g : (if (if (array[f : 276] true)[c] then true else false) then to_int(54.8) else to_int(a))] d())
  return to_int((- exp(e)))
  return d()
  return ((if {true, (c != g), (array[i : d(), j : c] 59.97)}{0} then g else (- h)) * {args, a, (array[i : d(), j : d()] i)}{2}[(sum[i : h] [c, argnum, g][(- g)]), to_int(acos(cos(a)))])
}

fn e({ { { { { f[g, h] : b, i : b }, j[k, l, m] : float[][,,], n[o] : bool[] } }, { p[q] : float[] } }, r : b }, { {  } }) : b {
  let {} = (if (to_int(36.19) > (- k)) then args[l, g, k] else {{}}){0}
  let s[t, u] = (if (! (if (if (true || true) then (g < g) else (if false then true else false)) then (! false) else false)) then r else {(array[s : g, t : l] i), sqrt(49.14)}{0}[m, argnum])
  return (if {q, (array[v : t, w : d(), x : h] true), to_int(a)}{1}[u, to_int(cos(log(34.7))), q] then u[323, (if (o > c) then (q - o) else q), t] else (array[v : (h / (- d())), w : o] (if true then atan(exp(a)) else (if true then (21.73 / 85.65) else to_float(o)))))
  let {v[w]} = (if (if (false && ((argnum % h) != k)) then (array[v : h, w : l, x : g] (792 >= h))[argnum, h, (if (argnum < 939) then (- d()) else t)] else false) then {[f, r, (array[v : 424, w : g, x : t] r)[c, o, c]]} else {[s, f]})
  return f
}

print "f"

write image (array[f : argnum, g : (966 / (if false then to_int(cos(a)) else (sum[f : (- c)] (d() - c))))] (array[h : 786, i : (sum[h : 955, i : argnum, j : argnum] 154), j : (if (! true) then (sum[h : argnum, i : c, j : g] g) else f)] {to_float(h), sin(15.6), tan(0.06), acos(a)})[(if ((! true) == (f == argnum)) then to_int(a) else 608), argnum, ((sum[h : f, i : c, j : to_int(a)] f) + to_int(a))]) to "f.png"

let f[g, h] = (array[f : (if (c > argnum) then (- to_int(30.16)) else (if (to_float(481) >= (sum[f : 839, g : c] a)) then (if (400 > c) then d() else d()) else to_int(acos(30.98)))), g : ({c, 75.04, 8.51}{0} / (array[f : c, g : argnum] d()){2})] to_int(cos((sum[h : (g / f), i : f] exp(a)))))
let i = [(g != argnum)][(if (! (h <= (- 583))) then h else (if (array[i : 37, j : h] false)[g, g] then g else g))]
write image {(array[j : d(), k : g] {a, a, log(a), to_float(argnum)})}{0} to "j.png"

fn j({ k : b, {  }, l : b[,,] }, { { m : {float[,,],int,int}, { n : {float}, o : {float,b}, { p[q, r] : bool[,] } } }, { s : {} } }) : {} {
  let {} = (if (if i then (array[t : argnum, u : c, v : 333] false) else (array[t : q, u : 825, v : q] i))[argnum, argnum, to_int(exp(a))] then (array[t : h] {i, {}})[to_int(to_float(h))] else {(! (! i)), (if false then s else s)}){1}
  return (if (! i) then {g} else {s}){0}{0}
  assert (((! (exp(a) == acos(a))) || true) || ((if (false && i) then (true || (! i)) else (if p[h, c] then false else false)) && {a, (! false), q}{1})), "t"
  let {t, {u}, {v[w], x}} = (if (! (! (atan(a) > a))) then {to_float((if false then g else (sum[t : 200, u : q] argnum))), q[(- c), h, m{1}], {{args, true}{0}, i}} else (if false then {4.79, {k[r, r]}, {[q], i}} else {tan(a), {a}, {(array[t : h] q), (if false then i else i)}}))
}

