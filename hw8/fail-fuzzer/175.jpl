let a[b, c, d] = [argnum, (- 479), (sum[a : argnum, b : argnum] b)][(if false then {44} else {860}){0}, (if ((! false) == (! false)) then to_int(cos(29.91)) else 555), (sum[a : 164, b : 404] b)][263, 711, (array[a : 150, b : 476] {argnum})[to_int((- 25.68)), to_int(to_float(argnum))]{0}]
let e = sin(asin(tan(91.71)))
let f = [{(array[f : c, g : b] args)}{0}[(- (if (! true) then b else (- c))), (b - argnum)], (if false then {[c, d]} else (if (true || false) then {args} else {args})){0}]
let g[h] = {sqrt(acos(e)), {(! false), exp(25.39), args}, d}{1}{2}
let {} = (if ((e - e) >= {e}{0}) then (if true then [{}] else [{}, {}, {}]) else (if (! (c >= 451)) then [{}, {}, {}] else (if (h <= argnum) then (array[i : h] {}) else c)))[c]
print "i"

fn i(j : float[], {  }) : int {
  let k = (array[k : to_int(pow(e, cos(acos(76.17)))), l : (if (! (if false then false else true)) then {to_int(e)} else (if false then {977} else {c})){0}] g)
  return (if (to_float(b) && false) then argnum else acos(64.61)[c, (- d)])
  let {l[m, n, o]} = {(! (d != b)), {true, {a}}}{1}{1}
  assert (! (if (false || (log(e) > e)) then k{0} else (((m != b) && f) || (m != 762)))), "p"
  return argnum
}

let j = f
let k[l, m, n] = a
let o = pow((sum[o : (if true then (array[o : h, p : b] o) else (array[o : l, p : n] n))[(d - h), (if (if false then false else false) then (if true then 475 else b) else l)], p : (sum[o : h, p : (sum[o : c] (sum[p : c] argnum))] h), q : argnum] e), acos((if (to_int(57.26) >= m) then asin(to_float(b)) else to_float(l))))
type p = {float}
let {q, r, {{s[t, u, v], w[x, y], {}}}} = (if ((log(to_float(n)) < (- sqrt(e))) || (! ((o >= 67.02) || false))) then {sin(pow(sin(43.81), (sum[q : d, r : argnum, s : c] o))), (sqrt(to_float(c)) - log(asin(o))), {{k, (array[q : m, r : l] m), {}}}} else {atan2((sum[q : (if false then h else m), r : n] 82.0), atan2(sin(99.33), e)), asin(atan(o)), {{k, (array[q : argnum, r : argnum] n), {}}}})
