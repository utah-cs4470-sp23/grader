fn a(b : int) : float {
  return atan(cos(pow(pow(18.85, a(734)), atan(cos(68.62)))))
  return atan2(exp(cos(asin(a(806)))), a(b))
  return exp((sum[c : (- to_int(a(argnum))), d : (if (! (! true)) then (530 + (if true then b else argnum)) else to_int(a(b)))] asin(pow(acos(17.83), sqrt(74.22)))))
  let c = (! (b > to_int(exp(24.83))))
  return log(pow(atan(sin((sum[d : argnum] 42.46))), (if ((argnum < b) && (if true then true else false)) then to_float(834) else to_float((sum[d : 642, e : 894] d)))))
}

fn b(c[d, e, f] : bool[,,]) : {bool,{},bool}[,,] {
  let g[h, i, j] = (array[g : (- (- f)), h : (to_int(cos(57.32)) - ((array[g : f, h : 607, i : argnum] h)[f, d, 643] % (sum[g : (argnum / e), h : e, i : (sum[g : 334, h : e] g)] args[f]))), i : (! (e <= argnum)){1}] args)
  let k[l] = (if (false || (true && false)) then (if ((- 85.38) != asin(47.29)) then (array[k : (- h), l : h] (array[m : l] c)) else (array[k : i, l : (- 422)] [c])) else (if (false && (9.99 != 90.64)) then (array[k : 103, l : (sum[k : e, l : j] k)] [c]) else (array[k : h, l : (- e)] (array[m : k] c))))[{89.56, {i, f, h}}{1}{2}, h]
  let {m[n], o[p, q, r], s} = {(array[m : argnum, n : j] c)[(- l), i], tan((sum[m : l, n : j, o : e] 59.51)), (array[m : (d + d), n : f, o : (if true then h else l)] {k, g, false})}{2}[(j * to_int(a(argnum))), argnum, 579]
  return b((if true then (if (false && false) then {i, c, m} else {p, c, k}) else {l, 531, [c]}){1})
  return (if {(s != false), p, (827 <= j)}{0} then {(array[t : n, u : n, v : e] d)} else {(if true then b(c) else b(c))}){0}
}

time let {} = {{{}}}{0}{0}

print "c"

time let {} = (array[c : {argnum}{0}, d : ((if true then 567 else 513) + argnum), e : (if (! false) then (- 288) else to_int(86.1))] {})[(if (to_float(argnum) == cos(71.37)) then ((- argnum) + argnum) else ((- 699) * 8)), (if (! true) then (array[c : 95, d : 960] 134) else (array[c : 923, d : 17] c))[((- argnum) + 49), (sum[c : (sum[c : argnum, d : argnum] d), d : (sum[c : argnum] c)] c)], {argnum, args[argnum]}{1}]

write image (array[c : argnum, d : (- (sum[c : argnum, d : 839] c))] {{(- 32.78), asin(16.25), sin(11.03), sin(49.84)}}{0}) to "c.png"

type c = bool
show (tan(sin(atan(a(argnum)))) != pow(log(cos(asin(80.68))), (- 0.9)))

let {d, e, {}} = {(atan2(92.41, 53.83) % log(85.14)), 98.83, {{false, args, {}}}}{2}{0}
fn f(g[h, i, j] : bool[,][,,], { k : float[,,], l : bool }) : c {
  assert (cos((- (- to_float(j)))) >= ((if ((d && d) == (false && l)) then sin(55.83) else (if (if l then false else true) then sqrt(73.43) else sin(40.42))) * atan(sqrt(k[i, h, j])))), "m"
  return (if (if (if (false && d) then l else false) then (813 == (sum[m : i, n : i] argnum)) else (asin(92.93) != to_float(argnum))) then {(! l), (! d)} else (if false then {d, (if d then l else d)} else {true, (if true then d else l)})){1}
  let m[n] = (array[m : (j + to_int(46.52)), n : h] (array[o : (h % j), p : i, q : h] [m, 987, 186]))[(if d then (sum[m : h] 446) else (h + (if d then h else i))), j][(argnum + j), argnum, (j - ((h >= 407) && (if false then false else false)))]
  let {} = {}
  return (if f((if d then g else g), (if (! false) then {k, true} else {k, l})) then {(! (false || d)), args{0}, l} else {{j, false, g}{1}, (true && false), d}){0}
}

fn g({ h[i] : c[] }) : c {
  let {{}, {j[k, l, m]}, n} = (if {h, to_float(argnum), d}{2}{0} then {{}, {(if (! d) then (array[j : i, k : i, l : argnum] true) else (array[j : 490, k : 895, l : argnum] false))}, (sum[j : (- argnum), k : argnum] asin(acos(31.42)))} else {(array[j : (382 - 387), k : argnum, l : e] {})[(sum[j : 587] (sum[k : j, l : j] i)), (array[j : argnum, k : 625, l : i] i)[args[argnum], (sum[j : i] i), 164], ((sum[j : 398, k : argnum, l : 226] j) - i)], {(array[j : 594, k : i, l : 25] (j > i))}, 39.55})
  let {o[p], q, {r[s, t], u}} = {{[d], b((if d then j else j)), {(array[o : m, p : k] {}), (argnum >= m)}}, 46.07, (sqrt(asin(9.25)) - 98.56)}{0}
  let v[w] = [s]
  let x[y, z] = (array[x : {{argnum}}{0}{0}, y : to_int(sqrt((if (! true) then n else asin(17.7))))] k)
  return (array[A : y, B : l] (atan2((- n), log(n)) != [n][m]))[(sum[A : (if u then {t}{0} else p), B : s, C : s] (if (array[D : k, E : i, F : y] u)[argnum, (C - l), (if d then B else i)] then x[t, i] else l)), z]
}

fn h(i : bool, j : int) : float {
  let k[l] = (if (h((array[k : j, l : 639] d)[j, j], ((sum[k : argnum, l : j] 417) - 919)) != pow(66.51, cos(to_float(759)))) then args else [(sum[k : argnum] (sum[l : (- 729)] k))])
  let m[n] = (array[m : l] m)
  let {} = {}
  assert true, "o"
  return to_float(n)
}

