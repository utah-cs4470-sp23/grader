let a = sin(to_float(to_int(log((sum[a : argnum] 0.9)))))
let {{}, b[c, d, e]} = {{}, (if false then (array[b : 816, c : 610, d : 447] acos(acos(71.45))) else to_int((- a)))}
let f = tan(atan2(cos(to_float((e - 493))), (if (! true) then {76.37} else {10.01}){0}))
let {} = {}
let g = exp(75.22)
let h[i] = (if to_float((- args[argnum])) then (if (! (! false)) then {(array[h : e] h)} else {args}){0} else (array[h : c] (- (array[i : 29, j : e, k : argnum] e)[h, c, argnum])))
let j[k, l] = {i, (array[j : (d * 831), k : c, l : e] (array[m : l, n : c] 939))[{argnum, a, c}{2}, (if (! false) then to_int(f) else c), 188]}{1}
let m = 81.55
fn n(o : bool) : {} {
  let p = 391
  return n((array[q : (- i), r : i] 16)[argnum, (if o then (argnum % c) else e)][(if (e <= i) then {c, p} else 164){0}, 157, (array[q : argnum, r : l] (p / argnum))[d, d]])
  let q = l
  return {}
}

type o = int
fn p({ q[r, s, t] : bool[,,], u[v, w, x] : o[,,], y : bool }) : o {
  let z = x
  let A[B] = q[l]
  let C[D, E, F] = q
  let G = acos((if (if false then (! true) else (! false)) then (array[G : z, H : (- z)] sqrt(g)) else (array[G : t, H : s] (- m)))[(sum[G : z] z), E])
  return F
}

let {q} = (if (if ((if true then (m > f) else (if true then false else false)) && (d < l)) then ((! (i < i)) && false) else (! (if (k > argnum) then (false || true) else (argnum < c)))) then (if (tan(b[d, 996, 217]) < (16.06 % (if false then m else 97.53))) then {true} else {(if (argnum == 824) then true else (l < l))}) else {{true}}{0})
