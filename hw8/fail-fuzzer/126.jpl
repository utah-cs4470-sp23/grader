let {} = (if (array[a : 669] (a == 296))[((sum[a : argnum, b : 848] b) % (- argnum))] then {} else (array[a : {true, 483}{1}, b : (- argnum)] {})[(array[a : (argnum + 53), b : (sum[a : argnum, b : 565, c : argnum] 904), c : 834] (if false then argnum else a))[(if false then argnum else (- 444)), 380, (- (238 * argnum))], 358])
print "a"

fn a(b[c, d, e] : float[][,,], { f : bool[,], g : float }, h : int) : int {
  let {{{{i[j, k, l], m}, n[o, p, q], r}, {{s[t], u[v, w], x[y, z]}, A[B, C, D], {E[F, G]}}, {H[I], {}}}, {}, J} = {{(- (sum[i : e, j : h] h)), (argnum != d), (if (h < (- e)) then {[c, h], {}} else {(array[i : d] c), {}})}, (array[i : c, j : (h % d), k : (if false then c else h)] [{}, {}, {}])[h, (array[i : e, j : h, k : c] c)[d, (c * e), to_int(69.53)], c][e], to_int((sum[i : (array[i : d, j : 653, k : h] h)[argnum, d, (c / 853)], j : 386] 63.42))}
  let K[L] = (if (log(to_float(j)) > (sum[K : B, L : w, M : q] asin(2.5))) then (array[K : v] (if (C < w) then H else args)) else (if false then (if u[B, w] then (array[K : B] args) else [args, H]) else [(if true then args else args)]))[G]
  let M = J
  assert (if (false && (! {70.93, false}{1})) then (if ((530 == argnum) || ((sum[N : c, O : J, P : o] j) == J)) then (array[N : (q + o)] (! true))[(if (! true) then A[t, j, w] else (- q))] else (C < v)) else (! true)), "N"
  return v
}

fn b({  }, c : bool) : int {
  let d = ({(sum[d : (- 653), e : (- 438), f : argnum] d), (if (false && false) then (! c) else c), 675}{1} || false)
  assert d, "e"
  let e = true
  assert c, "f"
  return a({argnum, (b({}, d) <= (- argnum)), d}{2}, (if (((if d then e else c) || (if d then false else e)) || ((- argnum) <= argnum)) then {(array[f : 43, g : 950] d), 33.05} else {(array[f : (if true then 148 else argnum), g : (831 * 23)] c), sin(cos(19.17))}), {(if c then 370 else 415)}{0})
}

show (argnum > (sum[c : (- (argnum * argnum))] argnum))

fn c() : bool[,,] {
  return (array[d : (if (false || (if true then false else (if true then false else false))) then 550 else (sum[d : (- 113), e : b({}, true)] args[(if true then e else d)])), e : (((sum[d : (- 99), e : (573 - argnum)] to_int(33.24)) + to_int(atan2(13.4, 60.98))) / (if (! true) then (array[d : argnum, e : argnum] d)[(- 121), b({}, false)] else to_int(log(48.42)))), f : 791] ({to_float(e), d}{1} >= to_int(602)))
  assert (! (! (((! true) && (! false)) != ((- 188) < argnum)))), "d"
  let d = (b((if ((109 - 994) >= 536) then [{}][b({}, true)] else (array[d : argnum, e : argnum, f : 792] {})[c(), (- argnum), argnum]), ((args[argnum] >= (710 + 866)) == (0.34 >= exp(27.18)))) - (sum[d : 132, e : (sum[d : ((- 305) / (- argnum))] (sum[e : (sum[e : d] e), f : (if true then d else d), g : d] (sum[h : f] 214))), f : (sum[d : ((- argnum) * (- 288))] (c() % (if true then d else argnum)))] (sum[g : b({}, false), h : (array[g : f, h : f] 625)[e, to_int(22.27)]] argnum)))
  assert false, "e"
  return c()
}

fn d(e : float[][,], f : {int,bool}, { g[h, i] : float[,], { { j : bool, { { k : bool, l : int[,], m[n, o] : bool[,] }, p[q, r] : bool[,,][,], s[t, u] : bool[,] } } }, { v[w, x] : {}[,], { y : int, { z : {int,{bool,bool,float}} }, A[B] : float[] } } }) : bool {
  let C[D] = {argnum, atan2(sqrt(7.1), sqrt(22.46)), c()}{0}{1}
  let {} = {}
  let E = atan((- 90.53))
  let F = asin(90.37)
  return (if c()[u, 466, r] then (! (b({}, k) == (if (y == B) then n else o))) else false)
}

let {e, f[g, h]} = {args, (array[e : b((if true then {} else {}), (12.39 < 72.42)), f : (if (argnum <= argnum) then argnum else (argnum + argnum)), g : argnum] (array[h : f, i : to_int(20.58)] log(75.34)))[576, argnum, b({}, (! true))]}
let {} = (if (array[i : g, j : g] true)[argnum, argnum] then args else (array[i : argnum, j : argnum, k : h] (array[l : argnum, m : 683] {})))[(array[i : 193, j : argnum, k : h] e)[(- h), (h % h), (if true then 635 else argnum)][651], argnum, (e[argnum] * (sum[i : 983, j : 296] g))][a((array[i : h, j : (h * (sum[i : g] 372)), k : (- b({}, true))] [cos(27.26), acos(93.17)]), {(array[i : (g + h), j : b({}, true)] true), sin(atan2(77.43, 76.31))}, (if ((sum[i : 300, j : g] g) <= (sum[i : 889] argnum)) then argnum else 724)), (array[i : (if false then g else h), j : 794, k : (- h)] (array[l : h, m : argnum, n : 525] n))[argnum, 40, b({}, true)][h, ((if true then (- 459) else argnum) * g), {to_int(51.02)}{0}]]
fn i() : {bool,{float},{}} {
  assert (if {c(), (- 103), e}{0}[{h, [c(), c()]}{0}, b((if (true || false) then {} else {}), ((sum[j : g, k : 11, l : argnum] argnum) > h)), g] then true else (! (! ((sum[j : 846, k : argnum] argnum) > b({}, false))))), "j"
  return {(asin(log(69.36)) != (if (false && c()[h, g, h]) then (- exp(35.13)) else asin(tan(5.76)))), (if exp(8.53){1} then {(array[j : 443] 26.36)[b({}, false)]} else (if {argnum, true, c()}{1} then i(){1} else {acos(98.58)})), {{}, i()}{0}}
  return (array[j : (- to_int(59.28)), k : h] (if (! true) then (array[l : 152, m : g] i()) else (array[l : j, m : k] i())))[(to_int(atan(46.38)) / (- g)), (h % h)][(sum[j : ({h}{0} * e[e[h]])] (sum[k : (sum[k : (- h), l : 456, m : h] (sum[n : k, o : argnum] o))] (if (true == true) then g else (256 * j)))), 522]
  return i()
  return (if ((! (true && true)) || i(){0}) then (array[j : b({}, true), k : 426] (array[l : k, m : j, n : h] i())[k, k, (- h)]) else (array[j : b((if false then {} else {}), false), k : b({}, (! false))] i()))[(if {(h == 932)}{0} then to_int({29.97}{0}) else (- g)), h]
}

fn j() : int {
  let k = atan(tan((- pow(79.71, 68.58))))
  return argnum
  let {{{}, l[m]}, {}} = (if (! false) then {(if (if false then (! false) else (true && false)) then {{}, [55.98]} else {{}, (array[l : h] k)}), {{}}{0}} else {{{}, [sqrt(60.58), (- k), 80.63]}, (if 723 then (array[l : h, m : argnum, n : argnum] {}) else (array[l : j(), m : g, n : argnum] {}))[(if true then (g + h) else j()), h, (- argnum)]})
  let n = [exp((if (! true) then asin(acos(25.88)) else 74.27)), tan((- (sum[n : m] to_float(812)))), acos(k)]
  return h
}

let {} = {}
