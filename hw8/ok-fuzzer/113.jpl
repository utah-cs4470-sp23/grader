let {} = {}
fn a(b : int) : bool {
  return (if (((- 803) - 680) >= (array[c : b] argnum)[to_int(36.03)]) then (array[c : (- 161), d : (- argnum), e : (sum[c : (- b)] (argnum % 629))] ((sum[f : b, g : argnum, h : d] c) == d)) else (array[c : b, d : (- b), e : (- b)] (array[f : argnum, g : b, h : argnum] false))[b, (if true then (b - 703) else b), (array[c : 413] c)[(if true then 471 else b)]])[to_int(to_float(b)), b, (- (if (! a(argnum)) then (- argnum) else to_int(cos(80.75))))]
  let c = (a((sum[c : b, d : 817] b)) != (if a(args[argnum]) then {(false == false)} else {false}){0})
  let d = {(if (if c then c else false) then {args} else {args}), asin((- 59.83)), sqrt(sqrt(72.22))}{0}{0}
  let e[f, g] = (array[e : b, f : (- b)] [(array[g : 487, h : b] e), (array[g : f, h : 629] g)])[{{}, b}{1}, b][(b * b)]
  return (! c)
}

assert a((- {(! true), 74}{1})), "b"
fn b(c : int, { d[e, f, g] : float[,,][,,] }) : bool {
  let h[i, j, k] = (if (! true) then {(array[h : argnum, i : e] d), a(g)} else {(array[h : 788, i : 673] d), a(f)}){0}[g, 491]
  let {l, m, n} = (if (! (if (array[l : argnum] true)[args[k]] then (if true then (j <= c) else (644 > c)) else (false == a(i)))) then (if (if (! (f < i)) then (array[l : argnum, m : j, n : i] false)[c, c, f] else false) then {((g * i) != i), asin(to_float(j)), (sum[l : c, m : (f * i), n : g] to_float(k))} else (if ((f == i) || a(i)) then {true, to_float(argnum), to_float(i)} else {(c != c), to_float(k), sin(73.4)})) else (if (! (! a(f))) then {(g > (sum[l : g] c)), atan(to_float(i)), (sum[l : f, m : k, n : c] to_float(j))} else {((k == 821) && a(153)), pow(acos(13.04), 35.4), sqrt(to_float(i))}))
  let o[p, q, r] = {f, (array[o : argnum, p : j] d)}{1}[e, c][(sum[o : i, p : (if ((89.16 < 0.46) || l) then (sum[o : k, p : (- k), q : (- g)] i) else (- (sum[o : argnum, p : i] j))), q : (array[o : j, p : (sum[o : argnum, p : argnum] f)] p)[g, g]] j), e, g]
  let s = o
  return b({i, p, acos((if l then m else m))}{1}, (if (! (to_int(66.93) > p)) then [{d}, {h}][k] else (if ((q == p) && (l || l)) then (if a(c) then {h} else {d}) else (if a(c) then {h} else {d}))))
}

fn c({ {  } }, d[e] : bool[,,][]) : int {
  let f = (if {(! true), false}{1} then {asin(to_float(726))} else {{6.13}}{0}){0}
  let g[h] = [to_float(argnum), pow((if (if (23.3 == f) then (! true) else true) then (array[g : 674, h : e, i : argnum] 2.01)[to_int(f), 80, argnum] else asin(exp(68.55))), atan(f)), (- acos(to_float((906 / e))))]
  let i[j] = args
  let k[l, m, n] = (if true then (array[k : e, l : 507, m : to_int(atan(f))] (array[n : e, o : 801, p : e] l)) else (array[k : (- h), l : (sum[k : e, l : j] j), m : {j, argnum, h}{1}] (array[n : 315, o : e, p : m] (o + l))))[(if (if a((727 - e)) then true else true) then c((if (! false) then {{}} else {{}}), d) else (array[k : (- e), l : argnum, m : (h - h)] j)[e, argnum, e]), 356, (- e)]
  return (array[o : to_int((- (- 67.75)))] j)[e]
}

assert b(c((if ((! false) && false) then (if (! false) then {{}} else {{}}) else {{}}), (array[d : (sum[d : (- 185), e : (84 / 641)] (sum[f : 382, g : 310] e))] (array[e : (- argnum), f : to_int(30.08), g : (d - 951)] (f >= d)))), (if ((sum[d : 268, e : argnum, f : (sum[d : 131, e : argnum] argnum)] asin(93.89)) == 98.92) then {(array[d : (if false then 412 else argnum), e : (argnum * argnum), f : (if true then argnum else 276)] (array[g : 455, h : argnum, i : argnum] 71.47))} else {(array[d : argnum, e : 679, f : (- 433)] (array[g : d, h : 747, i : f] 18.09))})), "d"
let d[e, f] = (array[d : (array[d : 72, e : (sum[d : (- 216), e : (753 + 305)] 525)] e)[to_int(pow(atan(23.76), 13.08)), (- (if (! true) then argnum else (- 142)))], e : (- argnum)] args)
fn g(h : {float}, {  }, i : float) : {int,bool} {
  let j = to_int(atan2(atan(to_float(argnum)), i))
  let k[l, m] = (array[k : (- argnum)] {(array[l : j, m : k] argnum)})[to_int(48.5)]{0}
  assert {atan((- i)), {{}, false}}{1}{1}, "n"
  let n[o, p] = (array[n : e, o : j] ((atan2(asin(1.32), i) * sin(sqrt(98.71))) % (if true then pow(42.58, exp(42.44)) else {4.9}{0})))
  return (if {argnum, {false}{0}}{1} then {to_float(l), cos(to_float(630)), {l, (false && true)}}{2} else (array[q : o, r : m, s : (- (- argnum))] g((if true then h else h), (if true then {} else {}), to_float(r)))[j, c((if a(201) then {{}} else {{}}), (array[q : f] (array[r : j, s : l, t : j] false))), l])
}

let h[i, j, k] = {(array[h : (if (576 >= e) then (- f) else e), i : (- f), j : (sum[h : e] (- argnum))] {(- h), j, d}), pow(asin(to_float(e)), (if (f < f) then acos(28.37) else sqrt(73.63)))}{0}
let l[m, n] = (if {(array[l : k, m : i] false)}{0}[(if (e != f) then {f} else {i}){0}, k] then (if ((argnum / j) < argnum) then [d, (array[l : k, m : f] args), d] else (if true then (array[l : i] d) else (array[l : k] d)))[e] else (if {false, (543 - e)}{0} then (if a(158) then d else {d}{0}) else {d}{0}))
fn o(p[q] : {}[][], r : float, { s[t, u] : {int,int,float}[,] }) : int[,,] {
  assert b(to_int(r), {(array[v : m, w : u, x : [u][f]] (if (e == 916) then (array[y : 295, z : j, A : v] 43.82) else (array[y : t, z : u, A : 835] 86.62)))}), "v"
  let v[w] = p
  let {{x}} = [(if ((- n) <= n) then {{n}} else {{u}}), (if (a(w) != (f >= u)) then {{argnum}} else {{i}})][n]
  let y[z, A] = (if false then (array[y : (f - q), z : f, A : t] {l, args}) else (array[y : q, z : m, A : (if true then argnum else q)] {d, args}))[to_int(asin((- 13.15))), u, 239]{0}
  return o((array[B : argnum] (array[C : argnum, D : t, E : j] [{}, {}])[i, (t + argnum), (array[C : q, D : i, E : m] w)[n, args[z], A]]), (log(to_float(j)) * asin(77.33)), {{v, s}{1}})
}

fn p() : bool {
  let q[r] = args
  let {s[t, u], v} = (array[s : i, t : argnum] (array[u : t, v : j, w : n] {l, u}))[i, n][m, j, k]
  let w = p()
  let x = {v, f, h}{0}
  return (to_float(to_int(71.38)) < exp((- sin((- 37.91)))))
}

