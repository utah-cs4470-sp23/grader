(LetCmd
 (ArgLValue (VarArgument a))
 (CallExpr
  (FloatType)
  exp
  (CallExpr
   (FloatType)
   sqrt
   (SumLoopExpr
    (FloatType)
    a
    (SumLoopExpr
     (IntType)
     a
     (VarExpr (IntType) argnum)
     (UnopExpr (IntType) - (VarExpr (IntType) a)))
    b
    (SumLoopExpr
     (IntType)
     a
     (VarExpr (IntType) argnum)
     b
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 84))
     c
     (SumLoopExpr
      (IntType)
      a
      (VarExpr (IntType) argnum)
      b
      (IntExpr (IntType) 262)
      (VarExpr (IntType) b))
     (VarExpr (IntType) a))
    (CallExpr
     (FloatType)
     sin
     (SumLoopExpr
      (FloatType)
      c
      (IntExpr (IntType) 214)
      d
      (VarExpr (IntType) a)
      (FloatExpr (FloatType) 41)))))))
(ReadCmd "b.png" (VarArgument b))
(LetCmd
 (ArgLValue (VarArgument c))
 (CallExpr
  (FloatType)
  asin
  (CallExpr
   (FloatType)
   sqrt
   (CallExpr
    (FloatType)
    to_float
    (ArrayIndexExpr
     (IntType)
     (ArrayLiteralExpr
      (ArrayType (IntType) 1)
      (IntExpr (IntType) 461)
      (IntExpr (IntType) 815))
     (VarExpr (IntType) argnum))))))
(WriteCmd
 (TupleIndexExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (ArrayIndexExpr
   (TupleType
    (FloatType)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
   (ArrayLoopExpr
    (ArrayType
     (TupleType
      (FloatType)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     1)
    d
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) acos (VarExpr (FloatType) c)))
    (TupleLiteralExpr
     (TupleType
      (FloatType)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 78))
     (IfExpr
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      (TrueExpr (BoolType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       b)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       b))))
   (VarExpr (IntType) argnum))
  1)
 "d.png")
(LetCmd
 (ArgLValue (VarArgument d))
 (UnopExpr (FloatType) - (CallExpr (FloatType) cos (VarExpr (FloatType) a))))
(AssertCmd
 (TupleIndexExpr
  (BoolType)
  (TupleLiteralExpr
   (TupleType (IntType) (BoolType))
   (CallExpr
    (IntType)
    to_int
    (IfExpr
     (FloatType)
     (TrueExpr (BoolType))
     (CallExpr (FloatType) sqrt (VarExpr (FloatType) a))
     (VarExpr (FloatType) a)))
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 2)
     e
     (IntExpr (IntType) 205)
     f
     (SumLoopExpr
      (IntType)
      e
      (IntExpr (IntType) 973)
      f
      (IntExpr (IntType) 538)
      (VarExpr (IntType) f))
     (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType))))
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) acos (VarExpr (FloatType) a)))
    (SumLoopExpr
     (IntType)
     e
     (IntExpr (IntType) 12)
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) e)))))
  1)
 "e")
(TimeCmd
 (LetCmd
  (ArgLValue (VarArgument e))
  (CallExpr
   (FloatType)
   exp
   (CallExpr
    (FloatType)
    sqrt
    (CallExpr (FloatType) sin (FloatExpr (FloatType) 7))))))
(LetCmd
 (ArgLValue (VarArgument f))
 (CallExpr
  (IntType)
  to_int
  (IfExpr
   (FloatType)
   (UnopExpr
    (BoolType)
    !
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (IntExpr (IntType) 863) <= (IntExpr (IntType) 808))))
   (SumLoopExpr
    (FloatType)
    f
    (SumLoopExpr
     (IntType)
     f
     (VarExpr (IntType) argnum)
     (BinopExpr (IntType) (VarExpr (IntType) f) - (VarExpr (IntType) f)))
    g
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) tan (VarExpr (FloatType) a)))
    h
    (CallExpr (IntType) to_int (VarExpr (FloatType) d))
    (CallExpr
     (FloatType)
     atan2
     (CallExpr
      (FloatType)
      pow
      (FloatExpr (FloatType) 12)
      (VarExpr (FloatType) d))
     (UnopExpr (FloatType) - (VarExpr (FloatType) c))))
   (FloatExpr (FloatType) 86))))
(FnCmd
 g
 ((TupleBinding
   (TupleBinding
    (TupleBinding
     (TupleBinding
      (VarBinding (VarArgument h) (BoolType))
      (VarBinding (VarArgument i) (TupleType (FloatType) (FloatType)))
      (VarBinding
       (ArrayArgument j k l m)
       (ArrayType (ArrayType (FloatType) 2) 3))))
    (VarBinding (VarArgument n) (FloatType)))))
 (TupleType (ArrayType (FloatType) 3) (FloatType))
 (ReturnStmt
  (TupleLiteralExpr
   (TupleType (ArrayType (FloatType) 3) (FloatType))
   (ArrayLoopExpr
    (ArrayType (FloatType) 3)
    o
    (ArrayIndexExpr
     (IntType)
     (IfExpr
      (ArrayType (IntType) 3)
      (IfExpr
       (BoolType)
       (VarExpr (BoolType) h)
       (VarExpr (BoolType) h)
       (FalseExpr (BoolType)))
      (ArrayLoopExpr
       (ArrayType (IntType) 3)
       o
       (VarExpr (IntType) k)
       p
       (VarExpr (IntType) m)
       q
       (VarExpr (IntType) argnum)
       (IntExpr (IntType) 202))
      (ArrayLoopExpr
       (ArrayType (IntType) 3)
       o
       (VarExpr (IntType) l)
       p
       (IntExpr (IntType) 206)
       q
       (IntExpr (IntType) 364)
       (IntExpr (IntType) 117)))
     (ArrayIndexExpr
      (IntType)
      (ArrayLoopExpr
       (ArrayType (IntType) 3)
       o
       (VarExpr (IntType) l)
       p
       (VarExpr (IntType) l)
       q
       (VarExpr (IntType) m)
       (VarExpr (IntType) q))
      (VarExpr (IntType) l)
      (VarExpr (IntType) f)
      (VarExpr (IntType) k))
     (IntExpr (IntType) 913)
     (SumLoopExpr
      (IntType)
      o
      (VarExpr (IntType) f)
      (IfExpr
       (IntType)
       (VarExpr (BoolType) h)
       (VarExpr (IntType) l)
       (IntExpr (IntType) 8))))
    p
    (VarExpr (IntType) k)
    q
    (ArrayIndexExpr
     (IntType)
     (TupleIndexExpr
      (ArrayType (IntType) 1)
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 1))
       (VarExpr (ArrayType (IntType) 1) args))
      0)
     (IntExpr (IntType) 864))
    (UnopExpr (FloatType) - (CallExpr (FloatType) sin (VarExpr (FloatType) n))))
   (CallExpr
    (FloatType)
    atan
    (CallExpr
     (FloatType)
     atan2
     (CallExpr
      (FloatType)
      pow
      (CallExpr (FloatType) asin (VarExpr (FloatType) c))
      (VarExpr (FloatType) n))
     (VarExpr (FloatType) e)))))
 (LetStmt
  (ArgLValue (VarArgument o))
  (CallExpr
   (FloatType)
   asin
   (CallExpr
    (FloatType)
    atan
    (UnopExpr
     (FloatType)
     -
     (CallExpr
      (FloatType)
      exp
      (CallExpr (FloatType) sin (VarExpr (FloatType) n)))))))
 (LetStmt (ArgLValue (VarArgument p)) (VarExpr (IntType) k))
 (AssertStmt
  (ArrayIndexExpr
   (BoolType)
   (ArrayIndexExpr
    (ArrayType (BoolType) 3)
    (ArrayLiteralExpr
     (ArrayType (ArrayType (BoolType) 3) 1)
     (ArrayLoopExpr
      (ArrayType (BoolType) 3)
      q
      (CallExpr (IntType) to_int (VarExpr (FloatType) c))
      r
      (IfExpr
       (IntType)
       (TrueExpr (BoolType))
       (VarExpr (IntType) p)
       (VarExpr (IntType) f))
      s
      (IfExpr
       (IntType)
       (TrueExpr (BoolType))
       (VarExpr (IntType) k)
       (VarExpr (IntType) argnum))
      (BinopExpr (BoolType) (VarExpr (IntType) r) < (VarExpr (IntType) s))))
    (BinopExpr
     (IntType)
     (TupleIndexExpr
      (IntType)
      (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) l))
      0)
     *
     (VarExpr (IntType) f)))
   (VarExpr (IntType) p)
   (VarExpr (IntType) k)
   (VarExpr (IntType) k))
  "q")
 (ReturnStmt
  (IfExpr
   (TupleType (ArrayType (FloatType) 3) (FloatType))
   (TupleIndexExpr
    (BoolType)
    (IfExpr
     (TupleType (BoolType))
     (VarExpr (BoolType) h)
     (TupleLiteralExpr (TupleType (BoolType)) (FalseExpr (BoolType)))
     (IfExpr
      (TupleType (BoolType))
      (TrueExpr (BoolType))
      (TupleLiteralExpr (TupleType (BoolType)) (VarExpr (BoolType) h))
      (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))))
    0)
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 3) (FloatType))
    (IfExpr
     (ArrayType (FloatType) 3)
     (UnopExpr
      (BoolType)
      !
      (BinopExpr (BoolType) (VarExpr (IntType) l) < (IntExpr (IntType) 503)))
     (ArrayLoopExpr
      (ArrayType (FloatType) 3)
      q
      (UnopExpr (IntType) - (VarExpr (IntType) p))
      r
      (BinopExpr (IntType) (VarExpr (IntType) argnum) % (VarExpr (IntType) l))
      s
      (UnopExpr (IntType) - (IntExpr (IntType) 110))
      (SumLoopExpr
       (FloatType)
       t
       (VarExpr (IntType) s)
       u
       (VarExpr (IntType) l)
       (VarExpr (FloatType) d)))
     (IfExpr
      (ArrayType (FloatType) 3)
      (TrueExpr (BoolType))
      (ArrayLoopExpr
       (ArrayType (FloatType) 3)
       q
       (IntExpr (IntType) 324)
       r
       (IntExpr (IntType) 220)
       s
       (VarExpr (IntType) m)
       (VarExpr (FloatType) o))
      (ArrayLoopExpr
       (ArrayType (FloatType) 3)
       q
       (VarExpr (IntType) p)
       r
       (VarExpr (IntType) argnum)
       s
       (VarExpr (IntType) m)
       (VarExpr (FloatType) a))))
    (VarExpr (FloatType) c))
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 3) (FloatType))
    (ArrayIndexExpr
     (ArrayType (FloatType) 3)
     (ArrayLoopExpr
      (ArrayType (ArrayType (FloatType) 3) 3)
      q
      (BinopExpr (IntType) (VarExpr (IntType) p) * (VarExpr (IntType) l))
      r
      (VarExpr (IntType) l)
      s
      (VarExpr (IntType) p)
      (ArrayLoopExpr
       (ArrayType (FloatType) 3)
       t
       (VarExpr (IntType) f)
       u
       (VarExpr (IntType) l)
       v
       (VarExpr (IntType) m)
       (FloatExpr (FloatType) 6)))
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      *
      (IfExpr
       (IntType)
       (VarExpr (BoolType) h)
       (VarExpr (IntType) m)
       (VarExpr (IntType) argnum)))
     (IfExpr
      (IntType)
      (IfExpr
       (BoolType)
       (VarExpr (BoolType) h)
       (VarExpr (BoolType) h)
       (FalseExpr (BoolType)))
      (VarExpr (IntType) p)
      (SumLoopExpr (IntType) q (VarExpr (IntType) f) (VarExpr (IntType) l)))
     (CallExpr
      (IntType)
      to_int
      (CallExpr (FloatType) acos (VarExpr (FloatType) e))))
    (VarExpr (FloatType) n)))))
(LetCmd (ArgLValue (VarArgument h)) (VarExpr (FloatType) a))
(LetCmd
 (ArgLValue (ArrayArgument i j k))
 (VarExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  b))
(TypeCmd l (IntType))
