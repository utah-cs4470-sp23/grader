time let a = to_float((args[argnum] - 948))

time let b[c] = (array[b : {argnum, false}{0}, c : (array[b : argnum, c : argnum] b)[(- 739), 882], d : 178] args)[(if (array[b : argnum] true)[argnum] then 724 else argnum), ((sum[b : argnum, c : (if false then argnum else argnum)] 180) * (- argnum)), (if (! (! false)) then ((if false then argnum else argnum) - to_int(a)) else (to_int(a) + (461 * 460)))]

let d = argnum
fn e(f : bool) : float[] {
  assert false, "g"
  let {g, h} = (array[g : ((- argnum) % (sum[g : d, h : d, i : argnum] 169)), h : (sum[g : (sum[g : c, h : argnum] c)] (if false then argnum else 984)), i : argnum] (array[j : (argnum * h)] {h, a}))[d, c, (sum[g : (69 - to_int(57.93)), h : (- (d / c))] d)][(if (! (array[g : d, h : 169, i : c] true)[(sum[g : 244] argnum), (d % 527), c]) then (array[g : c, h : d, i : d] to_int(15.15))[d, (if (! true) then (if true then argnum else 345) else (argnum - 17)), argnum] else d)]
  let {} = {}
  let i[j] = (array[i : argnum] e(((- 3.59) >= sin(53.16))))[(array[i : 722, j : to_int(0.97)] (array[k : j, l : argnum] g))[(to_int(a) % d), c][c, g]]
  return (array[k : ((sum[k : j, l : g] argnum) - c)] {a, i, d})[(- to_int(to_float(d)))]{1}
}

time let {} = {sqrt(a), {{}}, (array[f : 23] d)}{1}{0}

let {{{f[g], h[i, j]}, {k}, l}, m[n, o], p[q, r]} = {{(if ((! false) && (! true)) then {(if true then b else args), (array[f : c, g : 939] 486)} else {[argnum, 578], (array[f : c, g : 335] g)}), (if (sqrt(32.07) >= a) then {to_int(23.04)} else {(- 668)}), b}, {(array[f : (sum[f : 49, g : d] argnum), g : argnum] d), to_int(sqrt(45.25))}{0}, (array[f : argnum, g : (if (false || true) then (sum[f : 343, g : c] (sum[h : g] h)) else (- to_int(81.31)))] sqrt((if (! true) then acos(42.11) else (sum[h : f, i : f] a))))}
let s[t] = (array[s : k, t : (if (a >= 31.22) then f else [i, o])[o], u : k] (if (false || true) then args else f))[(if ((! (d <= g)) && (k == k)) then (- d) else b[d]), (- k), o]
print "u"

let u = (! (if [false, true][h[t, d]] then {t, (! false), g} else {g, (o == k), (t * c)}){1})
let {v[w, x], y[z, A, B], C} = (array[v : {to_int(a), 70.88}{0}, w : c] {(if (! u) then p else p), (array[x : d, y : t, z : (w * c)] 487), a})[argnum, n]
time let D = l

let {E[F], G} = (array[E : d] (array[F : (argnum - c), G : d] {s, 52})[(if (w >= n) then z else A), argnum])[[o][B]]
