show sin((if ((true && true) || true) then (sum[a : (- (948 % 739)), b : 654, c : (- 375)] log(11.34)) else cos((- (sum[a : 998] 5.01)))))

let {a} = {to_float([args, args][(64 % 383)][(if false then (942 + 95) else 81)])}
fn b({ c[d, e] : int[,][,] }, f : bool, g[h] : bool[]) : float[,,][,,] {
  let i[j, k, l] = {b((if (if true then true else false) then {c} else {c}), false, {g}{0}), b((if (h >= argnum) then {c} else {c}), (! (f == true)), (if (! f) then g else [false]))}{1}
  let m[n] = [g, [{f, atan(a), (- 59.79)}{0}, (if (argnum == argnum) then {f} else {f}){0}]]
  assert (to_float(k) != tan(atan((- log(a))))), "o"
  let {} = {}
  return (if (to_int(atan(a)) < 290) then (array[o : j, p : d, q : j] (array[r : l, s : k, t : {k, 91}{0}] a)) else (array[o : to_int(log(atan2(a, 15.87))), p : e, q : k] (if ((l == k) || (true == false)) then (if (false != false) then i[d, argnum, j] else i[h, e, n]) else i[p, p, (if f then k else 619)])))
}

let {} = (array[c : argnum, d : to_int(asin(a))] {{}, [false], a}{0})[{(array[c : 571] false), {argnum}}{1}{0}, (- (array[c : (445 - 639), d : (532 / 859), e : (argnum + 299)] argnum)[{argnum, 651}{1}, 915, to_int(asin(9.71))])]
let c = tan(a)
fn d(e[f, g] : float[,]) : {float} {
  let h = (! (argnum >= (if [false][(186 - g)] then argnum else (if (! true) then (sum[h : argnum, i : argnum] f) else f))))
  let {{}} = (if (array[i : ((sum[i : 642] i) + (argnum % 702)), j : (- f), k : f] (a < acos(c)))[to_int(pow(cos(48.03), a)), (sum[i : argnum] to_int((- a))), argnum] then (if ((517 + 174) <= g) then (array[i : (sum[i : f, j : 886] j), j : argnum, k : (if h then f else f)] {{}}) else (array[i : f, j : 643, k : f] {{}}))[f, 434, (if true then f else to_int(a))] else (if h then (if (if (h && false) then (if false then true else h) else true) then {(if h then {} else {})} else (if (h && h) then {{}} else {{}})) else {(array[i : 981] {})[(argnum + 369)]}))
  let {{{i[j]}, k[l]}, m, {n, o[p], q}} = {(array[i : argnum, j : (if (false && h) then (sum[i : g, j : argnum] f) else g), k : (sum[i : f, j : 148] f)] {{args}, [j]})[{argnum}{0}, (if (h && (a > a)) then (- args[f]) else to_int(a)), (if (true || true) then {a, f} else {57.8, 317}){1}], ((array[i : argnum, j : to_int(a)] (! h))[(to_int(c) - g), 958] || [h, (if h then h else false)][((if h then g else f) % args[f])]), (if (exp(sqrt(84.68)) == log((sum[i : 118] a))) then {(sum[i : 699, j : g, k : args[g]] f), [217, argnum], (if h then pow(a, a) else sqrt(c))} else (array[i : g, j : to_int(a)] {i, args, a})[(sum[i : (- argnum)] i), to_int((sum[i : 571] 30.96))])}
  return (if (if (if (if (true != m) then (674 <= p) else m) then (array[r : p, s : argnum] true)[(sum[r : n, s : j, t : n] j), p] else h) then (h || false) else ((true == h) && h)) then {asin(sqrt(atan2(a, 6.43)))} else (if (if true then (! (! m)) else (h && h)) then (if h then d((if h then e else e)) else {to_float(argnum)}) else {atan(cos(q))}))
  return (if h then [{a}, (if m then {13.98} else d(e)), {tan(c)}] else (array[r : (if (argnum == f) then p else g)] {(sum[s : l] q)}))[(- [argnum][335])]
}

let e[f, g, h] = (array[e : argnum, f : (sum[e : {201, args, argnum}{0}, f : (sum[e : (if false then 206 else 815)] argnum)] (- e))] {true, argnum, (array[g : argnum, h : 899, i : e] i)}{2})[{to_float(argnum), (if (true && false) then argnum else argnum)}{1}, to_int(pow(exp(a), log(log(c))))]
let i = [[((! (! false)) != false), true, (pow(c, c) != c)], [(! (false != (false && true)))], [(! ((if true then true else false) || (! false))), {(! false), h, c}{0}, (array[i : (argnum + argnum), j : argnum] (j <= argnum))[(- (f - f)), g]]]
let j = (! (! {(- argnum), pow(94.35, a), (a >= 61.07)}{2}))
let {} = (if false then (array[k : h, l : argnum] {k, {}}) else (array[k : (sum[k : g, l : f, m : h] l), l : argnum] {f, {}}))[(- g), (if (! true) then (array[k : argnum, l : f, m : f] argnum) else (array[k : g, l : argnum, m : argnum] 28))[g, (f + args[970]), h]]{1}
fn k(l : bool, { m : bool }) : int {
  return (sum[n : (- argnum), o : to_int(cos(asin(c)))] to_int((- asin(c))))
  let n[o, p, q] = (if (if m then {m, g, false} else {false, f, l}){0} then (if (l && m) then (if false then (array[n : g, o : f] e) else (array[n : g, o : h] e)) else (array[n : g, o : (604 + argnum)] e)) else [(array[n : argnum, o : f] e), (array[n : g, o : g] e)][argnum])[(- argnum), to_int(exp(log(96.98)))]
  let {r[s], t, u} = {[p, argnum], argnum, to_float(h)}
  let v = atan2((if (! l) then u else (if j then (39.98 / tan(a)) else (if j then sin(a) else sqrt(u)))), (- {27.62, cos(49.8)}{1}))
  return (if (if m then (array[w : f, x : s] j) else (array[w : t, x : 907] l))[q, k(l, {false})] then (if (h != p) then (array[w : q, x : t, y : q] p) else n) else {r[argnum], (sum[w : f, x : s] t), (array[w : s, x : 303, y : argnum] q)}{2})[((- q) - to_int(c)), argnum, (argnum % g)]
}

fn l(m : float[,,][,]) : int {
  assert (c != (sum[n : (if (j && j) then {f, 50.18} else {g, c}){0}, o : 555] atan2(c, acos(sqrt(c))))), "n"
  assert {(if j then {false} else {false}), (sum[n : argnum, o : g] g), (- acos(a))}{0}{0}, "n"
  let {n, {o, p, {q[r]}}} = (if (! ((j && (j && true)) && (! (h != argnum)))) then {e, (if (array[n : argnum] j)[to_int(a)] then {args, pow(2.73, 2.42), {i}} else {(array[n : argnum] argnum), (- a), {i}})} else {{(array[n : g, o : f, p : 545] f)}{0}, {(if j then [f, f] else args), sqrt(sqrt(63.03)), (if false then {i} else {i})}})
  return [{(- 348), f}{1}, (sum[s : r, t : (sum[s : (sum[s : g, t : g] s), t : f] argnum), u : (sum[s : g] argnum)] r)][h]
  return g
}

