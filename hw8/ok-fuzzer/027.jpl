let a[b] = (if true then (if false then (array[a : (- argnum), b : 66] [348, b]) else (array[a : 615, b : (- argnum)] (array[c : a] a))) else (array[a : (- argnum), b : (sum[a : (- 924), b : (argnum / 38)] a)] args))[argnum, argnum]
let {c[d, e, f], {}, g} = (if (! ((- log(46.91)) == sqrt(tan(1.29)))) then [{(array[c : b, d : b, e : b] a), {}, argnum}, {(array[c : 671, d : 182, e : b] args), (if true then {} else {}), b}][(sum[c : 692, d : args[argnum]] c)] else (array[c : 96] {(array[d : c, e : 994, f : argnum] a), {}, argnum})[(to_int(sin(49.59)) % (array[c : b, d : argnum] d)[argnum, (sum[c : 993, d : 576, e : 525] c)])])
let {h[i], j} = (if ((! true) && (if (d > g) then false else false)) then {{args, e}, sin(to_float(b)), (array[h : (- d), i : e, j : argnum] {e, j})} else {{(if true then args else args), e}, tan(25.33), (array[h : f, i : g, j : b] {g, 803})}){0}
time print "k"


let k[l, m, n] = (array[k : b, l : d, m : f] pow(log(exp(to_float(j))), tan((- sin(46.86)))))
fn o() : float[,,][] {
  let p = n
  assert (j != m), "q"
  let q[r, s] = (if ((if (l < i) then to_float(n) else 64.8) > pow(acos(55.82), to_float(f))) then (array[q : e] (array[r : (sum[r : b, s : g, t : i] j), s : (sum[r : b, s : f] 834)] 109)) else (array[q : j] (array[r : f, s : n] d)))[n]
  let {t[u, v, w], {}} = (if ((if (! (723 != r)) then (! false) else (false != false)) && true) then (if ((true && (! true)) != ((e > 972) && (if false then false else true))) then {(if (s >= m) then c else (array[t : n, u : j, v : p] args)), {p, args, {}}{2}} else {{c, {}}, (s > j), f}{0}) else {(if ((r == e) || (! true)) then (if (false == false) then c else (array[t : f, u : l, v : r] args)) else (if (f >= e) then c else c)), (if true then {{}} else {{}}){0}})
  return (array[x : (if false then m else v), y : j, z : s] {o(), g})[(if (i >= l) then {w} else {d}){0}, (if (false == (i != 540)) then i else g), u]{0}
}

let p[q] = args
fn r() : int[,,] {
  let {s[t, u]} = (if (if false then (k[l, g, 947] <= 71.2) else true) then (array[s : (array[s : f, t : j, u : j] s)[603, b, l], t : q, u : n] {(array[v : m, w : g] p)}) else (array[s : f, t : argnum, u : (sum[s : d] d)] {(array[v : s, w : i] args)}))[b, e, (if (if true then (if (g >= g) then (b != 126) else true) else (array[s : q, t : i, u : q] true)[383, argnum, f]) then g else e)]
  let {{v, {}}, w[x], y} = {(if (true && (true || false)) then (array[v : g] {m, {}}) else (array[v : e] {q, {}}))[l], [to_int(atan2(41.0, sin(35.71))), u], [j, n, argnum]}
  let {{}} = (if (if (! true) then (if false then {false} else {false}) else {true}){0} then (if (! ((if false then 65.87 else 68.13) < exp(60.43))) then (if (if (true && true) then true else (i != b)) then {{}} else (if true then {{}} else {{}})) else {{}}) else {{}})
  let {z[A, B]} = (if (! (if ((if true then v else m) <= g) then (argnum < m) else {j, m, true}{2})) then (if (if (i != e) then (j == i) else (i == 513)) then {{s}} else {{s}}){0} else (array[z : n, A : i] {(array[B : j, C : l] w)})[to_int(pow(to_float(b), to_float(q))), v])
  return (if (if (array[C : (b / j), D : argnum, E : e] (if false then true else false))[f, t, m] then (if false then {true} else {false}){0} else true) then r() else (if {false, j, j}{0} then r() else (if (argnum == A) then (array[C : j, D : l, E : l] r()) else (array[C : g, D : m, E : g] r()))[q, g, A]))
}

let s[t, u, v] = r()
assert true, "w"
fn w(x[y] : {float,float,int}[], z : int, { {  }, A[B, C] : {bool}[,] }) : int {
  return (if (false || (! (e == n))) then (array[D : q] (array[E : f, F : B] q))[m] else (if {x, true, z}{1} then (if (false && false) then (array[D : v, E : q] i) else (array[D : i, E : l] i)) else (array[D : j, E : (y / m)] n)))[e, b]
  assert (! ({[a], (false && true)}{1} && (g != to_int((sum[D : n, E : b, F : 576] 87.64))))), "D"
  return w([{(sum[D : z, E : e] k[D, v, v]), log(76.77), (- 73)}, (if (! (true || false)) then {exp(65.24), 4.87, v} else {exp(35.04), atan(34.53), argnum}), {sqrt(sin(47.86)), log(to_float(n)), f}], i, (if (d != 487) then (if (! false) then {{}, A} else (if (! false) then {{}, A} else {{}, A})) else {{{}}{0}, (array[D : B, E : m] {false})}))
  assert (! (if (y < u) then A else (if true then A else A))[m, t]{0}), "D"
  return B
}

read image "x.png" to x[y, z]

