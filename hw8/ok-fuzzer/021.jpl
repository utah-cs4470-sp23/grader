type a = bool[]
type b = float
fn c(d[e, f, g] : a[,,]) : int {
  let h[i, j, k] = {{d}, to_float(argnum), 36.83}{0}{0}
  let l[m, n, o] = (array[l : (if (array[l : (sum[l : g, m : 461] e), m : f, n : (sum[l : j, m : 395] k)] (90.94 <= 51.34))[j, c((if true then h else d)), i] then (to_int(to_float(k)) % (array[l : 115] g)[j]) else j), m : (if (! [false][k]) then (sum[l : (if (! false) then e else g), m : (argnum * (j - 382)), n : argnum] (if (if false then false else true) then n else m)) else (- (if (! false) then g else i))), n : {(array[l : k, m : argnum] g)}{0}[g, k]] k)
  return k
  let {p[q, r, s]} = (if {(array[p : e, q : m, r : j] true), l}{0}[(623 * (array[p : f, q : m] i)[j, (sum[p : 335] e)]), argnum, c((if (if true then false else true) then h else (if true then h else d)))] then {{(array[p : n, q : j, r : g] argnum)}}{0} else (if (log(98.09) > exp((- 5.16))) then {(if false then l else l)} else {{l}, (! false), asin(68.04)}{0}))
  return m
}

let d[e] = (array[d : (800 * (sum[d : (sum[d : 320] argnum), e : argnum, f : (sum[d : 594, e : 267, f : 199] e)] e)), e : to_int(sqrt(tan(98.06))), f : argnum] [sqrt((- 25.14)), to_float(902)])[(sum[d : c((array[d : argnum, e : argnum, f : (273 + argnum)] [true])), e : (- 171)] (- 679)), c((array[d : (- to_int(85.87)), e : argnum, f : (- (sum[d : 913] d))] (array[g : e] (d == 717)))), {(args[532] - to_int(34.63)), to_int(log(31.27))}{0}]
time let {f[g]} = (if ((argnum >= (argnum - e)) == (! true)) then (if false then {args} else (if false then {args} else {args})) else (if false then {(if true then args else args)} else {args}))

let h[i, j] = {{(array[h : g, i : argnum] 553), (! false)}{0}}{0}
fn k() : int {
  let l = d
  return {{argnum, 61.08, f}}{0}{2}[k()]
  let {m} = {(array[m : e, n : e, o : j] {e})}{0}[c((array[m : g, n : (i - (- k())), o : argnum] (if (! false) then (array[p : 731] true) else (array[p : i] false)))), j, (sum[m : (if (! (if false then false else false)) then k() else g), n : {sin(12.13), (argnum - 456)}{1}, o : k()] (if true then (if (! true) then (- o) else argnum) else g))]
  let n[o, p] = (if ((i > argnum) && (if true then false else true)) then (array[n : j, o : h[g, i]] {m, h, j}) else (array[n : i, o : m] {n, h, n}))[i, g]{1}
  return o
}

fn l({  }, { { m : a, n : {} }, o[p, q] : bool[,] }) : float {
  return (- (if (if (true || (true != false)) then ((! false) || o[e, j]) else (if (! true) then false else o[p, i])) then tan(tan(sqrt(59.15))) else exp(atan(10.44))))
  let {r} = {pow((if m[(- 544)] then to_float(491) else (if true then to_float(945) else to_float(e))), acos(tan(to_float(g))))}
  let s = 845
  assert (acos(r) != acos(l((if (argnum == q) then n else n), {{m, {}}, (array[t : i, u : s] true)}))), "t"
  return r
}

assert ((sqrt((sum[m : i, n : e, o : g] asin(97.72))) <= log(to_float((- g)))) || (if (exp((sum[m : 847, n : e, o : i] 10.37)) <= log(tan(65.01))) then true else (! (if (568 > k()) then true else true)))), "m"
let {m, {n[o, p, q], r, s}, t} = {{asin(exp(90.82)), {(array[m : i, n : 842, o : j] o), [10.47], h}, tan(sin(1.78))}, asin((sum[m : (sum[m : argnum] 950), n : j] exp(86.52)))}{0}
assert ((h[137, o] != 21) || (if (if false then (array[u : j, v : i] false) else (array[u : e, v : p] true))[{e, s}{0}, f[o]] then (! ((true && true) || false)) else {(i > j), {args, argnum, true}, args}{0})), "u"
let {} = (if ((if (! true) then (if false then true else (74.21 != m)) else (! true)) || ((if (e == q) then k() else o) <= to_int(exp(m)))) then (array[u : g] (array[v : j] {})[285])[(if ((k() == argnum) == (! false)) then k() else (if (806 <= o) then g else s[p, g]))] else (array[u : e, v : (- o), w : f[o]] [{}])[(argnum / g), i, h[p, i]][h[(- (sum[u : g, v : j, w : k()] q)), f[925]]])
