fn a(b : float, c : int, {  }) : {} {
  let d = (! (! {true}{0}))
  assert ((- (argnum / (c * (if d then c else argnum)))) < (array[e : (sum[e : argnum] argnum), f : c] (array[g : 977, h : e, i : argnum] f))[(sum[e : to_int(b), f : (sum[e : 790, f : 156] 185)] c), (693 + (sum[e : c, f : argnum, g : c] g))][argnum, (if (c == to_int(b)) then (- (- c)) else (sum[e : c, f : (if d then c else c)] 77)), (sum[e : (if (argnum >= 36) then argnum else (304 - c)), f : c, g : (if d then argnum else to_int(77.25))] to_int((if false then 98.72 else 74.42)))]), "e"
  let {e} = {207}
  assert d, "f"
}

show tan(tan(log(acos(cos(3.9)))))

type b = int
let c = sin((array[c : (if (argnum != 477) then 535 else argnum), d : (- (sum[c : 146, d : 190] d)), e : to_int(acos(36.07))] (51.7 + 24.25))[657, (- 779), {535}{0}])
fn d() : bool {
  assert (if ((array[e : argnum, f : 628, g : 313] d())[610, args[argnum], (- argnum)] || ((c < c) || (if d() then false else d()))) then {args, 466, {76.3, 559, true}}{2} else {asin(exp(16.97)), (- 929), false}){2}, "e"
  return (to_int(tan(c)) <= argnum)
  assert (array[e : 216, f : (if (if (argnum >= 750) then (657 >= 408) else (d() != false)) then {c, argnum}{1} else {args, 411}{1}), g : (if (if (914 >= argnum) then d() else (false && d())) then argnum else ((- 455) - argnum))] false)[to_int(atan2(sin(14.62), asin(atan2(40.55, c)))), 868, 1], "e"
  let e = a((if {acos(47.98), true}{1} then sqrt((sum[e : (- 573)] atan2(35.64, c))) else {to_float(639), true, (sum[e : argnum, f : argnum, g : 151] g)}{0}), (if d() then argnum else 461), a(c, (sum[e : [argnum, argnum][(896 - argnum)], f : {737}{0}, g : 697] argnum), a(to_float((argnum * argnum)), (array[e : 979, f : 743, g : argnum] argnum)[(- argnum), 985, (- 926)], a(sqrt(15.83), args[argnum], {}))))
  return (if (if (if (sin(c) == atan(c)) then true else (31.54 < to_float(500))) then true else d()) then false else (sin(to_float((- argnum))) <= pow((- tan(c)), cos(atan2(64.58, 68.84)))))
}

fn e() : int {
  assert {(array[f : (e() - 655), g : (if d() then argnum else e()), h : (- e())] d())[(- (sum[f : 85, g : argnum, h : argnum] g)), (array[f : argnum] argnum)[(if false then 754 else 122)], {e()}{0}], log(asin(atan(48.11)))}{0}, "f"
  let {f, g, {}} = {{{355, d(), {}}}{0}, (true || {d()}{0})}{0}
  let h = pow(to_float((sum[h : 941] e())), pow(sin((sum[h : (if g then e() else argnum), i : args[347], j : (e() + 708)] asin(13.98))), atan((- asin(84.07)))))
  let i = to_float(e())
  return (- (- ((f + (sum[j : 765, k : f, l : 599] j)) % argnum)))
}

time print "f"


let {f[g, h]} = (if (asin((- (sum[f : 380, g : argnum] c))) > (- atan2(log(c), (- c)))) then {{(array[f : argnum, g : 333] argnum)}, atan(acos(31.83))}{0} else (if d() then {(if (false && d()) then (array[f : e(), g : argnum] e()) else (array[f : 372, g : 307] f))} else {(array[f : argnum, g : (if d() then 802 else e())] 683)}))
let i = f
assert true, "j"
let {{}, j, k[l, m]} = (if (asin(pow(72.39, sin(29.71))) < cos(86.69)) then (array[j : g, k : ((- e()) + h), l : h] (if (d() && false) then {{}, e(), f} else {{}, g, i}))[{(e() < 506), h, log(c)}{1}, (sum[j : (if (e() > argnum) then (g - argnum) else argnum), k : to_int(tan(c))] argnum), g] else [{{}, argnum, (if d() then i else i)}, {a(73.71, 831, {}), 330, f}][(sum[j : (argnum - (if d() then g else argnum))] (sum[k : e(), l : g, m : (sum[k : e()] e())] (if d() then j else l)))])
let {} = (if true then (array[n : (if (true && d()) then m else l), o : argnum] (array[p : j, q : j, r : j] {})[m, 930, (sum[p : l, q : m, r : j] q)]) else {(array[n : e(), o : 160] {}), false, {}}{0})[135, j]
