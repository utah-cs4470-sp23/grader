write image {(array[a : ((sum[a : 646, b : 447, c : 1] argnum) - (- 250)), b : to_int(asin(40.29))] {asin(81.95), tan(99.49), log(35.08), tan(79.05)})}{0} to "a.png"

read image "a.png" to a

write image (if (argnum < to_int(sin(0.3))) then {(if (! true) then a else (if true then a else a))} else (if (! (true || false)) then (if false then {a} else {a}) else {(if true then a else a)})){0} to "b.png"

let {{}, b[c, d], e} = {{}, (if {{argnum, args}, true, (array[b : 360, c : 391, d : 758] b)}{1} then (array[b : 994, c : (sum[b : (- argnum), c : argnum, d : args[argnum]] d)] b) else {(array[b : 388, c : argnum] b), cos(23.28)}{0}), true}
let f = (! [{e, argnum, false}{2}, (! (! true))][argnum])
let g = b
let {} = (array[h : {argnum, argnum, f}{0}, i : {41.42, d}{1}, j : (if e then 597 else (- c))] {{}, b, (sum[k : argnum] 243)})[c, (if f then (if (f && f) then 485 else c) else 776), to_int(to_float(args[c]))]{0}
let {h[i]} = (if (if (true || (e || e)) then {true, tan(6.01), a} else {(! false), exp(58.16), a}){0} then (if {false, e, 68.52}{0} then {{args}, (false == e), 76.77} else {{args}, false, tan(86.74)}){0} else {args})
let {j, k[l, m, n]} = {cos((if (array[j : c, k : i] true)[(sum[j : i, k : d] j), (d * c)] then asin(to_float(c)) else (if f then asin(48.23) else to_float(d)))), (if (! (if f then false else e)) then (if (array[j : i, k : argnum] f)[(argnum * i), (sum[j : d, k : i] 295)] then (array[j : (if f then 297 else 49), k : argnum, l : c] argnum) else (array[j : (- i), k : (- c), l : (- c)] i)) else (if (array[j : c, k : c, l : i] f)[argnum, (sum[j : d, k : i, l : i] j), (if f then i else d)] then (if e then (array[j : argnum, k : d, l : 995] j) else (array[j : c, k : 554, l : d] argnum)) else (array[j : i, k : d, l : (if e then argnum else argnum)] 419)))}
fn o() : float {
  let p[q, r, s] = (if false then (array[p : b[i, argnum], q : n] {k}) else (array[p : (i * l), q : (- 520)] {k}))[n, (if false then {m} else {c}){0}]{0}
  let {t[u]} = {(if (if (r == m) then (if e then f else true) else (f && e)) then (array[t : b[r, argnum], u : p[r, c, i], v : n] args) else (if true then (array[t : i, u : d, v : q] args) else (array[t : 891, u : d, v : q] args)))[n, (sum[t : to_int(to_float(l)), u : to_int(j)] d), i]}
  let v = l
  let w[x, y] = (array[w : 181, x : u] asin(atan2((if (! e) then 54.5 else to_float(q)), sqrt(o()))))
  return (sum[z : argnum, A : y] (array[B : x] [67.3][i])[y])
}

fn p() : int {
  let {q, {r[s]}} = {d, (if {p(), true}{1} then {n, {h}, 20.81}{1} else {{args}}{0})}
  assert (f || {(array[t : m, u : i, v : i] e), (array[t : m, u : p()] c)}{0}[h[(- to_int(o()))], n, to_int(sin(cos(j)))]), "t"
  let t[u] = r
  return i
  return (- u)
}

assert e, "q"
