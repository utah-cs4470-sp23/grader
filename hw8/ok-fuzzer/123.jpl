let a = pow(exp(sin(tan(exp(11.12)))), (sum[a : argnum] atan(sin((- 56.46)))))
let b[c] = [args][(sum[b : (sum[b : (482 - to_int(a)), c : (if (true && true) then (- argnum) else 906)] argnum), c : (if true then {871} else {argnum}){0}] ({b}{0} * c))]
let {} = {(array[d : args[c], e : 124, f : argnum] {}), {18.97, (25 == c), cos(a)}, true}{0}[446, (- argnum), (array[d : argnum, e : (c * argnum), f : c] (array[g : e, h : d] e))[((c + argnum) + (sum[d : c, e : c, f : 107] e)), (sum[d : (sum[d : c, e : c, f : c] d), e : to_int(95.23)] (sum[f : argnum] e)), (argnum - (sum[d : argnum, e : c, f : c] 465))][(array[d : 695, e : argnum, f : (if true then argnum else c)] c)[(- (661 % argnum)), (sum[d : argnum, e : 400] e), (sum[d : (sum[d : argnum, e : argnum] argnum)] argnum)], 27]]
fn d({ { e[f] : bool[], { { {  } }, g : {int}, {  } } }, h : bool, { i[j, k] : bool[,], l[m, n, o] : float[,,], p : int[] } }, q[r, s, t] : bool[,,], u : {int}) : {} {
  let v = i
  let {{w[x, y, z]}} = {[{l}, {(array[w : 451, x : s, y : m] a)}][j]}
  let A = (if (! (argnum == y)) then (array[A : (- c), B : (array[A : n, B : g{0}, C : z] t)[948, s, k], C : (array[A : (- argnum)] r)[n]] {b, false}) else (array[A : (- argnum), B : c, C : z] (if (a <= a) then {(array[D : t] D), (! h)} else (if h then {args, true} else {b, h}))))
  assert (array[B : t, C : (y + s)] {false, v, 35.31})[m, t]{1}[{{k, p, t}}{0}{2}, f], "B"
}

fn e(f : bool) : bool {
  assert ({log(a), (- argnum), {f}}{2}{0} || (if (to_int((- 21.81)) != (sum[g : 426, h : b[argnum]] (if false then g else argnum))) then {(if f then true else f), (! false), args}{0} else (! (! (! false))))), "g"
  let g[h, i] = (if (! {true}{0}) then (array[g : argnum, h : {(sum[g : 948] c)}{0}] asin(sqrt(asin(25.48)))) else (if false then (array[g : (- c), h : (- argnum)] (array[i : h, j : 504] a))[{233, 890, f}{1}, c] else (array[g : to_int(to_float(46)), h : c] sin(sqrt(41.33)))))
  let j[k] = [tan(atan(atan2(cos(31.94), (sum[j : 821] a))))]
  let l = e(false)
  return (if (i != i) then {args, sqrt(80.43), (array[m : 940, n : 163] f)} else {b, sin(a), (array[m : 232, n : argnum] l)}){2}[312, (if (! f) then 229 else to_int(asin(a)))]
}

fn f(g[h, i, j] : bool[,][,,]) : float {
  let k[l, m, n] = [(if e(false) then {g}{0} else (if e(false) then (if true then g else g) else g)), (array[k : to_int(74.25), l : ((- h) / i), m : 454] (array[n : j, o : m] e(true))), {sqrt(a), (if true then g else g)}{1}][(- (if ((- i) >= (- j)) then 266 else h))]
  assert (h != m), "o"
  let o = e((i != i))
  return sqrt(acos(sin(cos(to_float(845)))))
  return (if o then {asin(pow(92.06, 44.37)), exp(a)} else {atan(cos(a)), (tan(a) / atan(a))}){1}
}

let {} = (if e(true) then {{}} else (array[g : 337] {{}})[{c}{0}]){0}
let g[h, i] = {argnum, {(array[g : c, h : 297] 732)}{0}, [[argnum, argnum, argnum], (array[g : c] (g - c))]}{1}
fn j() : int[][,] {
  assert (! (cos(to_float(i)) != (if (array[k : argnum] false)[c] then pow(sqrt(a), (- a)) else cos(acos(a))))), "k"
  let k[l, m] = (if (if (if [true][c] then (h < c) else ((454 < argnum) && (i < c))) then (if (array[k : c, l : i, m : h] false)[argnum, i, (if false then c else argnum)] then ((464 <= 18) || (! true)) else ((a >= a) || e(true))) else (false && {a, false}{1})) then (array[k : [(- 440), g[argnum, h]][40], l : g[(array[k : h, l : c, m : h] 531)[c, args[h], (- argnum)], c]] false) else (if (pow(a, a) > atan2(atan(a), a)) then {(array[k : argnum, l : c] true), 466}{0} else (array[k : (741 % i)] (array[l : argnum, m : i] false))[{i}{0}]))
  return (if (! true) then (if (! e(true)) then {(array[n : h, o : i] b), sin(19.64)} else {(array[n : argnum, o : 341] b), (sum[n : i, o : h] a)}){0} else (array[n : c, o : [g, g][614][(if false then (h / m) else (if false then argnum else l)), (array[n : l, o : h] c)[l, c]]] b))
  let n = a
  return (array[o : c, p : argnum, q : (if (c == l) then (if true then i else 240) else args[h])] (array[r : argnum, s : h, t : o] j()))[(if (! (244 != h)) then (- argnum) else (- b[i])), (- {n, argnum}{1}), c][i, to_int(f((array[o : c, p : (- c), q : (i % m)] k))), to_int(atan(atan2(38.73, log(n))))]
}

show j()

let k = c
let {} = {((c + i) * to_int(86.29)), (if false then {818, {}} else {h, {}}), j()}{1}{1}
