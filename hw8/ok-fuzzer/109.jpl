write image (if (if false then {asin(28.81), (false && true)}{1} else (((324 * 898) < to_int(33.95)) && ((! false) || true))) then (array[a : {argnum, args}{1}[{argnum}{0}], b : 811] {atan((- 98.45)), (sum[c : argnum, d : (sum[c : argnum, d : a, e : argnum] c)] log(12.95)), pow((89.67 / 63.52), 88.47), pow(exp(10.01), (- 13.84))}) else (array[a : (- (if (! false) then argnum else (argnum % argnum))), b : to_int(log(sqrt(47.01)))] {{54.75, b}{0}, pow(exp(32.19), 52.77), pow((sum[c : a, d : a, e : b] 2.73), 34.29), 29.01})) to "a.png"

fn a() : bool {
  let {b} = (if a() then {atan2(tan(sqrt(81.99)), log(acos(47.53)))} else {cos(tan(67.04))})
  let c = asin(sqrt(atan2(atan(to_float(336)), log(to_float(argnum)))))
  assert ((if (to_float(argnum) != 21.42) then (- to_int(atan(b))) else (array[d : (sum[d : 576, e : 480, f : 417] argnum), e : 860, f : (- argnum)] e)[(array[d : 555] 133)[to_int(92.9)], {argnum}{0}, (if a() then argnum else 651)]) >= argnum), "d"
  assert {616, [(b > 35.24)]}{1}[527], "d"
  return (array[d : (argnum % (365 / 338)), e : 22] (if (! true) then {a()} else {false}))[{to_float(699), to_int(b)}{1}, (array[d : args[211], e : (- argnum), f : (- argnum)] d)[(- (- 568)), argnum, (sum[d : argnum] argnum)]]{0}
}

let b[c] = (if a() then {(! true), false, (array[b : argnum, c : argnum] args)}{2} else (array[b : (argnum * (argnum - 758)), c : argnum] [c]))[(if {(argnum + argnum), true, (! false)}{2} then {(sum[b : argnum, c : 125, d : argnum] d)}{0} else ((301 * argnum) - to_int(atan(43.44)))), (((array[b : argnum, c : argnum] argnum)[150, 277] * (if a() then (- 415) else (argnum - 280))) % (sum[b : to_int(96.61), c : ((argnum % argnum) * (- argnum)), d : (787 + to_int(57.56))] to_int(asin(96.04))))]
fn d() : {int[],bool,{float}} {
  let e[f, g] = (array[e : argnum, f : c, g : 234] {(array[h : argnum, i : c] 7.49)})[{argnum, c}{0}, (sum[e : c, f : [argnum, c, 14][c]] e), (if a() then (argnum + argnum) else (- (if true then c else c)))]{0}
  let {h} = {{false, {91.65}, d(){0}}, e, (a() || false)}{0}{1}
  let {i[j, k, l]} = {(array[i : ({889}{0} + f), j : c, k : {(c + 499)}{0}] argnum)}
  assert ((j % j) < c), "m"
  return {a(), (array[m : k, n : argnum, o : l] (if true then d() else d())), args}{1}[to_int((sum[m : (- f)] sin(53.48))), c, k]
}

fn e() : float {
  let f = to_int(e())
  let {{g}} = (if (! false) then [{{a()}}, {{false}}] else (array[g : (- (sum[g : argnum, h : f, i : 922] argnum))] {{a()}}))[(- (sum[g : (f % f), h : (- (if true then 359 else f))] argnum))]
  return (if (if a() then (if g then (array[h : 68, i : argnum] g) else (array[h : f, i : f] a()))[(array[h : argnum, i : c] i)[682, c], argnum] else ((sum[h : argnum, i : (sum[h : 811] c), j : (119 % f)] args[j]) < {f}{0})) then acos((pow((e() + 12.0), cos(e())) * (sum[h : f, i : 259, j : (if true then 845 else f)] cos(e())))) else (tan(log(cos(45.68))) / sqrt(72.2)))
  assert (! ((c * c) >= f)), "h"
  return log(to_float((sum[h : 277, i : argnum, j : to_int(e())] to_int(log(34.17)))))
}

let f = atan((array[f : (sum[f : (- argnum), g : 791, h : (sum[f : c, g : argnum] 61)] (f + g)), g : to_int((- e()))] tan(pow(21.48, e())))[(- (sum[f : (- 178)] (f * c))), (to_int((- 93.52)) / (if (c > c) then 599 else argnum))])
let g = (exp(e()) * ((if d(){1} then {f, c} else {85.91, argnum}){0} / e()))
fn h({  }) : {float,bool} {
  let i = asin(f)
  assert (if (if false then {false} else {true}){0} then (array[j : (98 / c), k : (if a() then to_int(e()) else (- argnum))] (array[l : 425] a())[c]) else (array[j : [argnum, argnum][(743 / 627)], k : {87}{0}] a()))[(if (c == c) then 987 else argnum), {e(), to_int(to_float(934))}{1}], "j"
  let j = d()
  return h((if false then {{}, argnum} else {(if true then {} else {}), argnum}){0})
  return (array[k : {(c - c)}{0}, l : (array[k : 389, l : c] l)[to_int(to_float(15)), to_int(i)], m : ((array[k : argnum, l : argnum] argnum)[584, to_int(i)] / c)] (array[n : l, o : 117, p : (if a() then 235 else m)] h({}))[to_int(log(24.88)), (if false then l else (k + c)), m])[(if false then c else (argnum * (argnum + (argnum - argnum)))), argnum, (array[k : (to_int(f) * c), l : argnum, m : c] (if (g == i) then (- 22) else 163))[c, ((argnum - (- c)) * (500 % 824)), (if false then (b[c] * c) else to_int((sum[k : 965, l : c, m : argnum] e())))]]
}

let i = to_int(pow(exp((atan(f) % 98.73)), atan2(sqrt(sqrt(e())), log(7.74))))
let j = argnum
let k[l] = args
let m[n, o, p] = {(((c % c) == k[argnum]) && (if true then true else a())), (array[m : argnum, n : argnum, o : to_int(cos(g))] log(g)), args}{1}
