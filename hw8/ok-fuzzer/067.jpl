time print "a"


let {a[b, c], d} = (if ((- (495 - argnum)) == 806) then (array[a : (- (if false then argnum else argnum)), b : 557, c : (array[a : 221, b : 45, c : argnum] b)[args[argnum], argnum, (sum[a : argnum] a)]] {(array[d : a, e : a] args), (sum[d : argnum, e : 5] d)}) else (array[a : argnum, b : 767, c : {false, 542}{1}] {(array[d : c, e : b] args), 449}))[to_int(sin(sin(exp(16.78)))), (if (548 <= 602) then (array[a : args[argnum], b : 981] (- argnum)) else (array[a : to_int(65.56), b : 391] b))[(- (if (! false) then (- 268) else (sum[a : 372, b : 889, c : 901] a))), (671 - (- (30 % 798)))], {argnum, (414 / to_int(30.91)), (- 375)}{1}]
show [([true][b] != ((if (! false) then true else (false && false)) || (! false))), (if (b >= c) then {argnum, c, (argnum > b)}{2} else (log(to_float(c)) > asin(exp(16.74)))), (array[e : d, f : (- (sum[e : argnum, f : argnum] d))] (if false then true else (! false)))[c, b]]

let e = (- (array[e : argnum] {argnum})[(if (argnum < b) then c else (- 585))]{0})
print "f"

fn f({ { g : int, h : int, i[j, k] : bool[,] } }) : float {
  let l[m] = (array[l : h] (array[m : d] args))[j]
  let {} = {acos(cos(72.1)), {g, {}}}{1}{1}
  return {{}, sqrt({17.57}{0}), atan((sum[n : m] 90.13))}{1}
  let {{n[o]}, p} = (if (argnum != (array[n : d, o : k] argnum)[j, c]) then {(if (array[n : c, o : 875] false)[g, 929] then {[e, d, d]} else {(array[n : 353] k)}), false} else (if ([argnum, k][706] <= m) then (if (! (if false then true else true)) then {{args}, false} else {{args}, true}) else {{args}, ((argnum == k) != (false && false))}))
  return log((- asin(to_float(m))))
}

let {{g[h], i}} = (array[g : argnum, h : ((argnum - d) % to_int(to_float(e))), i : e] {{args, 80.19}})[(if ((sum[g : (- argnum), h : e, i : c] d) != argnum) then (if ((e < 75) || (false && true)) then (argnum % 952) else 272) else e), (sum[g : to_int(sin(84.93)), h : (if (if (if true then false else false) then (! true) else true) then (- d) else c), i : (- 631)] b), 370]
let j[k, l] = (if (array[j : h, k : 990] false)[802, h] then (array[j : args[h], k : 444] (array[l : h, m : b] a)) else (array[j : argnum, k : e] (array[l : c, m : b] a)))[c, (sum[j : e, k : (if false then to_int(i) else (- e)), l : {778}{0}] c)][d, (if (if true then {false, c} else {true, d}){0} then (- {argnum, g, {}}{0}) else (if (false || true) then {argnum, b} else {c, b}){0})]
let m[n, o] = {i, tan([80.02][e]), (if (if (! true) then (! false) else (! true)) then {j, i}{0} else a)}{2}
fn p(q : {float}, { { { r : int[,][,,] }, s[t, u] : bool[,], v[w, x, y] : float[,,] }, z : {}[,], A : bool }) : int {
  let {B[C, D], {{}, E[F]}} = {m, {{}, {args}{0}}}
  let G = sqrt(asin(66.75))
  let {} = {}
  let H[I, J] = a
  return J
}

fn q() : bool {
  let {r[s, t], u[v, w, x], {{}}} = (if {((! false) && (! q())), [q()][e], l}{1} then (array[r : argnum, s : argnum] {a, (array[t : l, u : k, v : d] i), {{}}})[c, (- h)] else (if (! ((sum[r : c] 43.15) > i)) then {m, (array[r : n, s : o, t : b] acos(i)), {(if false then {} else {})}} else {j, (array[r : (o / l), s : d, t : b] sin(21.65)), {(if true then {} else {})}}))
  return (array[y : h, z : l] (h == c))[l, (if (! ((- v) != w)) then c else k)]
  let y[z, A] = j
  assert true, "B"
  return false
}

fn r(s[t] : {int,bool,int}[], u[v, w] : bool[,]) : {float} {
  let x = to_int(acos((if false then pow(cos(i), atan2(i, 78.48)) else (i * (- 37.84)))))
  let {y[z], A} = {s, ((acos(exp(i)) < sqrt(sin(i))) || (! {q()}{0}))}
  let B = e
  let {C[D], E[F, G], {}} = {(array[C : v, D : o, E : (if q() then t else n)] {g, m, {}}), A}{0}[v, h, t]
  return {(array[H : F, I : (d - c)] {i})[(- b), argnum], exp(log((- i)))}{0}
}

