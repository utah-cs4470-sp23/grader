assert (if (if (if (if (true || true) then false else (true && true)) then (acos(88.24) <= tan(65.25)) else (! (! true))) then [false][argnum] else {(if false then true else false)}{0}) then {((! false) || (811 > argnum)), asin(90.47), (false || true)}{0} else ((if (asin(64.04) != sin(60.33)) then ((sum[a : argnum] argnum) + (- argnum)) else {argnum, true}{0}) >= (sum[a : (array[a : 380, b : 501, c : 432] c)[(if false then argnum else argnum), (923 / argnum), argnum], b : argnum, c : argnum] (array[d : b, e : b] e)[113, 114]))), "a"
fn a(b : int, { { c : bool[,,][,,], d[e, f] : int[,] }, g[h] : int[][], { i : int, j : {} } }) : {{float},float[,,]} {
  let k[l, m, n] = {sin(log(asin(9.65))), (array[k : 572, l : (- args[621]), m : argnum] atan(acos(63.79)))}{1}
  let {} = (array[o : (argnum * 599), p : (- (if true then f else i)), q : h] j)[(array[o : 437, p : i] to_int(to_float(h)))[{b}{0}, (- 885)], l, n]
  let {o[p]} = (if ((((868 - l) != l) || false) && (h > n)) then {(array[o : 159, p : n] argnum)[i, m], {args}, n}{1} else (if {k, false}{1} then (array[o : argnum, p : (sum[o : h, p : f] n), q : b] {args})[763, (if (f >= b) then (- f) else n), h] else (if ((19.41 == 83.32) == false) then {(array[o : h] argnum)} else {args})))
  return {(array[q : n, r : (- (b + l)), s : g[m][962]] p), 40.76, {{69.7}, k}}{2}
  return {(if ({true, c, f}{0} || (! true)) then (array[q : 789, r : f] {10.14})[b, argnum] else (if (array[q : argnum] true)[h] then {asin(1.55)} else {k[argnum, h, n]})), {to_float(l), {m, k, p}}{1}{1}}
}

let {{b, {c[d]}}} = (if (! true) then {{argnum, {args}}} else {(if {{}, false, true}{1} then {args[22], {args}} else {(- argnum), {args}})})
let {{}, {}} = (array[e : (array[e : d, f : d] argnum)[(sum[e : argnum] 396), argnum]] (array[f : 950, g : (if false then argnum else 34), h : (- argnum)] {{}, {}}))[{tan(65.04), b, (if false then d else 209)}{1}][167, 821, to_int(cos(sqrt(tan(38.28))))]
fn e(f[g, h, i] : float[,,], j : int, k : bool) : float[] {
  assert false, "l"
  let l[m] = e((array[l : to_int(exp(99.13)), m : to_int(50.71), n : to_int(exp(acos(63.15)))] to_float(g)), (- g), k)
  return l
  assert (! ((acos(sin(23.87)) - pow(sin(81.64), l[m])) == sin(tan(26.72)))), "n"
  return e((array[n : b, o : g, p : c[b]] (array[q : o] f))[(if (! false) then i else d), h, b][{h, c[j], true}{1}], to_int(sqrt(log(sin(74.81)))), false)
}

let f[g, h, i] = {(if (if false then false else false) then c else (array[f : b] 181)), (array[f : b] (array[g : d, h : f, i : argnum] h))}{1}[(- b)]
fn j() : {float} {
  let k = [b, (((if (d <= h) then d else d) % (- i)) / {argnum, (array[k : b] b)}{0}), {{d}, (i != d), d}{0}{0}]
  return (array[l : argnum, m : b, n : (f[195, 184, d] % (- i))] {(if false then j() else j())})[g, h, argnum]{0}
  let l[m, n, o] = (if (if (asin(j(){0}) < pow(11.82, 41.86)) then ((h == b) == {j(), true}{1}) else ({j(), j(), false}{2} && ((- 698) != i))) then f else f)
  let p = m
  return j()
}

let {k, {}} = (if (argnum > argnum) then (array[k : b, l : h] {g, {}})[b, d] else {{argnum, argnum, d}{0}, {}})
show (- d)

fn l(m : bool, n : {float[,],bool[,,]}, o : bool) : float[,] {
  return {o, (array[p : d, q : h] n{0}), i}{1}[to_int((if (70.35 != 81.05) then sin(asin(2.48)) else pow(41.55, to_float(226)))), (- k)]
  assert ((log(28.75) + log((sum[p : g, q : argnum, r : 607] atan(14.11)))) < (if (atan2(j(){0}, to_float(357)) == sin(tan(30.92))) then exp((asin(8.04) - acos(27.08))) else atan2(tan(29.91), acos(j(){0})))), "p"
  let p[q, r] = (array[p : i, q : k] {l(m, n, false)})[to_int(to_float(g)), (d + h)]{0}
  let {{s[t, u, v], w, {{x}, y[z]}}, A[B, C, D]} = [{{(array[s : 783, t : h, u : 341] i), o, {j(), c}}, {f}{0}}][i]
  return p
}

let m = to_float(g)
let {n[o, p, q]} = {{{f}, g, cos(48.59)}{0}, j(), args}{0}
