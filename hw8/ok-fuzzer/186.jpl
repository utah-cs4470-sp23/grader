write image (array[a : (if (argnum <= (sum[a : argnum] a)) then (if true then argnum else (sum[a : argnum, b : 800, c : 736] 675)) else (sum[a : argnum, b : 471, c : 467] args[argnum])), b : argnum] (array[c : argnum, d : (sum[c : 464, d : argnum, e : argnum] b)] {acos(70.17), (- 62.52), 94.57, to_float(c)}))[437, 183] to "a.png"

let {a[b, c, d]} = (array[a : (- (sum[a : (741 / 34), b : (- 535), c : 728] c)), b : argnum, c : (if (! false) then (argnum / 616) else (- 930))] {(array[d : a, e : argnum, f : b] e)})[(sum[a : (sum[a : (- (sum[a : argnum, b : 282, c : 715] argnum))] 615), b : 220] {(if false then 923 else argnum), (array[c : 585] false)}{0}), (- 325), argnum]
fn e(f[g, h] : {bool,bool}[,], i : {int[,],bool,bool}, j[k, l] : float[,]) : bool[] {
  let m[n, o, p] = {atan2(to_float(c), (array[m : d, n : d, o : argnum] 85.88)[(- k), d, k]), [(array[m : k, n : c, o : c] 402), a, a][(- (if true then b else c))]}{1}
  let {q[r, s, t], u[v, w, x], {y, {}, z}} = {[{m}, {a}, {a}][(if (true && false) then argnum else (if false then p else k))]{0}, (array[q : c, r : (if (array[q : p, r : k, s : p] false)[n, k, d] then to_int(cos(28.46)) else (if (c >= g) then o else k)), s : 212] h), {i, (if false then (if true then {} else {}) else {m, {}}{1}), ((692 <= b) || ((d == o) || (true || false)))}}
  let A = true
  let B = b
  return (if (! A) then (if (! A) then {e(f, y, j)} else {(array[C : g] A)}) else {[false]}){0}
}

let f[g] = e((array[f : (if (c >= 468) then {a, d, b} else {a, argnum, d}){1}, g : 339] (if (true == true) then {(d <= argnum), false} else {false, (! false)})), {(array[f : to_int(exp(13.22)), g : argnum] (sum[h : (d + b), i : (b * c)] c)), [(true == true), (true && true)][(if true then d else (argnum / 725))], (exp(90.83) >= asin(to_float(b)))}, (array[f : b, g : (if (if true then (! true) else (if true then false else false)) then c else (args[d] - c))] pow(asin(to_float(f)), cos((42.38 + 42.81)))))
let h[i, j] = {(array[h : c, i : 748, j : (sum[h : 705, i : c] b)] (array[k : h, l : j] i))[(- c), c, 979]}{0}
let {k[l, m]} = {h}
time let n = c

let o = m
type p = float[,][]
write image (array[q : g, r : o] (if (if (if (b <= argnum) then (q != b) else (! false)) then (if false then f else f)[i] else (! (! true))) then {sqrt(to_float(i)), atan(30.79), 85.08, (asin(1.42) / 55.82)} else {acos(exp(59.2)), cos(cos(24.33)), to_float(g), atan(to_float(g))})) to "q.png"

let q = sin(asin(atan((sum[q : b, r : (d - j)] sin(74.89)))))
assert true, "r"
