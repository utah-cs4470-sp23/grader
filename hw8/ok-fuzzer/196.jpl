let {a[b, c, d], e} = (if ((- (- (- argnum))) < argnum) then (if (cos(cos(0.48)) <= (if false then acos(20.99) else pow(64.48, 57.31))) then {(array[a : (argnum - argnum), b : (- 890), c : argnum] args), tan(to_float(785))} else {(array[a : (- 668), b : (- argnum), c : (sum[a : argnum, b : argnum, c : argnum] 514)] [424, a, argnum]), atan2(asin(75.57), 70.25)}) else {(if (308 > 271) then (array[a : (sum[a : 333, b : argnum, c : 485] 830), b : argnum, c : (- 187)] args) else (array[a : (- argnum), b : 110, c : 752] [61, c])), to_float(argnum)})
fn f({ g[h, i, j] : float[,,] }, k[l, m, n] : {bool,int}[,,]) : {} {
  let o[p, q, r] = (array[o : l] (array[p : 566, q : m, r : h] a))[(b * 385)][d, i, i]
  let s[t, u] = (array[s : m, t : [{831}, {l}][i]{0}] argnum)
  let {v[w], x, {{}}} = {(if ((if true then false else false) != false) then {(array[v : b] c), b, {{}}} else {args, (sum[v : c] argnum), {{}}})}{0}
  let y[z] = [p]
}

let g = atan2(to_float(c), 52.13)
let h[i, j, k] = (array[h : (- argnum), i : (array[h : to_int(e)] {args, c})[(b - argnum)]{1}, j : (if (c != (- 514)) then argnum else c)] c)
let {l[m], {}} = (if (if (! (e < g)) then (if (i < j) then (true || true) else true) else true) then {(if (801 == b) then {args, {}} else {args, {}})} else {{(array[l : b] 24), {}}}){0}
fn n(o : bool[], p : float[], q[r] : bool[]) : float {
  let s[t] = (if (array[s : r, t : r] (if false then true else true))[c, (argnum - k)] then {l, 72.19, e} else (if (if (i <= j) then (false || false) else (false || true)) then {(array[s : k] argnum), e, g} else {(array[s : d] s), g, to_float(162)})){0}
  let u[v, w] = (array[u : l[t], v : r] to_float((array[w : (sum[w : argnum, x : j, y : v] v), x : i, y : (- d)] j)[k, d, m]))
  let x = pow({u, (sum[x : (sum[x : k] t)] (g % 45.24)), {acos(g), to_float(m)}}{1}, sin(e))
  let {y, z} = (if (! (array[y : j, z : r] false)[w, (if false then k else v)]) then (if false then {p, {t, d}} else {(array[y : r] x), {k, t}}) else (if (w != m) then {p, {m, k}} else {(array[y : c] x), {647, r}})){1}
  return tan(e)
}

fn o({ p : float }) : bool {
  return (if (if (! true) then (i != (sum[q : k, r : k, s : c] m)) else ((sum[q : j, r : b, s : c] q) > argnum)) then {(array[q : i, r : argnum, s : i] true), (sum[q : j, r : i, s : k] r)}{0} else (if (true && (argnum == b)) then (if (k > b) then (array[q : argnum, r : i, s : m] true) else (array[q : b, r : k, s : argnum] false)) else (array[q : (- k), r : (- k), s : (d / argnum)] true)))[j, j, k]
  let {q[r, s], {{t}, {}, u}} = {(array[q : {473, h}{0}, r : (sum[q : argnum] 762)] l[argnum]), (array[q : b, r : to_int((if false then 85.32 else 85.09))] {{j}, {}, false})[argnum, i]}
  let v = acos(asin(sqrt(pow(26.49, (- p)))))
  let w[x] = args
  return (array[y : (- h[c, d, b]), z : d, A : argnum] (if (false && u) then (array[B : s, C : y] true) else (array[B : c, C : b] u)))[(j * x), (if (if (s > x) then (if u then u else u) else true) then c else (- k)), t][x, (if (if ((true || true) == (u || u)) then false else ((u != false) || (u && u))) then argnum else (sum[y : k, z : s, A : m] (- argnum)))]
}

fn p({ q : int, r[s, t] : float[,][,] }) : int[,,][] {
  assert false, "u"
  let {} = (if (if (if (b >= q) then {a, e, true} else {a, e, false}){2} then (pow(acos(g), e) <= (array[u : s] g)[q]) else (if (d < c) then false else (q <= 57))) then (array[u : s, v : (sum[u : 919, v : s] q)] {{}, 5.82})[j, argnum]{0} else (if o({asin(g)}) then (if (! true) then (array[u : c, v : j, w : 526] {}) else (array[u : d, v : 201, w : i] {}))[k, d, {q, c}{0}] else {}))
  return (array[u : (- (if (m != b) then {137, i} else {c, d}){0})] (if (false != (! false)) then (if (u > q) then (array[v : b, w : j, x : c] h) else (array[v : u, w : j, x : q] h)) else (array[v : q, w : u, x : d] (array[y : m, z : c, A : argnum] x)))[h[to_int((if false then e else g)), (- k), b], u, (sum[v : to_int(atan(e))] j)])
  let {u, v[w, x, y], z} = {r, [{g, h, t}][d]}{1}
  return (if {true}{0} then (array[A : argnum] (if (if (true == false) then false else false) then (array[B : i, C : j, D : w] h)[(sum[B : c] x), (if false then t else d), argnum] else v)) else {p({y, r})}{0})
}

fn q(r[s] : float[]) : {{float,int}} {
  let t = c
  return (if (if o({log(e)}) then (! (array[u : s, v : 802] false)[(- b), 990]) else (c != argnum)) then (if (if (if (! false) then false else false) then (if true then true else (! true)) else {true}{0}) then q((if false then [e] else [e])) else (if (tan(g) > e) then {{g, d}} else q([g]))) else {to_float(d), (if (m < c) then q(r) else q(r))}{1})
  let u = to_int(tan(atan(cos(69.88))))
  let v = (sum[v : k, w : (if ((! (g >= e)) || {false}{0}) then t else argnum)] pow(atan2(sqrt(sin(g)), atan(sqrt(e))), (if (array[x : i] false)[(if true then u else s)] then g else sqrt(acos(97.54)))))
  return (array[w : i, x : b] (array[y : w, z : j, A : u] q(r)))[m, to_int((sum[w : c, x : d, y : m] to_float(k)))][j, m, to_int(log(acos(sin(g))))]
}

let r[s, t] = (if (! (array[r : i, s : k, t : argnum] true)[(if false then j else m), j, j]) then (array[r : k, s : (sum[r : i, s : c, t : j] j), t : i] (if (j == d) then (array[u : argnum, v : c] e) else (array[u : c, v : t] 64.83))) else (array[r : m, s : j, t : i] (array[u : k, v : argnum] atan2(e, g))))[(if ((! true) || (d == i)) then (array[r : l[b], s : to_int(g)] b) else (array[r : c, s : (- c)] (k / r)))[to_int(log(tan(g))), {m, m, b}{0}], m, (sum[r : (j - argnum)] ((- j) / ((c + r) % b)))]
let u[v] = (if (if ((t == i) != true) then false else (argnum >= t)) then (if true then (if (! false) then (array[u : m, v : 110] l) else (array[u : s, v : i] args)) else (array[u : 516, v : h[argnum, j, d]] args)) else (array[u : j, v : k] l))[395, (if (if ((j == c) && false) then (if (! false) then true else (m < k)) else (m < (- k))) then b else argnum)]
time let w[x] = args

