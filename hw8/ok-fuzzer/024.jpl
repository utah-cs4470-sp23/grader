fn a(b : float, c : bool, d[e, f] : int[,]) : {{},{}}[,,] {
  let g = asin(asin(atan(b)))
  let h[i, j] = (array[h : argnum, i : argnum] true)
  let k = to_float(i)
  return a(exp(atan(acos(exp(k)))), (if (c || ((e <= argnum) == (j > argnum))) then (atan2(log(76.11), to_float(12)) >= (- (- k))) else c), (if (if c then false else true) then (array[l : (e / argnum), m : (if false then 882 else argnum), n : d[j, j]] d) else (array[l : f, m : (f % j), n : (sum[l : j, m : argnum] j)] d))[e, (args[(f / e)] % (i * e)), (if c then (array[l : j, m : j] j) else (array[l : e, m : j] argnum))[{j, c}{0}, i]])
  return (array[l : 104, m : f, n : (if c then (if c then argnum else j) else (if c then f else to_int((- k))))] (if {c, true}{0} then (array[o : (n % m), p : m] {{}, {}}) else (array[o : to_int(g), p : (- i)] {{}, {}}))[(- (sum[o : e, p : to_int(89.17), q : 488] argnum)), 725])
}

let b[c, d] = (if {{sqrt(76.7), argnum}, (argnum != 431), sqrt(89.96)}{1} then {((argnum / 680) * argnum), (array[b : 466, c : (726 + argnum)] argnum)}{1} else (array[b : (sum[b : {393}{0}] (b / 59)), c : (- 833)] 605))
let {{e[f], g[h], {i[j]}}} = {{[args, [237], args][args[c]], (array[e : to_int(15.81), f : argnum] args)[c, (- c)], (if (false == (! false)) then {[args, args, args]} else {(array[e : 495] args)})}}
let k = (d == ([(h % h), d][j] + h))
let l = d
let m = {(array[m : c, n : l, o : (- (argnum % c))] (if k then i[f] else e)[l])}
let {n[o], p[q], r} = {[(- h), (sum[n : {c}{0}] h)], {(if k then e else (array[n : 435] argnum)), cos(sqrt(38.92)), h}{0}, [e]}
time let {{s[t, u, v], w, {x}}, {y[z, A, B], {C, D[E, F]}, G}} = {{a(6.86, (k && false), (array[s : argnum, t : 1] s)), cos(tan(96.99)), (array[s : h, t : j, u : 430] m)[(q / argnum), argnum, (if k then f else l)]}, {(array[s : 115, t : o, u : (- l)] j), (if (k != k) then {j, b} else {h, b}), r}}

let {{H}, I[J], {}} = (if (array[H : B, I : F, J : q] (array[K : argnum] false))[j, c, B][41] then {{y, m}{1}, e, {(if false then {} else {})}{0}} else (if (! false) then (if k then {m, n, {}} else {m, g, {}}) else {(if (! true) then m else m), e, {{}}{0}}))
let K[L, M, N] = x
fn O(P[Q, R] : int[,]) : {} {
  return O((if (! false) then {(array[S : j, T : h] t), J}{0} else P))
  return O({(array[S : 114, T : L, U : l] D)}{0}[q, o, argnum])
  assert true, "S"
  let {} = (if {k, o}{0} then {(array[S : h, T : L] {}), (k && k)} else {(array[S : R, T : j] {}), (! false)}){0}[t, C]
}

time let P[Q, R, S] = H

