fn a(b[c, d] : int[,], {  }, e : bool[,,]) : float {
  let {{}} = {(if true then (array[f : d, g : (- d)] {})[(- (argnum * d)), (if true then argnum else (- argnum))] else (if ((if false then c else 297) >= argnum) then (if (! true) then (if true then {} else {}) else {}) else (array[f : c, g : 128] {})[(- c), (sum[f : d, g : 294] 871)]))}
  let {f, {{}, {}, {g}}} = (if true then {d, {(array[f : argnum] {})[(argnum / c)], (array[f : d] {})[d], {{args, c, b}}}} else {to_int(to_float(d)), {(array[f : c, g : 249] {})[(- 38), argnum], (if false then {} else {}), {{args, argnum, b}}}})
  assert (f <= (sum[h : (- (if (! true) then argnum else argnum)), i : c] ({c}{0} % i))), "h"
  assert (if (! ((c < d) && (true && false))) then (if (false == (c != f)) then {argnum, [d], e[f, argnum, f]} else {f, [f, argnum, c], false}) else (array[h : argnum, i : (- c), j : f] {207, args, false})[(- (sum[h : f] f)), (if (true && true) then c else c), (- (c + c))]){2}, "h"
  return atan2((array[h : d, i : f, j : f] (array[k : 921, l : i] 29.8))[(array[h : f, i : d, j : c] h)[argnum, argnum, 367], argnum, argnum][d, (if {true}{0} then (sum[h : b[argnum, c], i : (d - 350), j : d] d) else (- argnum))], atan(pow(asin(to_float(117)), atan(acos(43.07)))))
}

fn b(c[d, e] : float[,]) : bool {
  assert (d == (if b(c) then (if (e == argnum) then (array[f : d, g : e] e) else (array[f : argnum, g : e] e)) else (array[f : d, g : argnum] g))[(if (if (argnum != d) then (d < argnum) else (559 < e)) then d else e), 705]), "f"
  assert (if (array[f : (array[f : 38, g : e, h : 646] e)[argnum, e, e], g : ((- e) % e)] [true][args[709]])[(array[f : (e % 66), g : argnum, h : argnum] d)[(array[f : d, g : argnum, h : d] d)[e, (- 440), argnum], ((- e) % (sum[f : 459, g : d, h : argnum] g)), (if (821 == argnum) then (- e) else e)], (sum[f : d] d)] then {false}{0} else b((if ((true || true) != false) then c else (array[f : e, g : 91, h : d] c)[e, 950, to_int(1.79)]))), "f"
  let f = {atan(atan((tan(94.12) * cos(36.39))))}
  let g[h, i, j] = (if b(c) then (array[g : (array[g : e, h : e] d)[(d - (- 165)), (sum[g : d] (argnum * argnum))], h : (array[g : (if false then d else 79), h : (- argnum)] argnum)[d, d], i : e] sqrt({e, d, 78.73}{2})) else (array[g : to_int(cos(cos(3.71))), h : (array[g : 618, h : (if true then argnum else 711), i : (if true then d else d)] (- g))[argnum, argnum, (- (sum[g : 264] g))], i : d] (sqrt(asin(10.65)) % tan(86.83))))
  return b((array[k : (if false then (array[k : j, l : h] j) else (array[k : d, l : argnum] e))[e, i], l : d] 85.21))
}

fn c() : float {
  let {d, e} = [(array[d : argnum, e : (if false then argnum else 938)] {true, e})[(if false then 727 else to_int(58.19)), {437, 371, c()}{1}]][(array[d : (- (if false then argnum else argnum)), e : ((- argnum) % to_int(26.0)), f : (- argnum)] args[(e + d)])[(array[d : argnum, e : argnum, f : argnum] f)[115, (- 553), to_int(exp(c()))], argnum, (sum[d : argnum, e : (325 + (- 572))] to_int(sin(c())))]]
  return a((if ({true}{0} == ((sum[f : e, g : argnum, h : argnum] 686) <= e)) then (array[f : e] (array[g : e, h : e] 642))[(- e)] else {(array[f : 458, g : e] f)}{0}), {}, (if ((! false) == (! d)) then {(array[f : e, g : argnum, h : e] true)} else {(array[f : argnum, g : argnum, h : e] d)}){0})
  let f[g, h] = (if (atan(sqrt(to_float(e))) == {sqrt(87.27), (- c()), args}{1}) then (array[f : to_int(acos(c())), g : (- (if d then argnum else argnum))] (608 == e)) else (array[f : (sum[f : (if (false || false) then argnum else (argnum * argnum))] (array[g : f, h : argnum, i : argnum] h)[(sum[g : 872, h : f, i : 72] f), f, 647]), g : (- argnum)] ((! d) != b((array[h : f, i : 956] 22.7)))))
  let {{i[j], {}, k[l, m]}, n[o, p]} = (array[i : 437] {{args, {}, f}, [f, f][265]})[g]
  return cos(c())
}

let d[e, f, g] = (array[d : (sum[d : args[457]] (sum[e : 894] d)), e : argnum] {e, (array[f : e, g : argnum, h : e] e)})[(if (array[d : 348] true)[48] then (if false then 681 else 737) else to_int(c())), 138]{1}
fn h(i[j] : {bool,bool,int}[], k[l, m] : {bool,int,int}[,], n : bool) : float[,,] {
  let o[p] = (array[o : e] i)[(array[o : (f - argnum), p : to_int(atan(85.06))] argnum)[(- argnum), (if n then l else (519 - (- argnum)))]]
  let {{}, q[r, s, t], u} = {((g < g) || n), {(g + p), {{}, d, m}}}{1}{1}
  let v = 86.41
  return h(o, (if false then [k, (if true then k else k)] else (if (18.41 != c()) then [k, k, k] else (array[w : g] k)))[g], {(array[w : e, x : e] true)}{0}[(if (true != false) then {e, q} else {s, q}){0}, l])
  return (array[w : f, x : g, y : (- e)] v)
}

let i = exp(pow((sum[i : f, j : (if (e <= 272) then (sum[i : 710] argnum) else f)] atan(tan(2.4))), cos(c())))
show (if (false && b((array[j : (- 843), k : 184] c()))) then a((array[j : argnum, k : ((- f) % g)] (if (! true) then (- f) else (sum[l : j, m : k] e))), (if (array[j : argnum] false)[to_int(i)] then (if (f >= f) then {} else {}) else (if true then {} else {})), (array[j : (- argnum), k : 992, l : e] (j == f))) else a({[e, g, argnum], (array[j : e, k : g] j)}{1}, (array[j : g, k : f] {})[678, (- argnum)], {(array[j : argnum, k : g, l : g] false), args, false}{0}))

write image [(array[j : g, k : 712] {c(), tan(c()), exp(i), (- 22.57)})][((to_int(26.53) * to_int(asin(72.64))) % 294)] to "j.png"

let {j, k[l, m, n], o} = (array[j : (- (- f)), k : 133, l : ((f - argnum) * (- argnum))] {{true, d, l}, false})[735, (array[j : (if false then f else e), k : argnum] g)[f, (if (i != i) then argnum else (- 972))], (sum[j : d[(f * 728), (- 775), 965], k : 394] (array[l : argnum, m : g, n : 787] argnum)[(f % k), to_int(c()), (sum[l : e] j)])]{0}
type p = {float,int,{{bool,float,float}}[][,]}
print "q"

assert {sin((- i)), {f, j}}{1}{1}, "q"
