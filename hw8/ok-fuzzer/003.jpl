show argnum

fn a(b[c] : int[]) : {float,bool} {
  let d = log((array[d : args[(sum[d : argnum, e : 653] c)], e : argnum, f : (if (426 > 678) then argnum else 148)] atan(to_float(argnum)))[to_int((exp(23.77) / 23.43)), c, argnum])
  let e = a(b)
  let {f[g], h} = (array[f : (- (- 208))] (array[g : (sum[g : 486, h : c] 358), h : f, i : (f - 43)] {args, h}))[{exp(d), to_int(d)}{1}][(if (sqrt(log(d)) != to_float(argnum)) then (if (if (true == true) then false else (if false then false else true)) then b[to_int(d)] else 374) else c), (if (! ((argnum != argnum) || false)) then (- to_int(e{0})) else (if (if (! false) then (if true then true else false) else (! true)) then {argnum}{0} else c)), (if [(if true then true else true), (d < 70.87), (926 == c)][(args[argnum] * (sum[f : c, g : argnum] f))] then c else (array[f : to_int(d), g : 140] g)[(if (if true then false else false) then to_int(36.65) else c), 334])]
  let i[j, k] = {args[h], (array[i : (sum[i : c, j : g] i), j : c, k : h] (array[l : j, m : j] k))}{1}[(- (if (argnum == argnum) then f else f)[(if (! false) then 398 else h)]), (- (sum[i : c, j : (- h)] j)), {args}{0}[(if (c > (g + 576)) then 403 else h)]]
  return a(args)
}

print "b"

fn b({  }, c[d, e] : float[][,], f : bool[,]) : {bool} {
  return (array[g : e, h : 409, i : e] (if ((argnum == 742) || (! false)) then {true} else (if (if true then false else false) then {false} else b({}, c, f))))[(if b((if false then {} else {}), c, (if false then f else f)){0} then (if (289 > argnum) then (sum[g : d, h : (sum[g : 583, h : argnum] argnum), i : (if false then d else 40)] (- e)) else 712) else (sum[g : (- argnum)] argnum)), (- d), argnum]
  let g[h] = (array[g : 510] (sum[h : (- (array[h : 483, i : 436, j : d] j)[(- g), args[g], (267 - d)]), i : e] d))
  let {} = {}
  assert (array[i : 967, j : argnum] (array[k : e, l : argnum, m : 970] f))[e, (- 998)][99, {g}{0}[[h, argnum, d][92]], argnum][argnum, ((- (e / e)) % (sum[i : 473, j : h, k : {e}{0}] e))], "i"
  return (if ((- (array[i : d, j : e] e)[args[554], h]) != to_int(acos(to_float(argnum)))) then {(to_int(16.24) == (sum[i : (10 * e), j : argnum] (if false then 170 else e)))} else b({{}, to_float(140)}{0}, c, {(array[i : e, j : argnum] false), g, (argnum * h)}{0}))
}

let {c[d, e]} = {(if ((array[c : argnum, d : 733, e : 582] d)[(sum[c : argnum, d : argnum] c), (argnum - argnum), (if false then 562 else argnum)] != argnum) then (array[c : (sum[c : 923, d : to_int(37.56), e : 738] (if true then c else d)), d : (sum[c : argnum, d : argnum, e : (sum[c : argnum, d : argnum] d)] (sum[f : e] argnum))] d) else (if (log(10.06) < to_float(argnum)) then (if true then (array[c : 259, d : argnum] c) else (array[c : argnum, d : argnum] c)) else (array[c : (argnum * argnum), d : 175] c)))}
fn f(g : float, h : int) : bool {
  return (h != 824)
  let {i, j[k, l]} = (if (((d <= 923) || f((sum[i : argnum, j : d, k : h] 79.25), h)) || (! (! (if false then false else false)))) then (if (true == f(sin(0.75), 70)) then (array[i : e, j : (- 499), k : (- h)] {676, c})[to_int(log(14.75)), d, e] else {(- (e - d)), (array[i : 959, j : e] (875 + argnum))}) else (if (! (if false then (d >= 913) else false)) then (if (g >= exp(g)) then (if true then {d, c} else {d, c}) else {(argnum + 33), c}) else (array[i : (if true then 559 else d), j : 138] {j, c})[(if true then (- e) else (sum[i : argnum, j : 668, k : argnum] k)), (if (false && false) then (- d) else d)]))
  let m = (if (argnum > d) then g else asin(atan2(log(62.18), (sum[m : argnum, n : (sum[m : argnum] h), o : e] (- 83.12)))))
  let n[o] = [(if (if (argnum != h) then (m <= g) else (! false)) then a(args) else {to_float(d), (true || true)}){0}]
  return ((m % {sqrt(3.12), o}{0}) == pow(g, pow((- sqrt(m)), sqrt(19.61))))
}

let g[h, i] = (array[g : ((sum[g : argnum] e) - (if (if (44.47 <= 0.69) then f(4.86, e) else (true != true)) then (- d) else e)), h : d] [args, (array[i : d, j : (- 73), k : e] args)[512, 238, g]])
let j[k, l, m] = (if (! true) then (array[j : (if {true}{0} then e else (sum[j : (- 354)] (sum[k : e, l : e] argnum))), k : {d}{0}, l : e] log(exp(sqrt(59.49)))) else (array[j : i, k : h, l : ((- e) / 159)] (if (true || false) then {75.39} else {3.64}){0}))
let {} = [(if false then {{}, 64.17, m} else {{}, 58.49, argnum})][l]{0}
let n[o, p] = (if ((if {false}{0} then (cos(17.87) < 97.81) else (k != d)) || f(cos(21.58), (- m))) then {{c}, cos(82.57)}{0}{0} else c)
show sin(asin(exp(to_float(p))))

print "q"

