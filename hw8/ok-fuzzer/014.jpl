let {{a[b], {}, c}} = {{{(if false then args else args), {}, 21.14}}}{0}
fn d(e : float[], {  }) : float {
  assert false, "f"
  let f = sqrt(atan2(acos(tan(log(c))), to_float(to_int((c * c)))))
  let g = {acos(atan2(90.62, c)), tan(c), {(if false then args else args), (! true), 49.35}}{2}{1}
  let {} = (if (((- f) > 49.19) && g) then (array[h : argnum, i : ((if true then 291 else b) % to_int(21.4))] (if (! true) then {} else (if g then {} else {}))) else (array[h : 120] (array[i : argnum, j : b] {}))[(argnum % b)])[b, ([to_int(51.35)][to_int(asin(c))] + (if (g && g) then args else [303, b, b])[(sum[h : argnum, i : (- argnum)] b)])]
  return (- log(f))
}

let {e[f, g, h], {i[j]}, {k[l], m[n, o, p], {}}} = {48.98, {(array[e : (if true then 722 else b), f : b, g : (188 / b)] 6.43), (if (argnum > 941) then {a} else {a}), {a, (array[e : argnum, f : 622, g : b] f), (if false then {} else {})}}, (if (array[e : argnum, f : argnum, g : argnum] true)[225, (argnum / argnum), b] then {} else {a, args, {}}{2})}{1}
time let q = acos(atan(39.06))

assert true, "r"
let r[s] = {argnum, args, o}{1}
show to_float((sum[t : h, u : to_int(tan((- c))), v : s] (s + (to_int(q) % argnum))))

let t[u, v, w] = (array[t : to_int(to_float(n)), u : (if ((if (c > 47.71) then (b <= 391) else (! false)) == false) then f else b), v : g] c)
let x[y] = r
fn z(A : int, B : float[,][,], {  }) : bool {
  let {{}, {C[D, E]}} = {(if true then (array[C : s, D : A, E : j] {}) else (if false then (array[C : l, D : h, E : l] {}) else (array[C : o, D : u, E : b] {})))[w, (if z(b, B, {}) then (if true then h else f) else w), s], [{B}, {B}, {(if false then B else B)}][s]}
  let F[G, H] = (array[F : (sum[F : j, G : (h * l)] b), G : u, H : l] {a, C, o})[p, f, D]{1}
  return z(n, F, (if (! (D != l)) then (if (true && true) then (array[I : b] {}) else (array[I : o] {}))[h] else (if {l, A, false}{2} then {} else {args, q, {}}{2})))
  return {(! (! (true && false))), F}{0}
  return (false || (false && z(argnum, B, {})))
}

let A[B] = [r, (array[A : (j + n), B : argnum] (array[C : y, D : b] a))[s, o][y, argnum]]
fn C({ { { D[E, F] : bool[,] }, G[H] : bool[] }, { I : int[,,], J[K] : int[,,][] }, L[M, N] : float[,] }, O[P, Q] : float[][,]) : float {
  let R[S, T] = O
  let {U} = (if (! ((- exp(q)) == {c}{0})) then (if (acos(tan(66.34)) <= atan2((- 62.96), to_float(s))) then (if (if (n != v) then (false || false) else (if false then false else false)) then {f} else {o}) else {{p}}{0}) else {g})
  let V = s
  let W = (sum[W : (g / p), X : Q] p)
  return asin(atan2((sum[X : W] sin(38.0)), (if (y != u) then (- 51.01) else atan2(pow(c, q), e[f, o, S]))))
}

