type a = {float,float}
type b = bool
print "c"

print "c"

fn c({ { {  }, d : a[] }, e[f] : {a,int,a}[] }, g[h, i] : bool[,]) : bool[,] {
  return (if (if (true && (f > f)) then (array[j : (argnum - 244), k : argnum, l : i] true) else (array[j : argnum, k : f, l : (- h)] true))[((- h) / ((sum[j : h] argnum) - (if false then argnum else i))), f, (to_int(exp(74.34)) % (- (h / h)))] then g else c({(if (h != f) then {{}, d} else {{}, d}), e}, {(array[j : h, k : i] true), sqrt(35.98), (! true)}{0}))
  let {{j, {k}, {}}, {{l, m[n, o, p]}, {}}, {{}}} = {{(array[j : f, k : i, l : (- argnum)] f)[(if (h == argnum) then (- 986) else 315), (argnum * h), (if (i < 242) then i else (- argnum))], (array[j : h] {44.33})[((argnum - i) + (- i))], {{}}{0}}, {{true, (array[j : (if false then f else argnum), k : (h % f), l : 240] 5.19)}, (array[j : f, k : (i % argnum), l : 266] {})[f, f, to_int(43.02)]}, {(if false then {{}} else {{}})}{0}}
  let {} = {(array[q : (if true then h else h), r : (argnum - o)] {})}{0}[i, n]
  assert (! (true && ((if (f >= p) then f else j) == argnum))), "q"
  return (if (! false) then (array[q : (n * n)] {g})[p]{0} else c({{{}, d}, e}, (if (! l) then g else (array[q : 382, r : j] l))))
}

time let d[e, f, g] = (if (array[d : (argnum * argnum), e : argnum, f : to_int(36.56)] (f == argnum))[{argnum, argnum}{1}, argnum, 705] then (if (! (! false)) then (array[d : (- argnum), e : (- argnum), f : argnum] (array[g : d, h : d, i : 971] f)) else (array[d : (sum[d : argnum] argnum), e : (argnum * 191), f : 818] (array[g : 581, h : argnum, i : argnum] h))) else (if (761 != argnum) then (array[d : argnum, e : 829, f : (- 505)] (array[g : argnum, h : argnum, i : 465] 894)) else (array[d : (argnum % 459), e : (argnum - 461), f : (- argnum)] (array[g : d, h : d, i : d] 306))))

let h = sin(atan2(log(log(atan(54.44))), cos(atan2(71.32, exp(83.49)))))
time let i[j, k] = (array[i : (array[i : argnum, j : f] e)[(sum[i : e, j : 42] i), e], j : argnum, k : (if (! true) then 490 else argnum)] (array[l : argnum, m : 261] (array[n : 947, o : i] f)))[(if (if (g == g) then (105 < argnum) else (argnum == 240)) then (- to_int(54.72)) else to_int((h + 9.15))), (sum[i : g, j : (array[i : e] e)[g]] (if (false && false) then (- f) else (e / j))), e]

let l[m, n, o] = (if (if (! {false, argnum}{0}) then ((true && (710 <= k)) && {true, i, true}{2}) else true) then (array[l : (if false then (if false then 942 else j) else (sum[l : g, m : e] (e * e))), m : (array[l : argnum, m : f] args)[413, args[e]][g], n : (sum[l : i[527, 280][(if true then e else f), j], m : (- e)] 862)] k) else (if (if (f == 744) then false else (false && false)) then (if (argnum > k) then d else d) else (if (argnum > e) then (if false then d else d) else d))[e, args[argnum], e])
fn p(q[r, s] : int[,], t : a) : float {
  return {(if true then (array[u : g, v : 926, w : r] h) else (array[u : e, v : m, w : j] h)), j, d[n, (n - argnum), o]}{0}[(n - 330), to_int(atan2(cos(sin(h)), sin(asin(53.95)))), e]
  let u[v, w, x] = (array[u : ((sum[u : j, v : f, w : f] v) % o), v : argnum] {d, l, [args]})[s, (array[u : (913 + o), v : (sum[u : e, v : o] k)] e)[s, g]]{1}
  let y = acos(to_float((v / 891)))
  assert (if false then (83.33 == sin(y)) else (if (! false) then (if ((! true) || (if true then true else true)) then true else ((true && false) || (f > e))) else (log(43.4) != acos(acos(60.63))))), "z"
  return exp(pow(81.2, tan(p(q, (if true then t else t)))))
}

let q = l
type r = float[,]
