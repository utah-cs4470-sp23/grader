(ShowCmd (VarExpr (ArrayType (IntType) 1) args))
(TimeCmd (LetCmd (ArgLValue (ArrayArgument a b)) (ArrayLoopExpr (ArrayType (BoolType) 1) a (UnopExpr (IntType) - (SumLoopExpr (IntType) a (IntExpr (IntType) 569) b (VarExpr (IntType) argnum) c (CallExpr (IntType) to_int (FloatExpr (FloatType) 69)) (VarExpr (IntType) a))) (UnopExpr (BoolType) ! (BinopExpr (BoolType) (FloatExpr (FloatType) 65) >= (CallExpr (FloatType) sin (FloatExpr (FloatType) 50)))))))
(ReadCmd "c.png" (VarArgument c))
(PrintCmd "d")
(WriteCmd (ArrayLoopExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) d (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType)) (UnopExpr (IntType) - (SumLoopExpr (IntType) d (VarExpr (IntType) argnum) e (VarExpr (IntType) b) (VarExpr (IntType) d)))) 0) e (ArrayIndexExpr (IntType) (IfExpr (ArrayType (IntType) 2) (BinopExpr (BoolType) (CallExpr (IntType) to_int (FloatExpr (FloatType) 91)) == (VarExpr (IntType) b)) (ArrayLoopExpr (ArrayType (IntType) 2) d (IntExpr (IntType) 888) e (VarExpr (IntType) argnum) (IntExpr (IntType) 296)) (ArrayLoopExpr (ArrayType (IntType) 2) d (CallExpr (IntType) to_int (FloatExpr (FloatType) 15)) e (IntExpr (IntType) 345) (VarExpr (IntType) d))) (UnopExpr (IntType) - (IntExpr (IntType) 657)) (CallExpr (IntType) to_int (ArrayIndexExpr (FloatType) (ArrayLoopExpr (ArrayType (FloatType) 1) d (VarExpr (IntType) b) (FloatExpr (FloatType) 50)) (SumLoopExpr (IntType) d (VarExpr (IntType) b) (VarExpr (IntType) d))))) (IfExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (BinopExpr (BoolType) (CallExpr (FloatType) log (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 82))) >= (CallExpr (FloatType) atan2 (CallExpr (FloatType) tan (FloatExpr (FloatType) 74)) (CallExpr (FloatType) log (FloatExpr (FloatType) 75)))) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (CallExpr (FloatType) pow (FloatExpr (FloatType) 37) (FloatExpr (FloatType) 41)) (UnopExpr (FloatType) - (FloatExpr (FloatType) 92)) (UnopExpr (FloatType) - (FloatExpr (FloatType) 16)) (FloatExpr (FloatType) 83)) (IfExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (UnopExpr (BoolType) ! (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType)))) (ArrayIndexExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) c) (VarExpr (IntType) e) (SumLoopExpr (IntType) f (VarExpr (IntType) e) (VarExpr (IntType) d))) (ArrayIndexExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) c) (VarExpr (IntType) e) (VarExpr (IntType) d))))) "d.png")
(LetCmd (TupleLValue (ArgLValue (VarArgument d)) (ArgLValue (ArrayArgument e f g))) (TupleIndexExpr (TupleType (BoolType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)) (TupleIndexExpr (TupleType (TupleType (BoolType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))) (TupleLiteralExpr (TupleType (TupleType (TupleType (BoolType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))) (IntType) (IntType)) (TupleLiteralExpr (TupleType (TupleType (BoolType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))) (TupleLiteralExpr (TupleType (BoolType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)) (FalseExpr (BoolType)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) c))) (IntExpr (IntType) 739) (IntExpr (IntType) 469)) 0) 0))
(FnCmd h ((TupleBinding (TupleBinding (VarBinding (ArrayArgument i j k) (ArrayType (ArrayType (FloatType) 3) 2)) (TupleBinding (VarBinding (ArrayArgument l m) (ArrayType (IntType) 1))) (TupleBinding (TupleBinding (VarBinding (VarArgument n) (BoolType)) (VarBinding (VarArgument o) (BoolType)) (VarBinding (ArrayArgument p q r s) (ArrayType (ArrayType (IntType) 1) 3))) (VarBinding (ArrayArgument t u v) (ArrayType (FloatType) 2)) (TupleBinding (VarBinding (VarArgument w) (ArrayType (ArrayType (IntType) 3) 3))))) (TupleBinding (VarBinding (ArrayArgument x y) (ArrayType (TupleType (TupleType)) 1)) (VarBinding (VarArgument z) (BoolType))) (TupleBinding))) (ArrayType (FloatType) 3) (LetStmt (ArgLValue (VarArgument A)) (CallExpr (IntType) to_int (CallExpr (FloatType) sqrt (CallExpr (FloatType) cos (BinopExpr (FloatType) (FloatExpr (FloatType) 65) - (CallExpr (FloatType) cos (FloatExpr (FloatType) 17))))))) (ReturnStmt (IfExpr (ArrayType (FloatType) 3) (BinopExpr (BoolType) (BinopExpr (BoolType) (VarExpr (IntType) m) >= (VarExpr (IntType) b)) || (VarExpr (BoolType) n)) (ArrayLoopExpr (ArrayType (FloatType) 3) B (VarExpr (IntType) A) C (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) A))) D (VarExpr (IntType) b) (SumLoopExpr (FloatType) E (VarExpr (IntType) argnum) F (VarExpr (IntType) argnum) G (VarExpr (IntType) C) (CallExpr (FloatType) sin (FloatExpr (FloatType) 13)))) (IfExpr (ArrayType (FloatType) 3) (UnopExpr (BoolType) ! (ArrayIndexExpr (BoolType) (VarExpr (ArrayType (BoolType) 1) a) (VarExpr (IntType) j))) (ArrayLoopExpr (ArrayType (FloatType) 3) B (VarExpr (IntType) A) C (VarExpr (IntType) A) D (IntExpr (IntType) 919) (CallExpr (FloatType) tan (CallExpr (FloatType) to_float (VarExpr (IntType) A)))) (TupleIndexExpr (ArrayType (FloatType) 3) (TupleLiteralExpr (TupleType (ArrayType (FloatType) 3)) (ArrayLoopExpr (ArrayType (FloatType) 3) B (VarExpr (IntType) k) C (VarExpr (IntType) u) D (VarExpr (IntType) y) (FloatExpr (FloatType) 61))) 0)))) (LetStmt (ArgLValue (ArrayArgument B C D)) (VarExpr (ArrayType (ArrayType (FloatType) 3) 2) i)) (LetStmt (ArgLValue (ArrayArgument E F)) (VarExpr (ArrayType (BoolType) 1) a)) (ReturnStmt (ArrayLoopExpr (ArrayType (FloatType) 3) G (VarExpr (IntType) s) H (VarExpr (IntType) j) I (BinopExpr (IntType) (CallExpr (IntType) to_int (CallExpr (FloatType) log (CallExpr (FloatType) to_float (VarExpr (IntType) C)))) * (IfExpr (IntType) (FalseExpr (BoolType)) (VarExpr (IntType) D) (VarExpr (IntType) F))) (CallExpr (FloatType) acos (CallExpr (FloatType) atan2 (CallExpr (FloatType) sqrt (UnopExpr (FloatType) - (FloatExpr (FloatType) 20))) (CallExpr (FloatType) pow (SumLoopExpr (FloatType) J (VarExpr (IntType) b) K (VarExpr (IntType) D) (FloatExpr (FloatType) 30)) (CallExpr (FloatType) to_float (VarExpr (IntType) b))))))))
(WriteCmd (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) c) "i.png")
(FnCmd i ((TupleBinding (TupleBinding (VarBinding (ArrayArgument j k l m) (ArrayType (IntType) 3)) (VarBinding (ArrayArgument n o p) (ArrayType (FloatType) 2)) (TupleBinding (VarBinding (ArrayArgument q r s) (ArrayType (ArrayType (IntType) 1) 2)) (TupleBinding (VarBinding (ArrayArgument t u) (ArrayType (IntType) 1))))) (VarBinding (VarArgument v) (FloatType)))) (FloatType) (LetStmt (TupleLValue (ArgLValue (ArrayArgument w x))) (TupleIndexExpr (TupleType (ArrayType (BoolType) 1)) (TupleLiteralExpr (TupleType (FloatType) (TupleType (ArrayType (BoolType) 1))) (CallExpr (FloatType) atan2 (CallExpr (FloatType) asin (CallExpr (FloatType) pow (FloatExpr (FloatType) 64) (VarExpr (FloatType) v))) (BinopExpr (FloatType) (CallExpr (FloatType) tan (FloatExpr (FloatType) 37)) + (FloatExpr (FloatType) 95))) (IfExpr (TupleType (ArrayType (BoolType) 1)) (BinopExpr (BoolType) (VarExpr (BoolType) d) == (BinopExpr (BoolType) (VarExpr (IntType) l) < (VarExpr (IntType) k))) (IfExpr (TupleType (ArrayType (BoolType) 1)) (FalseExpr (BoolType)) (TupleLiteralExpr (TupleType (ArrayType (BoolType) 1)) (VarExpr (ArrayType (BoolType) 1) a)) (TupleLiteralExpr (TupleType (ArrayType (BoolType) 1)) (VarExpr (ArrayType (BoolType) 1) a))) (TupleLiteralExpr (TupleType (ArrayType (BoolType) 1)) (ArrayLiteralExpr (ArrayType (BoolType) 1) (VarExpr (BoolType) d) (VarExpr (BoolType) d) (FalseExpr (BoolType)))))) 1)) (LetStmt (ArgLValue (ArrayArgument y z A)) (IfExpr (ArrayType (FloatType) 2) (ArrayIndexExpr (BoolType) (ArrayIndexExpr (ArrayType (BoolType) 2) (ArrayLoopExpr (ArrayType (ArrayType (BoolType) 2) 3) y (VarExpr (IntType) s) z (VarExpr (IntType) k) A (IfExpr (IntType) (VarExpr (BoolType) d) (VarExpr (IntType) f) (VarExpr (IntType) u)) (ArrayLoopExpr (ArrayType (BoolType) 2) B (VarExpr (IntType) u) C (VarExpr (IntType) z) (FalseExpr (BoolType)))) (VarExpr (IntType) o) (VarExpr (IntType) o) (UnopExpr (IntType) - (ArrayIndexExpr (IntType) (VarExpr (ArrayType (IntType) 3) j) (VarExpr (IntType) r) (VarExpr (IntType) u) (VarExpr (IntType) argnum)))) (ArrayIndexExpr (IntType) (ArrayLiteralExpr (ArrayType (IntType) 1) (BinopExpr (IntType) (VarExpr (IntType) m) + (VarExpr (IntType) x)) (VarExpr (IntType) r)) (IfExpr (IntType) (VarExpr (BoolType) d) (IntExpr (IntType) 807) (VarExpr (IntType) m))) (SumLoopExpr (IntType) y (SumLoopExpr (IntType) y (VarExpr (IntType) f) (VarExpr (IntType) s)) z (ArrayIndexExpr (IntType) (ArrayLoopExpr (ArrayType (IntType) 2) y (VarExpr (IntType) k) z (VarExpr (IntType) k) (VarExpr (IntType) l)) (VarExpr (IntType) o) (VarExpr (IntType) p)) (VarExpr (IntType) l))) (VarExpr (ArrayType (FloatType) 2) n) (ArrayLoopExpr (ArrayType (FloatType) 2) y (VarExpr (IntType) b) z (VarExpr (IntType) k) (CallExpr (FloatType) acos (CallExpr (FloatType) to_float (VarExpr (IntType) u)))))) (LetStmt (ArgLValue (VarArgument B)) (VarExpr (IntType) s)) (LetStmt (ArgLValue (ArrayArgument C D E)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) e)) (ReturnStmt (BinopExpr (FloatType) (CallExpr (FloatType) acos (BinopExpr (FloatType) (CallExpr (FloatType) atan2 (CallExpr (FloatType) to_float (IntExpr (IntType) 101)) (FloatExpr (FloatType) 93)) - (CallExpr (FloatType) acos (ArrayIndexExpr (FloatType) (VarExpr (ArrayType (FloatType) 2) y) (VarExpr (IntType) k) (VarExpr (IntType) s))))) + (CallExpr (FloatType) asin (ArrayIndexExpr (FloatType) (TupleIndexExpr (ArrayType (FloatType) 2) (TupleLiteralExpr (TupleType (IntType) (IntType) (ArrayType (FloatType) 2)) (IntExpr (IntType) 144) (VarExpr (IntType) l) (VarExpr (ArrayType (FloatType) 2) n)) 2) (VarExpr (IntType) u) (VarExpr (IntType) m))))))
(LetCmd (ArgLValue (ArrayArgument j k l)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) e))
(LetCmd (TupleLValue (ArgLValue (ArrayArgument m n o p)) (TupleLValue (ArgLValue (VarArgument q)))) (IfExpr (TupleType (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) (TupleType (IntType))) (BinopExpr (BoolType) (BinopExpr (BoolType) (CallExpr (FloatType) log (CallExpr (FloatType) pow (FloatExpr (FloatType) 13) (FloatExpr (FloatType) 0))) <= (FloatExpr (FloatType) 19)) && (BinopExpr (BoolType) (VarExpr (IntType) l) > (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) l)) 0))) (TupleLiteralExpr (TupleType (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) (TupleType (IntType))) (ArrayIndexExpr (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) (ArrayLoopExpr (ArrayType (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) 1) m (IntExpr (IntType) 415) (ArrayLoopExpr (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) n (VarExpr (IntType) g) o (VarExpr (IntType) b) p (VarExpr (IntType) l) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) e))) (VarExpr (IntType) l)) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) b))) (TupleLiteralExpr (TupleType (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) (TupleType (IntType))) (TupleIndexExpr (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) (TupleLiteralExpr (TupleType (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3)) (ArrayLoopExpr (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 3) m (VarExpr (IntType) k) n (VarExpr (IntType) k) o (IntExpr (IntType) 553) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) e))) 0) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) l)))))
(LetCmd (ArgLValue (VarArgument r)) (CallExpr (FloatType) sin (CallExpr (FloatType) tan (CallExpr (FloatType) sin (CallExpr (FloatType) sin (CallExpr (FloatType) tan (FloatExpr (FloatType) 99)))))))