fn a() : {float} {
  let b = sin((array[b : 447, c : to_int(atan(76.21)), d : (array[b : 168] b)[146]] asin(a(){0}))[(argnum + 739), (- 23), (- (- (if true then 788 else 312)))])
  return (if (tan(acos(b)) <= (if (cos(b) > pow(b, 95.54)) then (sum[c : (sum[c : 480] c), d : argnum] acos(98.07)) else atan2(sin(b), 20.5))) then {a(), (- (- b))}{0} else a())
  let {} = {}
  assert (if false then (if (if false then true else false) then {(argnum < 438), false} else {(true || false), (81.8 <= b)}){1} else (({b, 432}{1} >= ((if true then argnum else argnum) - (argnum * 540))) || (if true then ((sum[c : 464, d : 557] d) > to_int(36.38)) else false))), "c"
  return (array[c : 686, d : (array[c : 348, d : 870] argnum)[861, (if true then argnum else argnum)], e : (936 / 966)] {{b}})[(if (if false then false else (true != true)) then (sum[c : (- 203)] 128) else to_int(exp(b))), 415, to_int((sum[c : argnum, d : (if false then 185 else 667), e : (argnum + 630)] cos(5.4)))]{0}
}

let b[c, d] = (array[b : to_int(log(a(){0})), c : argnum, d : (- 516)] (array[e : c, f : c] (array[g : argnum, h : d] true))[(- b), argnum])[argnum, (if (! (! false)) then (array[b : 857, c : argnum, d : (- 914)] (if false then c else c)) else (array[b : 975, c : (sum[b : 489, c : argnum] argnum), d : (823 + 163)] b))[to_int(to_float(argnum)), (401 / 373), (sum[b : (855 % argnum), c : (696 % argnum), d : 804] (- b))], to_int(tan(sqrt(cos(19.35))))]
print "e"

fn e(f : int) : int {
  let g[h, i, j] = (array[g : f, h : e((- e(d))), i : (if (to_float(f) <= atan(37.08)) then {to_float(d), b, (argnum / c)} else {atan(27.02), (array[g : d, h : d] true), d}){2}] cos(log((if (true && false) then (sum[j : d, k : 827] 48.57) else tan(58.49)))))
  return h
  return (if (if (! false) then {(true == true)} else {(c >= c)}){0} then to_int(sqrt(sin(to_float(h)))) else 567)
  assert (if false then ((if {false}{0} then sqrt(66.44) else log(g[argnum, 442, argnum])) > pow(log(acos(43.36)), atan2(cos(62.52), atan2(90.87, 96.4)))) else (if (! (d == (- j))) then (e((sum[k : d, l : f, m : c] i)) >= (array[k : i, l : 752, m : j] l)[e(d), (- h), 971]) else (if (if true then false else (true == true)) then (! (! true)) else (array[k : f, l : c] false)[i, d]))), "k"
  return {c}{0}
}

fn f() : bool {
  let g = tan(tan(tan(exp(28.5))))
  let {{}} = [{atan(25.04), {{}}}, {15.54, {{}}}, {a(){0}, {{}}}][(if true then {d} else {argnum}){0}]{1}
  let {h[i, j, k], {l[m, n], o, p}} = (if (if (if false then (b[d, d] || (186 != argnum)) else (if (f() || false) then f() else (! f()))) then (if (if false then (f() && f()) else (! true)) then (if (c <= d) then f() else true) else f()) else (if (argnum == 267) then [f(), f()] else (array[h : c] f()))[c]) then {(array[h : (sum[h : (sum[h : d, i : 564] i), i : (if true then 738 else c), j : args[argnum]] h), i : d, j : (332 / (if f() then d else c))] f()), {{b, true, argnum}}{0}} else {{(array[h : c, i : c, j : c] f()), {b, f(), 115}}}{0})
  return (if (if {(! false), d, (! f())}{2} then (if (f() && (if true then f() else false)) then b[216, e(m)] else (! (f() || f()))) else (h[k, c, c] || (! (if true then true else false)))) then (! (log(g) <= to_float(argnum))) else ((((sum[q : c] m) != e(m)) && ((n + c) != argnum)) || (if (if o then f() else false) then (array[q : n] o) else [o])[d]))
  return true
}

fn g(h : float, { i[j, k, l] : {float,bool,bool}[,,], m : {int[],int,float[,,]} }, n[o, p, q] : bool[,,][,,]) : int {
  let r = args
  let s = (sum[s : j] q)
  let t = m
  let {} = (array[u : (if f() then d else (- k)), v : 375, w : k] (if (161 == l) then {h, {}} else {h, {}}))[(if (argnum < o) then to_int(sin(h)) else (if true then c else (sum[u : argnum] p))), [p, (sum[u : q, v : q, w : o] v)][p], c]{1}
  return q
}

let h[i] = (if (sin(atan(21.52)) > (if true then 64.11 else atan(16.55))) then {{args, argnum, false}}{0} else (array[h : (d * 244)] {args, c, true})[(sum[h : (- c)] c)]){0}
let {j[k, l, m], n[o]} = {{(array[j : (- argnum), k : i, l : to_int(36.64)] {args}), h}}{0}
let p = tan((if f() then (sum[p : ((m + argnum) / l), q : i, r : (sum[p : i, q : (sum[p : 460, q : d, r : c] l), r : (l * 195)] argnum)] pow(30.96, 25.67)) else tan(acos(63.42))))
fn q() : int {
  return i
  let {r[s]} = {args}
  let t = r
  let u[v] = n
  return v
}

let {r[s], t[u, v, w], {x, y[z]}} = (if true then {m, {args, j, {d, n}}} else {l, {[c], j, {d, args}}}){1}
let A[B, C] = [(array[A : argnum] (if true then b else b)), (if false then (array[A : 872] b) else [b, b, b]), (array[A : u] (array[B : o, C : 881] f()))][27][e(x)]
