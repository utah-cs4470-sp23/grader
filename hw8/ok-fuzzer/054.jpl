fn a({ b[c, d] : int[,] }, e[f, g, h] : float[,,], i[j, k] : {int,bool}[,]) : {}[][,] {
  let l = ([sqrt(to_float(g)), asin(34.92), tan(to_float(f))][{(sum[l : k] h)}{0}] != ((sum[l : h, m : d] sqrt(tan(23.43))) - log(tan(exp(35.4)))))
  return a({(array[m : f, n : d] d)}, e, (array[m : k, n : f, o : h] (array[p : n, q : n] i))[args[c], j, j][argnum, (- d)])
  let {} = (if (array[m : d, n : argnum] l)[(if true then j else b[argnum, f]), (j % 364)] then {(if l then argnum else (f - g)), {}, (! (f < g))} else [{f, {}, true}, {f, {}, false}][(h - c)]){1}
  assert (sin(to_float((- 651))) >= to_float(d)), "m"
  return (if (array[m : {c, argnum, i}{1}] (if (d < h) then (! true) else false))[k] then (if ((1.5 % (88.86 - 47.1)) >= 85.98) then (if true then a({b}, e, i) else (array[m : argnum, n : (sum[m : g, n : argnum, o : f] n)] (array[o : d] {}))) else (array[m : d, n : c] (array[o : (sum[o : n, p : f, q : c] o)] {}))) else (if (array[m : to_int(55.98), n : (f * h)] l)[(if (h >= k) then (if true then f else h) else d), f] then (if l then (array[m : j, n : j] [{}, {}]) else (array[m : d, n : (g * d)] (array[o : d] {}))) else (array[m : (if false then h else argnum), n : c] (if l then (array[o : d] {}) else (array[o : 505] {})))))
}

fn b(c : {}, d[e] : bool[], f : int) : int {
  assert (if (! (true && false)) then [(array[g : f, h : f] true)] else (array[g : (f % argnum)] (array[h : f, i : f] false)))[(array[g : 814] args)[args[e]][(if false then (argnum % 493) else (- 814))]][(sum[g : (if (! (! true)) then 926 else f), h : {(array[g : argnum] f), argnum, argnum}{2}, i : (if (false == false) then {argnum, 72} else {argnum, argnum}){0}] (h * (to_int(38.34) + e))), b({}, (array[g : (f * 283)] (if true then (218 >= argnum) else (argnum >= f))), f)], "g"
  let g = b((if (53 == argnum) then c else {{}, 59.33}{0}), (if (75.95 != to_float(e)) then [(! true), true] else {c, d}{1}), (if {true}{0} then ((- f) / b({}, (if false then d else d), (sum[g : 490] f))) else b({}, {713, c, d}{2}, (- e))))
  assert (! [((! true) || false)][(- (if (false && true) then b(c, d, g) else 394))]), "h"
  assert true, "h"
  return (sum[h : {{f}}{0}{0}] f)
}

let c[d] = [(! (((- argnum) == (if true then argnum else 207)) && ((514 * 510) != (765 * argnum))))]
fn e(f : bool, g[h, i] : bool[,,][,]) : int {
  assert (e(f, g) == {(! false), 10.35, {args, argnum, i}}{2}{2}), "j"
  let {j, k[l, m]} = (if (((if (false && f) then (sum[j : argnum, k : h, l : h] i) else (argnum % d)) >= {375}{0}) != ((sum[j : (sum[j : i, k : h] h)] (- 35.24)) == sqrt(atan(1.73)))) then (array[j : h, k : (- e(true, g)), l : (- (- argnum))] {e(true, g), g})[(if (array[j : 793, k : 46, l : argnum] true)[e(f, g), to_int(18.59), (sum[j : argnum, k : 552, l : d] j)] then {g, h, c}{1} else (if (! f) then d else b({}, c, d))), (array[j : (- argnum), k : (- 50)] k)[(sum[j : h] h), (array[j : d, k : d] k)[259, 326]], b((if (false && true) then (if f then {} else {}) else {}), (if (f || f) then (array[j : d] f) else (array[j : i] f)), 318)] else (if {false}{0} then {{i, g}} else {{i, g}}){0})
  let n = g
  let o[p, q, r] = {(array[o : (sum[o : (- i), p : (if true then j else l), q : d] i), p : l, q : ((sum[o : m, p : i] i) * 940)] j)}{0}
  return d
}

let {} = [(if true then {d, {}} else {argnum, {}})][argnum]{1}
let f = 486
let g[h] = c
let i[j, k, l] = {(array[i : (argnum - 390), j : (if (argnum > d) then (if true then 197 else d) else f), k : 850] (sin(40.64) > log(14.17))), (if (! true) then {true} else {true}){0}, c}{0}
fn m(n[o, p, q] : int[,,], r[s, t] : int[,]) : {int[,,],float,float} {
  let {u, {}, v[w, x, y]} = {p, {}, (array[u : r[argnum, f], v : t] i)[o, k]}
  let z = [pow(pow((array[z : d, A : p, B : p] 48.02)[o, h, p], {26.23, 46.98, j}{1}), atan(exp(asin(48.92)))), log((sqrt(13.46) - cos(sin(45.49))))]
  return (array[A : h, B : w] (array[C : h, D : A] m(n, r))[to_int(exp(44.19)), y])[(sum[A : x] (- (j + p))), b({{}, v, args}{0}, g, l)]
  let A[B, C, D] = (array[A : (sum[A : l, B : p] o), B : (if ((c[o] || (q < p)) != (true == g[s])) then d else (if (! (j >= t)) then h else p)), C : l] B)
  return {A, (if ((! i[h, w, j]) && (to_float(l) >= atan(68.87))) then acos(asin(to_float(s))) else (if ((! true) || true) then (- 57.12) else to_float(s))), sqrt(asin((- sqrt(66.21))))}
}

assert (! {{true}}{0}{0}), "n"
fn n(o : int[], p[q] : {int}[]) : int {
  let r[s, t] = (if (19.21 < (if (! true) then 86.65 else acos(21.53))) then {(array[r : k, s : d] o)} else {(array[r : f, s : f] args)}){0}
  let u[v] = (if (((i[q, j, j] && (! true)) && false) || i[t, j, l]) then c else c)
  return argnum
  let w[x] = args
  return v
}

let o[p, q] = {{f, true, (array[o : f, p : l] args)}{2}}{0}
