(ReadCmd "a.png" (VarArgument a))
(LetCmd (TupleLValue) (IfExpr (TupleType) (IfExpr (BoolType) (BinopExpr (BoolType) (BinopExpr (IntType) (VarExpr (IntType) argnum) / (UnopExpr (IntType) - (IntExpr (IntType) 34))) >= (VarExpr (IntType) argnum)) (TupleIndexExpr (BoolType) (TupleLiteralExpr (TupleType (BoolType)) (IfExpr (BoolType) (FalseExpr (BoolType)) (FalseExpr (BoolType)) (FalseExpr (BoolType)))) 0) (TrueExpr (BoolType))) (IfExpr (TupleType) (TrueExpr (BoolType)) (TupleLiteralExpr (TupleType)) (ArrayIndexExpr (TupleType) (ArrayLiteralExpr (ArrayType (TupleType) 1) (TupleLiteralExpr (TupleType)) (IfExpr (TupleType) (FalseExpr (BoolType)) (TupleLiteralExpr (TupleType)) (TupleLiteralExpr (TupleType))) (IfExpr (TupleType) (FalseExpr (BoolType)) (TupleLiteralExpr (TupleType)) (TupleLiteralExpr (TupleType)))) (SumLoopExpr (IntType) b (ArrayIndexExpr (IntType) (VarExpr (ArrayType (IntType) 1) args) (VarExpr (IntType) argnum)) c (VarExpr (IntType) argnum) (VarExpr (IntType) c)))) (IfExpr (TupleType) (UnopExpr (BoolType) ! (UnopExpr (BoolType) ! (TrueExpr (BoolType)))) (IfExpr (TupleType) (BinopExpr (BoolType) (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 15)) >= (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 3))) (IfExpr (TupleType) (BinopExpr (BoolType) (VarExpr (IntType) argnum) <= (IntExpr (IntType) 981)) (TupleLiteralExpr (TupleType)) (IfExpr (TupleType) (FalseExpr (BoolType)) (TupleLiteralExpr (TupleType)) (TupleLiteralExpr (TupleType)))) (TupleLiteralExpr (TupleType))) (TupleIndexExpr (TupleType) (TupleLiteralExpr (TupleType (IntType) (BoolType) (TupleType)) (IntExpr (IntType) 537) (UnopExpr (BoolType) ! (TrueExpr (BoolType))) (TupleLiteralExpr (TupleType))) 2))))
(LetCmd (ArgLValue (ArrayArgument b c d e)) (ArrayLoopExpr (ArrayType (ArrayType (FloatType) 2) 3) b (BinopExpr (IntType) (SumLoopExpr (IntType) b (BinopExpr (IntType) (VarExpr (IntType) argnum) % (IntExpr (IntType) 690)) c (BinopExpr (IntType) (SumLoopExpr (IntType) b (IntExpr (IntType) 704) (VarExpr (IntType) argnum)) + (IntExpr (IntType) 826)) d (UnopExpr (IntType) - (BinopExpr (IntType) (IntExpr (IntType) 599) * (VarExpr (IntType) argnum))) (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) b)) 0)) % (BinopExpr (IntType) (VarExpr (IntType) argnum) / (CallExpr (IntType) to_int (FloatExpr (FloatType) 29)))) c (BinopExpr (IntType) (SumLoopExpr (IntType) b (VarExpr (IntType) argnum) (SumLoopExpr (IntType) c (IntExpr (IntType) 473) d (VarExpr (IntType) b) (VarExpr (IntType) argnum))) % (IfExpr (IntType) (BinopExpr (BoolType) (UnopExpr (BoolType) ! (FalseExpr (BoolType))) || (UnopExpr (BoolType) ! (TrueExpr (BoolType)))) (CallExpr (IntType) to_int (CallExpr (FloatType) exp (FloatExpr (FloatType) 13))) (IntExpr (IntType) 191))) d (CallExpr (IntType) to_int (IfExpr (FloatType) (IfExpr (BoolType) (UnopExpr (BoolType) ! (FalseExpr (BoolType))) (UnopExpr (BoolType) ! (FalseExpr (BoolType))) (FalseExpr (BoolType))) (CallExpr (FloatType) exp (CallExpr (FloatType) atan2 (FloatExpr (FloatType) 74) (FloatExpr (FloatType) 78))) (UnopExpr (FloatType) - (FloatExpr (FloatType) 8)))) (ArrayLoopExpr (ArrayType (FloatType) 2) e (BinopExpr (IntType) (VarExpr (IntType) argnum) % (VarExpr (IntType) b)) f (CallExpr (IntType) to_int (SumLoopExpr (FloatType) e (VarExpr (IntType) b) (FloatExpr (FloatType) 19))) (CallExpr (FloatType) log (CallExpr (FloatType) to_float (SumLoopExpr (IntType) g (VarExpr (IntType) d) h (VarExpr (IntType) b) (VarExpr (IntType) d)))))))
(FnCmd f ((TupleBinding)) (TupleType (FloatType)) (ReturnStmt (IfExpr (TupleType (FloatType)) (TrueExpr (BoolType)) (TupleIndexExpr (TupleType (FloatType)) (TupleLiteralExpr (TupleType (TupleType (FloatType))) (TupleLiteralExpr (TupleType (FloatType)) (CallExpr (FloatType) tan (FloatExpr (FloatType) 8)))) 0) (CallExpr (TupleType (FloatType)) f (IfExpr (TupleType) (BinopExpr (BoolType) (SumLoopExpr (IntType) g (VarExpr (IntType) c) (VarExpr (IntType) e)) >= (VarExpr (IntType) c)) (TupleLiteralExpr (TupleType)) (TupleLiteralExpr (TupleType)))))) (LetStmt (ArgLValue (VarArgument g)) (CallExpr (IntType) to_int (IfExpr (FloatType) (BinopExpr (BoolType) (IfExpr (BoolType) (TrueExpr (BoolType)) (BinopExpr (BoolType) (VarExpr (IntType) c) <= (VarExpr (IntType) d)) (BinopExpr (BoolType) (VarExpr (IntType) argnum) == (IntExpr (IntType) 496))) && (FalseExpr (BoolType))) (UnopExpr (FloatType) - (TupleIndexExpr (FloatType) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType))) 0)) (CallExpr (FloatType) tan (CallExpr (FloatType) log (CallExpr (FloatType) cos (FloatExpr (FloatType) 21))))))) (LetStmt (TupleLValue (ArgLValue (ArrayArgument h i j))) (TupleLiteralExpr (TupleType (ArrayType (FloatType) 2)) (ArrayLoopExpr (ArrayType (FloatType) 2) h (CallExpr (IntType) to_int (CallExpr (FloatType) log (CallExpr (FloatType) atan2 (FloatExpr (FloatType) 77) (FloatExpr (FloatType) 56)))) i (VarExpr (IntType) d) (CallExpr (FloatType) atan2 (CallExpr (FloatType) cos (SumLoopExpr (FloatType) j (IntExpr (IntType) 919) k (VarExpr (IntType) argnum) (FloatExpr (FloatType) 31))) (FloatExpr (FloatType) 52))))) (ReturnStmt (ArrayIndexExpr (TupleType (FloatType)) (IfExpr (ArrayType (TupleType (FloatType)) 3) (BinopExpr (BoolType) (BinopExpr (IntType) (IntExpr (IntType) 572) + (VarExpr (IntType) c)) < (SumLoopExpr (IntType) k (VarExpr (IntType) j) l (VarExpr (IntType) e) (VarExpr (IntType) j))) (IfExpr (ArrayType (TupleType (FloatType)) 3) (BinopExpr (BoolType) (FalseExpr (BoolType)) != (BinopExpr (BoolType) (FalseExpr (BoolType)) && (TrueExpr (BoolType)))) (ArrayLoopExpr (ArrayType (TupleType (FloatType)) 3) k (VarExpr (IntType) i) l (IntExpr (IntType) 682) m (VarExpr (IntType) argnum) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType)))) (ArrayLoopExpr (ArrayType (TupleType (FloatType)) 3) k (VarExpr (IntType) d) l (IntExpr (IntType) 562) m (VarExpr (IntType) argnum) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType))))) (ArrayLoopExpr (ArrayType (TupleType (FloatType)) 3) k (IntExpr (IntType) 599) l (VarExpr (IntType) c) m (VarExpr (IntType) j) (CallExpr (TupleType (FloatType)) f (IfExpr (TupleType) (TrueExpr (BoolType)) (TupleLiteralExpr (TupleType)) (TupleLiteralExpr (TupleType)))))) (UnopExpr (IntType) - (VarExpr (IntType) c)) (VarExpr (IntType) argnum) (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (TupleType (FloatType)) (BoolType) (IntType)) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType))) (BinopExpr (BoolType) (VarExpr (IntType) c) >= (VarExpr (IntType) argnum)) (CallExpr (IntType) to_int (CallExpr (FloatType) exp (FloatExpr (FloatType) 7)))) 2))) (ReturnStmt (IfExpr (TupleType (FloatType)) (UnopExpr (BoolType) ! (ArrayIndexExpr (BoolType) (ArrayLoopExpr (ArrayType (BoolType) 2) k (VarExpr (IntType) argnum) l (VarExpr (IntType) j) (FalseExpr (BoolType))) (BinopExpr (IntType) (VarExpr (IntType) g) / (VarExpr (IntType) i)) (VarExpr (IntType) e))) (ArrayIndexExpr (TupleType (FloatType)) (ArrayLiteralExpr (ArrayType (TupleType (FloatType)) 1) (IfExpr (TupleType (FloatType)) (UnopExpr (BoolType) ! (FalseExpr (BoolType))) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType))) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType)))) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType))) (CallExpr (TupleType (FloatType)) f (TupleLiteralExpr (TupleType)))) (IfExpr (IntType) (TrueExpr (BoolType)) (VarExpr (IntType) i) (CallExpr (IntType) to_int (FloatExpr (FloatType) 5)))) (TupleIndexExpr (TupleType (FloatType)) (TupleLiteralExpr (TupleType (TupleType (FloatType)) (BoolType)) (TupleLiteralExpr (TupleType (FloatType)) (CallExpr (FloatType) tan (FloatExpr (FloatType) 9))) (BinopExpr (BoolType) (UnopExpr (IntType) - (VarExpr (IntType) g)) >= (VarExpr (IntType) c))) 0))))
(LetCmd (TupleLValue (TupleLValue (ArgLValue (ArrayArgument g h i j)) (ArgLValue (VarArgument k)) (ArgLValue (VarArgument l))) (ArgLValue (VarArgument m))) (TupleLiteralExpr (TupleType (TupleType (ArrayType (ArrayType (FloatType) 2) 3) (FloatType) (IntType)) (FloatType)) (IfExpr (TupleType (ArrayType (ArrayType (FloatType) 2) 3) (FloatType) (IntType)) (BinopExpr (BoolType) (IfExpr (BoolType) (BinopExpr (BoolType) (TrueExpr (BoolType)) || (FalseExpr (BoolType))) (FalseExpr (BoolType)) (FalseExpr (BoolType))) && (UnopExpr (BoolType) ! (UnopExpr (BoolType) ! (FalseExpr (BoolType))))) (TupleLiteralExpr (TupleType (ArrayType (ArrayType (FloatType) 2) 3) (FloatType) (IntType)) (ArrayIndexExpr (ArrayType (ArrayType (FloatType) 2) 3) (ArrayLoopExpr (ArrayType (ArrayType (ArrayType (FloatType) 2) 3) 3) g (VarExpr (IntType) d) h (VarExpr (IntType) d) i (VarExpr (IntType) argnum) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) b)) (CallExpr (IntType) to_int (FloatExpr (FloatType) 42)) (VarExpr (IntType) argnum) (BinopExpr (IntType) (VarExpr (IntType) c) - (VarExpr (IntType) d))) (CallExpr (FloatType) sin (FloatExpr (FloatType) 97)) (UnopExpr (IntType) - (BinopExpr (IntType) (IntExpr (IntType) 335) * (VarExpr (IntType) e)))) (TupleLiteralExpr (TupleType (ArrayType (ArrayType (FloatType) 2) 3) (FloatType) (IntType)) (IfExpr (ArrayType (ArrayType (FloatType) 2) 3) (BinopExpr (BoolType) (TrueExpr (BoolType)) != (TrueExpr (BoolType))) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) b) (IfExpr (ArrayType (ArrayType (FloatType) 2) 3) (TrueExpr (BoolType)) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) b) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) b))) (CallExpr (FloatType) exp (CallExpr (FloatType) sin (FloatExpr (FloatType) 59))) (ArrayIndexExpr (IntType) (VarExpr (ArrayType (IntType) 1) args) (CallExpr (IntType) to_int (FloatExpr (FloatType) 66))))) (CallExpr (FloatType) sqrt (CallExpr (FloatType) acos (CallExpr (FloatType) asin (CallExpr (FloatType) sin (FloatExpr (FloatType) 52)))))))
(FnCmd n ((VarBinding (ArrayArgument o p) (ArrayType (TupleType (FloatType) (FloatType) (FloatType)) 1))) (BoolType) (LetStmt (ArgLValue (VarArgument q)) (CallExpr (FloatType) atan (CallExpr (FloatType) sqrt (CallExpr (FloatType) exp (VarExpr (FloatType) k))))) (LetStmt (ArgLValue (VarArgument r)) (CallExpr (FloatType) atan2 (CallExpr (FloatType) to_float (VarExpr (IntType) h)) (VarExpr (FloatType) m))) (LetStmt (ArgLValue (ArrayArgument s t u)) (ArrayLoopExpr (ArrayType (IntType) 2) s (VarExpr (IntType) c) t (IfExpr (IntType) (BinopExpr (BoolType) (CallExpr (IntType) to_int (UnopExpr (FloatType) - (VarExpr (FloatType) r))) > (VarExpr (IntType) j)) (VarExpr (IntType) j) (VarExpr (IntType) j)) (VarExpr (IntType) l))) (LetStmt (TupleLValue (TupleLValue (TupleLValue (TupleLValue)) (ArgLValue (VarArgument v)))) (TupleIndexExpr (TupleType (TupleType (TupleType (TupleType)) (FloatType))) (TupleLiteralExpr (TupleType (FloatType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType)) 1) (TupleType (TupleType (TupleType (TupleType)) (FloatType)))) (SumLoopExpr (FloatType) v (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) t)) 0) w (UnopExpr (IntType) - (IfExpr (IntType) (FalseExpr (BoolType)) (VarExpr (IntType) l) (VarExpr (IntType) p))) (CallExpr (FloatType) cos (CallExpr (FloatType) atan (VarExpr (FloatType) k)))) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType)) 1) o) (TupleLiteralExpr (TupleType (TupleType (TupleType (TupleType)) (FloatType))) (TupleLiteralExpr (TupleType (TupleType (TupleType)) (FloatType)) (TupleLiteralExpr (TupleType (TupleType)) (TupleLiteralExpr (TupleType))) (VarExpr (FloatType) r)))) 2)) (ReturnStmt (UnopExpr (BoolType) ! (CallExpr (BoolType) n (TupleIndexExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType)) 1) (TupleLiteralExpr (TupleType (ArrayType (TupleType (FloatType) (FloatType) (FloatType)) 1) (FloatType) (IntType)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType)) 1) o) (CallExpr (FloatType) sin (VarExpr (FloatType) k)) (VarExpr (IntType) j)) 0)))))
(FnCmd o ((VarBinding (VarArgument p) (FloatType))) (FloatType) (LetStmt (ArgLValue (VarArgument q)) (CallExpr (FloatType) tan (CallExpr (FloatType) sqrt (CallExpr (FloatType) log (CallExpr (FloatType) cos (VarExpr (FloatType) p)))))) (LetStmt (ArgLValue (VarArgument r)) (BinopExpr (BoolType) (VarExpr (IntType) argnum) < (VarExpr (IntType) c))) (ReturnStmt (BinopExpr (FloatType) (CallExpr (FloatType) sqrt (CallExpr (FloatType) acos (FloatExpr (FloatType) 17))) - (VarExpr (FloatType) m))) (AssertStmt (VarExpr (BoolType) r) "s") (ReturnStmt (CallExpr (FloatType) sin (VarExpr (FloatType) k))))
(FnCmd p ((TupleBinding (VarBinding (VarArgument q) (TupleType (FloatType))) (TupleBinding (TupleBinding (TupleBinding (TupleBinding (VarBinding (VarArgument r) (IntType))) (TupleBinding (VarBinding (ArrayArgument s t) (ArrayType (TupleType (BoolType) (FloatType) (BoolType)) 1)) (TupleBinding))) (TupleBinding (VarBinding (ArrayArgument u v w x) (ArrayType (BoolType) 3))) (VarBinding (ArrayArgument y z A) (ArrayType (BoolType) 2))) (VarBinding (VarArgument B) (BoolType))) (VarBinding (VarArgument C) (TupleType (ArrayType (BoolType) 1) (ArrayType (BoolType) 1) (TupleType)))) (TupleBinding (VarBinding (ArrayArgument D E F) (ArrayType (TupleType) 2)) (TupleBinding)) (VarBinding (VarArgument G) (TupleType (TupleType (IntType)) (FloatType) (FloatType)))) (BoolType) (LetStmt (ArgLValue (VarArgument H)) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) b)) (LetStmt (ArgLValue (VarArgument I)) (VarExpr (IntType) E)) (LetStmt (ArgLValue (ArrayArgument J K L M)) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) H)) (LetStmt (ArgLValue (VarArgument N)) (VarExpr (ArrayType (BoolType) 2) y)) (ReturnStmt (FalseExpr (BoolType))))
(TimeCmd (TimeCmd (LetCmd (ArgLValue (ArrayArgument q r s)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) a))))
(FnCmd t ((VarBinding (VarArgument u) (FloatType)) (VarBinding (VarArgument v) (BoolType))) (BoolType) (LetStmt (TupleLValue) (TupleLiteralExpr (TupleType))) (AssertStmt (CallExpr (BoolType) t (CallExpr (FloatType) cos (TupleIndexExpr (FloatType) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (ArrayType (ArrayType (FloatType) 2) 3)) (VarExpr (FloatType) u) (CallExpr (FloatType) to_float (VarExpr (IntType) e)) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) g)) 1)) (BinopExpr (BoolType) (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType) (IntType)) (VarExpr (IntType) i) (IntExpr (IntType) 637)) 0) < (IntExpr (IntType) 110))) "w") (LetStmt (ArgLValue (ArrayArgument w x y z)) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) b)) (AssertStmt (BinopExpr (BoolType) (IfExpr (IntType) (IfExpr (BoolType) (BinopExpr (BoolType) (CallExpr (FloatType) log (VarExpr (FloatType) m)) == (CallExpr (FloatType) to_float (VarExpr (IntType) r))) (BinopExpr (BoolType) (VarExpr (BoolType) v) == (VarExpr (BoolType) v)) (UnopExpr (BoolType) ! (BinopExpr (BoolType) (VarExpr (IntType) j) >= (VarExpr (IntType) l)))) (IntExpr (IntType) 425) (VarExpr (IntType) c)) > (UnopExpr (IntType) - (VarExpr (IntType) h))) "A") (ReturnStmt (VarExpr (BoolType) v)))
(LetCmd (ArgLValue (ArrayArgument u v w)) (IfExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (BinopExpr (BoolType) (ArrayIndexExpr (IntType) (VarExpr (ArrayType (IntType) 1) args) (VarExpr (IntType) h)) <= (VarExpr (IntType) r)) (TupleIndexExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (ArrayIndexExpr (TupleType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (ArrayType (ArrayType (FloatType) 2) 3) (IntType)) (ArrayLoopExpr (ArrayType (TupleType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (ArrayType (ArrayType (FloatType) 2) 3) (IntType)) 3) u (VarExpr (IntType) i) v (VarExpr (IntType) e) w (VarExpr (IntType) d) (TupleLiteralExpr (TupleType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (ArrayType (ArrayType (FloatType) 2) 3) (IntType)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) q) (VarExpr (ArrayType (ArrayType (FloatType) 2) 3) g) (VarExpr (IntType) d))) (IntExpr (IntType) 560) (CallExpr (IntType) to_int (CallExpr (FloatType) sqrt (VarExpr (FloatType) m))) (VarExpr (IntType) e)) 0) (IfExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (IfExpr (BoolType) (CallExpr (BoolType) t (CallExpr (FloatType) asin (FloatExpr (FloatType) 75)) (BinopExpr (BoolType) (VarExpr (IntType) argnum) >= (VarExpr (IntType) r))) (BinopExpr (BoolType) (BinopExpr (FloatType) (VarExpr (FloatType) k) + (FloatExpr (FloatType) 65)) <= (CallExpr (FloatType) log (VarExpr (FloatType) m))) (BinopExpr (BoolType) (BinopExpr (BoolType) (VarExpr (IntType) d) == (VarExpr (IntType) j)) || (FalseExpr (BoolType)))) (IfExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (CallExpr (BoolType) t (CallExpr (FloatType) o (VarExpr (FloatType) k)) (CallExpr (BoolType) t (VarExpr (FloatType) m) (FalseExpr (BoolType)))) (IfExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (BinopExpr (BoolType) (VarExpr (IntType) argnum) <= (VarExpr (IntType) l)) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) a) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) q)) (ArrayIndexExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (ArrayLoopExpr (ArrayType (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) 2) u (VarExpr (IntType) i) v (VarExpr (IntType) argnum) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) q)) (UnopExpr (IntType) - (VarExpr (IntType) l)) (VarExpr (IntType) r))) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) q))))
(LetCmd (TupleLValue) (ArrayIndexExpr (TupleType) (ArrayLoopExpr (ArrayType (TupleType) 2) x (BinopExpr (IntType) (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType) (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (IntType)) (VarExpr (IntType) h) (VarExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) u) (VarExpr (IntType) l)) 2) * (VarExpr (IntType) c)) y (VarExpr (IntType) argnum) (ArrayIndexExpr (TupleType) (IfExpr (ArrayType (TupleType) 1) (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType))) (ArrayLoopExpr (ArrayType (TupleType) 1) z (VarExpr (IntType) c) (TupleLiteralExpr (TupleType))) (ArrayLoopExpr (ArrayType (TupleType) 1) z (VarExpr (IntType) d) (TupleLiteralExpr (TupleType)))) (IfExpr (IntType) (FalseExpr (BoolType)) (BinopExpr (IntType) (VarExpr (IntType) argnum) / (VarExpr (IntType) w)) (VarExpr (IntType) argnum)))) (VarExpr (IntType) d) (VarExpr (IntType) d)))