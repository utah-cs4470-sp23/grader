(LetCmd
 (ArgLValue (VarArgument a))
 (CallExpr (FloatType) atan (FloatExpr (FloatType) 3)))
(LetCmd
 (ArgLValue (VarArgument b))
 (CallExpr
  (FloatType)
  to_float
  (BinopExpr
   (IntType)
   (IntExpr (IntType) 579)
   *
   (IfExpr
    (IntType)
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (TrueExpr (BoolType)) && (FalseExpr (BoolType)))
     ||
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      <
      (VarExpr (IntType) argnum)))
    (CallExpr (IntType) to_int (VarExpr (FloatType) a))
    (UnopExpr
     (IntType)
     -
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      /
      (VarExpr (IntType) argnum)))))))
(LetCmd
 (ArgLValue (ArrayArgument c d e))
 (ArrayIndexExpr
  (ArrayType (ArrayType (IntType) 1) 2)
  (ArrayIndexExpr
   (ArrayType (ArrayType (ArrayType (IntType) 1) 2) 3)
   (ArrayLoopExpr
    (ArrayType (ArrayType (ArrayType (ArrayType (IntType) 1) 2) 3) 1)
    c
    (UnopExpr (IntType) - (VarExpr (IntType) argnum))
    (ArrayLoopExpr
     (ArrayType (ArrayType (ArrayType (IntType) 1) 2) 3)
     d
     (VarExpr (IntType) c)
     e
     (IntExpr (IntType) 802)
     f
     (CallExpr (IntType) to_int (VarExpr (FloatType) a))
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 1) 2)
      g
      (VarExpr (IntType) c)
      h
      (IntExpr (IntType) 825)
      (VarExpr (ArrayType (IntType) 1) args))))
   (VarExpr (IntType) argnum))
  (BinopExpr
   (IntType)
   (VarExpr (IntType) argnum)
   +
   (IfExpr
    (IntType)
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (TrueExpr (BoolType)))
     (BinopExpr (BoolType) (VarExpr (FloatType) b) <= (VarExpr (FloatType) a))
     (BinopExpr (BoolType) (VarExpr (FloatType) a) == (VarExpr (FloatType) b)))
    (UnopExpr
     (IntType)
     -
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (IntExpr (IntType) 295)))
    (SumLoopExpr
     (IntType)
     c
     (IntExpr (IntType) 587)
     (CallExpr (IntType) to_int (VarExpr (FloatType) a)))))
  (SumLoopExpr
   (IntType)
   c
   (ArrayIndexExpr
    (IntType)
    (ArrayLiteralExpr
     (ArrayType (IntType) 1)
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 69))
     (IntExpr (IntType) 647)
     (BinopExpr (IntType) (IntExpr (IntType) 754) / (IntExpr (IntType) 614)))
    (VarExpr (IntType) argnum))
   (ArrayIndexExpr
    (IntType)
    (VarExpr (ArrayType (IntType) 1) args)
    (VarExpr (IntType) argnum)))
  (ArrayIndexExpr
   (IntType)
   (TupleIndexExpr
    (ArrayType (IntType) 2)
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (IntType) 2))
     (CallExpr (FloatType) to_float (IntExpr (IntType) 565))
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      c
      (IntExpr (IntType) 526)
      d
      (IntExpr (IntType) 990)
      (VarExpr (IntType) d)))
    1)
   (VarExpr (IntType) argnum)
   (BinopExpr
    (IntType)
    (VarExpr (IntType) argnum)
    /
    (CallExpr (IntType) to_int (VarExpr (FloatType) b))))))
(AssertCmd
 (UnopExpr
  (BoolType)
  !
  (UnopExpr
   (BoolType)
   !
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (BoolType) (FloatType))
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (FloatExpr (FloatType) 63))
    0)))
 "f")
(FnCmd
 f
 ()
 (TupleType)
 (LetStmt
  (ArgLValue (VarArgument g))
  (CallExpr
   (IntType)
   to_int
   (ArrayIndexExpr
    (FloatType)
    (ArrayIndexExpr
     (ArrayType (FloatType) 1)
     (ArrayLoopExpr
      (ArrayType (ArrayType (FloatType) 1) 2)
      g
      (VarExpr (IntType) argnum)
      h
      (IntExpr (IntType) 530)
      (ArrayLoopExpr
       (ArrayType (FloatType) 1)
       i
       (VarExpr (IntType) g)
       (VarExpr (FloatType) a)))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (UnopExpr (IntType) - (VarExpr (IntType) e)))
    (IfExpr
     (IntType)
     (UnopExpr
      (BoolType)
      !
      (BinopExpr
       (BoolType)
       (VarExpr (IntType) argnum)
       <
       (VarExpr (IntType) argnum)))
     (IfExpr
      (IntType)
      (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType)))
      (VarExpr (IntType) d)
      (CallExpr (IntType) to_int (VarExpr (FloatType) b)))
     (BinopExpr
      (IntType)
      (VarExpr (IntType) d)
      /
      (BinopExpr (IntType) (IntExpr (IntType) 574) * (VarExpr (IntType) e)))))))
 (LetStmt
  (TupleLValue
   (ArgLValue (ArrayArgument h i j))
   (ArgLValue (VarArgument k))
   (ArgLValue (ArrayArgument l m n o)))
  (TupleLiteralExpr
   (TupleType (ArrayType (BoolType) 2) (FloatType) (ArrayType (IntType) 3))
   (IfExpr
    (ArrayType (BoolType) 2)
    (FalseExpr (BoolType))
    (ArrayLoopExpr
     (ArrayType (BoolType) 2)
     h
     (UnopExpr (IntType) - (VarExpr (IntType) g))
     i
     (IfExpr
      (IntType)
      (BinopExpr (BoolType) (TrueExpr (BoolType)) && (FalseExpr (BoolType)))
      (VarExpr (IntType) d)
      (CallExpr (IntType) to_int (VarExpr (FloatType) a)))
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      <
      (UnopExpr (IntType) - (VarExpr (IntType) e))))
    (IfExpr
     (ArrayType (BoolType) 2)
     (UnopExpr
      (BoolType)
      !
      (BinopExpr (BoolType) (VarExpr (IntType) e) != (VarExpr (IntType) e)))
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      h
      (SumLoopExpr
       (IntType)
       h
       (VarExpr (IntType) d)
       i
       (VarExpr (IntType) e)
       (VarExpr (IntType) i))
      i
      (VarExpr (IntType) g)
      (FalseExpr (BoolType)))
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      h
      (IntExpr (IntType) 193)
      i
      (UnopExpr (IntType) - (IntExpr (IntType) 58))
      (BinopExpr (BoolType) (VarExpr (IntType) g) == (VarExpr (IntType) h)))))
   (CallExpr
    (FloatType)
    sin
    (CallExpr (FloatType) sqrt (VarExpr (FloatType) a)))
   (TupleIndexExpr
    (ArrayType (IntType) 3)
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3) (BoolType) (FloatType))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      h
      (VarExpr (IntType) d)
      i
      (VarExpr (IntType) d)
      j
      (IfExpr
       (IntType)
       (FalseExpr (BoolType))
       (VarExpr (IntType) argnum)
       (VarExpr (IntType) g))
      (VarExpr (IntType) i))
     (BinopExpr
      (BoolType)
      (CallExpr (FloatType) log (VarExpr (FloatType) b))
      ==
      (CallExpr (FloatType) acos (VarExpr (FloatType) a)))
     (CallExpr (FloatType) to_float (VarExpr (IntType) d)))
    0)))
 (LetStmt
  (ArgLValue (ArrayArgument p q))
  (IfExpr
   (ArrayType (IntType) 1)
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 2)
     p
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     q
     (CallExpr (IntType) to_int (VarExpr (FloatType) b))
     (UnopExpr
      (BoolType)
      !
      (BinopExpr (BoolType) (VarExpr (IntType) g) != (VarExpr (IntType) g))))
    (BinopExpr (IntType) (VarExpr (IntType) e) * (VarExpr (IntType) n))
    (VarExpr (IntType) argnum))
   (TupleIndexExpr
    (ArrayType (IntType) 1)
    (TupleIndexExpr
     (TupleType (ArrayType (IntType) 1))
     (TupleLiteralExpr
      (TupleType (TupleType (ArrayType (IntType) 1)) (FloatType))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 1))
       (VarExpr (ArrayType (IntType) 1) args))
      (FloatExpr (FloatType) 39))
     0)
    0)
   (ArrayIndexExpr
    (ArrayType (IntType) 1)
    (VarExpr (ArrayType (ArrayType (IntType) 1) 2) c)
    (VarExpr (IntType) g)
    (VarExpr (IntType) j))))
 (LetStmt
  (TupleLValue
   (TupleLValue (ArgLValue (ArrayArgument r s)) (ArgLValue (VarArgument t)))
   (ArgLValue (VarArgument u)))
  (ArrayIndexExpr
   (TupleType
    (TupleType (ArrayType (IntType) 1) (FloatType))
    (TupleType (FloatType) (FloatType) (IntType)))
   (ArrayLoopExpr
    (ArrayType
     (TupleType
      (TupleType (ArrayType (IntType) 1) (FloatType))
      (TupleType (FloatType) (FloatType) (IntType)))
     1)
    r
    (VarExpr (IntType) j)
    (TupleLiteralExpr
     (TupleType
      (TupleType (ArrayType (IntType) 1) (FloatType))
      (TupleType (FloatType) (FloatType) (IntType)))
     (TupleLiteralExpr
      (TupleType (ArrayType (IntType) 1) (FloatType))
      (ArrayLiteralExpr
       (ArrayType (IntType) 1)
       (VarExpr (IntType) r)
       (IntExpr (IntType) 51)
       (VarExpr (IntType) r))
      (CallExpr (FloatType) sin (VarExpr (FloatType) k)))
     (TupleLiteralExpr
      (TupleType (FloatType) (FloatType) (IntType))
      (FloatExpr (FloatType) 28)
      (CallExpr
       (FloatType)
       pow
       (VarExpr (FloatType) b)
       (VarExpr (FloatType) b))
      (VarExpr (IntType) g))))
   (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) j)))))
 (ReturnStmt
  (IfExpr
   (TupleType)
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 3)
     v
     (VarExpr (IntType) q)
     w
     (UnopExpr (IntType) - (IntExpr (IntType) 116))
     x
     (VarExpr (IntType) d)
     (TupleIndexExpr
      (BoolType)
      (TupleLiteralExpr
       (TupleType (BoolType) (IntType))
       (TrueExpr (BoolType))
       (VarExpr (IntType) g))
      0))
    (VarExpr (IntType) q)
    (VarExpr (IntType) q)
    (VarExpr (IntType) i))
   (TupleIndexExpr
    (TupleType)
    (TupleIndexExpr
     (TupleType (ArrayType (IntType) 3) (TupleType))
     (TupleLiteralExpr
      (TupleType
       (TupleType (FloatType) (FloatType) (IntType))
       (FloatType)
       (TupleType (ArrayType (IntType) 3) (TupleType)))
      (VarExpr (TupleType (FloatType) (FloatType) (IntType)) u)
      (VarExpr (FloatType) b)
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 3) (TupleType))
       (VarExpr (ArrayType (IntType) 3) l)
       (TupleLiteralExpr (TupleType))))
     2)
    1)
   (TupleLiteralExpr (TupleType)))))
(LetCmd
 (ArgLValue (VarArgument g))
 (CallExpr
  (FloatType)
  atan2
  (CallExpr
   (FloatType)
   sqrt
   (BinopExpr
    (FloatType)
    (VarExpr (FloatType) a)
    %
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 23)))))
  (CallExpr
   (FloatType)
   asin
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     asin
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 52)))
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) sqrt (VarExpr (FloatType) b))
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))))))
(WriteCmd
 (ArrayLoopExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  h
  (IfExpr
   (IntType)
   (FalseExpr (BoolType))
   (TupleIndexExpr
    (IntType)
    (IfExpr
     (TupleType (IntType) (TupleType) (IntType))
     (FalseExpr (BoolType))
     (TupleLiteralExpr
      (TupleType (IntType) (TupleType) (IntType))
      (IntExpr (IntType) 421)
      (CallExpr (TupleType) f)
      (IntExpr (IntType) 597))
     (TupleLiteralExpr
      (TupleType (IntType) (TupleType) (IntType))
      (IntExpr (IntType) 603)
      (CallExpr (TupleType) f)
      (VarExpr (IntType) e)))
    0)
   (VarExpr (IntType) argnum))
  i
  (UnopExpr (IntType) - (IntExpr (IntType) 293))
  (TupleLiteralExpr
   (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
   (VarExpr (FloatType) g)
   (ArrayIndexExpr
    (FloatType)
    (ArrayLiteralExpr
     (ArrayType (FloatType) 1)
     (FloatExpr (FloatType) 80)
     (CallExpr (FloatType) tan (VarExpr (FloatType) b)))
    (VarExpr (IntType) h))
   (CallExpr (FloatType) tan (VarExpr (FloatType) b))
   (CallExpr
    (FloatType)
    pow
    (UnopExpr (FloatType) - (CallExpr (FloatType) sin (VarExpr (FloatType) a)))
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) tan (VarExpr (FloatType) g))))))
 "h.png")
(LetCmd (ArgLValue (VarArgument h)) (VarExpr (ArrayType (IntType) 1) args))
(ReadCmd "i.png" (ArrayArgument i j k))
(WriteCmd
 (TupleIndexExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (IfExpr
   (TupleType
    (IntType)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
   (IfExpr
    (BoolType)
    (FalseExpr (BoolType))
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) sin (VarExpr (FloatType) g))
     ==
     (CallExpr (FloatType) exp (VarExpr (FloatType) b)))
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      l
      (VarExpr (IntType) d)
      m
      (VarExpr (IntType) j)
      (TrueExpr (BoolType)))
     (VarExpr (IntType) j)
     (VarExpr (IntType) j)))
   (TupleIndexExpr
    (TupleType
     (IntType)
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
    (TupleLiteralExpr
     (TupleType
      (FloatType)
      (TupleType (FloatType) (FloatType) (FloatType))
      (TupleType
       (IntType)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)))
     (CallExpr (FloatType) acos (VarExpr (FloatType) g))
     (TupleLiteralExpr
      (TupleType (FloatType) (FloatType) (FloatType))
      (VarExpr (FloatType) a)
      (FloatExpr (FloatType) 75)
      (VarExpr (FloatType) b))
     (TupleLiteralExpr
      (TupleType
       (IntType)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2))
      (VarExpr (IntType) d)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       i)))
    2)
   (TupleIndexExpr
    (TupleType
     (IntType)
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
    (TupleLiteralExpr
     (TupleType
      (ArrayType (ArrayType (IntType) 1) 2)
      (TupleType
       (IntType)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2))
      (BoolType))
     (VarExpr (ArrayType (ArrayType (IntType) 1) 2) c)
     (TupleLiteralExpr
      (TupleType
       (IntType)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2))
      (VarExpr (IntType) e)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       i))
     (BinopExpr (BoolType) (FalseExpr (BoolType)) != (FalseExpr (BoolType))))
    1))
  1)
 "l.png")
(LetCmd
 (ArgLValue (ArrayArgument l m))
 (ArrayIndexExpr
  (ArrayType (IntType) 1)
  (TupleIndexExpr
   (ArrayType (ArrayType (IntType) 1) 2)
   (TupleIndexExpr
    (TupleType (ArrayType (ArrayType (IntType) 1) 2) (TupleType) (IntType))
    (TupleLiteralExpr
     (TupleType
      (FloatType)
      (TupleType (ArrayType (ArrayType (IntType) 1) 2) (TupleType) (IntType))
      (TupleType (FloatType) (FloatType) (FloatType) (FloatType)))
     (VarExpr (FloatType) a)
     (TupleLiteralExpr
      (TupleType (ArrayType (ArrayType (IntType) 1) 2) (TupleType) (IntType))
      (VarExpr (ArrayType (ArrayType (IntType) 1) 2) c)
      (CallExpr (TupleType) f)
      (IntExpr (IntType) 512))
     (ArrayIndexExpr
      (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       i)
      (VarExpr (IntType) k)
      (VarExpr (IntType) argnum)))
    1)
   0)
  (VarExpr (IntType) j)
  (ArrayIndexExpr
   (IntType)
   (TupleIndexExpr
    (ArrayType (IntType) 3)
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      l
      (VarExpr (IntType) k)
      m
      (VarExpr (IntType) k)
      n
      (VarExpr (IntType) j)
      (VarExpr (IntType) m)))
    0)
   (ArrayIndexExpr
    (IntType)
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     l
     (UnopExpr (IntType) - (VarExpr (IntType) j))
     m
     (VarExpr (IntType) e)
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (VarExpr (IntType) e)))
    (UnopExpr (IntType) - (VarExpr (IntType) argnum))
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) j))
     1))
   (IntExpr (IntType) 854)
   (VarExpr (IntType) k))))
(AssertCmd
 (BinopExpr
  (BoolType)
  (TupleIndexExpr
   (IntType)
   (TupleIndexExpr
    (TupleType (IntType) (IntType) (IntType))
    (TupleLiteralExpr
     (TupleType (TupleType) (TupleType (IntType) (IntType) (IntType)))
     (CallExpr (TupleType) f)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType) (IntType))
      (VarExpr (IntType) m)
      (IntExpr (IntType) 50)
      (VarExpr (IntType) k)))
    1)
   1)
  <=
  (VarExpr (IntType) d))
 "n")
