(PrintCmd "a")
(LetCmd (ArgLValue (VarArgument a)) (VarExpr (ArrayType (IntType) 1) args))
(LetCmd
 (ArgLValue (VarArgument b))
 (TupleLiteralExpr
  (TupleType (FloatType) (IntType))
  (CallExpr
   (FloatType)
   exp
   (CallExpr
    (FloatType)
    sin
    (CallExpr
     (FloatType)
     atan2
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 49))
     (CallExpr (FloatType) log (FloatExpr (FloatType) 7)))))
  (UnopExpr
   (IntType)
   -
   (IfExpr
    (IntType)
    (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
    (IfExpr
     (IntType)
     (TrueExpr (BoolType))
     (BinopExpr (IntType) (IntExpr (IntType) 317) - (VarExpr (IntType) argnum))
     (VarExpr (IntType) argnum))
    (IfExpr
     (IntType)
     (FalseExpr (BoolType))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 9)))))))
(LetCmd
 (ArgLValue (VarArgument c))
 (BinopExpr
  (BoolType)
  (CallExpr
   (FloatType)
   acos
   (CallExpr
    (FloatType)
    acos
    (BinopExpr
     (FloatType)
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 0))
     +
     (CallExpr (FloatType) log (FloatExpr (FloatType) 17)))))
  <
  (SumLoopExpr
   (FloatType)
   c
   (TupleIndexExpr (IntType) (VarExpr (TupleType (FloatType) (IntType)) b) 1)
   d
   (IntExpr (IntType) 48)
   e
   (BinopExpr
    (IntType)
    (VarExpr (IntType) argnum)
    /
    (BinopExpr
     (IntType)
     (VarExpr (IntType) argnum)
     %
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (IntExpr (IntType) 127))))
   (UnopExpr
    (FloatType)
    -
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) to_float (VarExpr (IntType) d)))))))
(AssertCmd (VarExpr (BoolType) c) "d")
(LetCmd
 (ArgLValue (ArrayArgument d e f))
 (IfExpr
  (ArrayType (IntType) 2)
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 77)))
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 60))))
   <=
   (CallExpr
    (FloatType)
    tan
    (CallExpr (FloatType) to_float (VarExpr (IntType) argnum))))
  (IfExpr
   (ArrayType (IntType) 2)
   (BinopExpr
    (BoolType)
    (UnopExpr (IntType) - (VarExpr (IntType) argnum))
    <=
    (IntExpr (IntType) 156))
   (IfExpr
    (ArrayType (IntType) 2)
    (IfExpr
     (BoolType)
     (VarExpr (BoolType) c)
     (VarExpr (BoolType) c)
     (BinopExpr (BoolType) (VarExpr (BoolType) c) && (TrueExpr (BoolType))))
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     d
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     e
     (BinopExpr (IntType) (VarExpr (IntType) argnum) % (IntExpr (IntType) 88))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 16)))
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     d
     (VarExpr (IntType) argnum)
     e
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) argnum))
     (VarExpr (IntType) argnum)))
   (IfExpr
    (ArrayType (IntType) 2)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 99))
     >=
     (FloatExpr (FloatType) 49))
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     d
     (VarExpr (IntType) argnum)
     e
     (VarExpr (IntType) argnum)
     (SumLoopExpr
      (IntType)
      f
      (VarExpr (IntType) e)
      g
      (VarExpr (IntType) e)
      h
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) argnum)))
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     d
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     e
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 29))
     (BinopExpr (IntType) (VarExpr (IntType) argnum) / (IntExpr (IntType) 953)))))
  (ArrayLoopExpr
   (ArrayType (IntType) 2)
   d
   (UnopExpr
    (IntType)
    -
    (BinopExpr
     (IntType)
     (UnopExpr (IntType) - (IntExpr (IntType) 899))
     %
     (IntExpr (IntType) 512)))
   e
   (IfExpr
    (IntType)
    (VarExpr (BoolType) c)
    (IntExpr (IntType) 502)
    (SumLoopExpr
     (IntType)
     d
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (IntExpr (IntType) 512)))
   (VarExpr (IntType) e))))
(ShowCmd (VarExpr (IntType) f))
(FnCmd
 g
 ((VarBinding (ArrayArgument h i j k) (ArrayType (IntType) 3))
  (VarBinding (ArrayArgument l m) (ArrayType (ArrayType (IntType) 3) 1)))
 (FloatType)
 (LetStmt
  (TupleLValue
   (TupleLValue (TupleLValue (ArgLValue (ArrayArgument n o p q))))
   (TupleLValue
    (TupleLValue
     (ArgLValue (ArrayArgument r s t u))
     (ArgLValue (ArrayArgument v w x))
     (TupleLValue))
    (TupleLValue (ArgLValue (VarArgument y)))))
  (TupleLiteralExpr
   (TupleType
    (TupleType (TupleType (ArrayType (IntType) 3)))
    (TupleType
     (TupleType (ArrayType (IntType) 3) (ArrayType (IntType) 2) (TupleType))
     (TupleType (IntType))))
   (TupleIndexExpr
    (TupleType (TupleType (ArrayType (IntType) 3)))
    (TupleLiteralExpr
     (TupleType (TupleType (TupleType (ArrayType (IntType) 3))) (FloatType))
     (TupleLiteralExpr
      (TupleType (TupleType (ArrayType (IntType) 3)))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 3))
       (VarExpr (ArrayType (IntType) 3) h)))
     (BinopExpr
      (FloatType)
      (CallExpr (FloatType) atan (FloatExpr (FloatType) 69))
      *
      (CallExpr (FloatType) exp (FloatExpr (FloatType) 57))))
    0)
   (TupleLiteralExpr
    (TupleType
     (TupleType (ArrayType (IntType) 3) (ArrayType (IntType) 2) (TupleType))
     (TupleType (IntType)))
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3) (ArrayType (IntType) 2) (TupleType))
     (ArrayIndexExpr
      (ArrayType (IntType) 3)
      (ArrayLoopExpr
       (ArrayType (ArrayType (IntType) 3) 2)
       n
       (VarExpr (IntType) i)
       o
       (VarExpr (IntType) m)
       (VarExpr (ArrayType (IntType) 3) h))
      (IntExpr (IntType) 911)
      (UnopExpr (IntType) - (VarExpr (IntType) f)))
     (IfExpr
      (ArrayType (IntType) 2)
      (VarExpr (BoolType) c)
      (ArrayLoopExpr
       (ArrayType (IntType) 2)
       n
       (IntExpr (IntType) 293)
       o
       (VarExpr (IntType) j)
       (VarExpr (IntType) m))
      (VarExpr (ArrayType (IntType) 2) d))
     (TupleIndexExpr
      (TupleType)
      (TupleLiteralExpr (TupleType (TupleType)) (TupleLiteralExpr (TupleType)))
      0))
    (ArrayIndexExpr
     (TupleType (IntType))
     (ArrayLoopExpr
      (ArrayType (TupleType (IntType)) 1)
      n
      (BinopExpr (IntType) (VarExpr (IntType) j) - (VarExpr (IntType) argnum))
      (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) m)))
     (UnopExpr
      (IntType)
      -
      (ArrayIndexExpr
       (IntType)
       (VarExpr (ArrayType (IntType) 1) a)
       (VarExpr (IntType) k)))))))
 (LetStmt
  (ArgLValue (ArrayArgument z A B C))
  (ArrayIndexExpr
   (ArrayType (IntType) 3)
   (ArrayLoopExpr
    (ArrayType (ArrayType (IntType) 3) 3)
    z
    (VarExpr (IntType) j)
    A
    (ArrayIndexExpr
     (IntType)
     (VarExpr (ArrayType (IntType) 1) a)
     (VarExpr (IntType) p))
    B
    (VarExpr (IntType) x)
    (TupleIndexExpr
     (ArrayType (IntType) 3)
     (IfExpr
      (TupleType (ArrayType (IntType) 3) (IntType))
      (BinopExpr (BoolType) (VarExpr (IntType) q) == (VarExpr (IntType) x))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 3) (IntType))
       (VarExpr (ArrayType (IntType) 3) r)
       (VarExpr (IntType) w))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 3) (IntType))
       (VarExpr (ArrayType (IntType) 3) n)
       (VarExpr (IntType) y)))
     0))
   (VarExpr (IntType) p)
   (VarExpr (IntType) y)
   (VarExpr (IntType) o)))
 (LetStmt
  (ArgLValue (ArrayArgument D E F))
  (ArrayIndexExpr
   (ArrayType (IntType) 2)
   (ArrayLoopExpr
    (ArrayType (ArrayType (IntType) 2) 1)
    D
    (CallExpr
     (IntType)
     to_int
     (CallExpr
      (FloatType)
      log
      (CallExpr (FloatType) log (FloatExpr (FloatType) 39))))
    (IfExpr
     (ArrayType (IntType) 2)
     (BinopExpr (BoolType) (VarExpr (IntType) t) != (VarExpr (IntType) i))
     (VarExpr (ArrayType (IntType) 2) d)
     (IfExpr
      (ArrayType (IntType) 2)
      (UnopExpr (BoolType) ! (VarExpr (BoolType) c))
      (IfExpr
       (ArrayType (IntType) 2)
       (VarExpr (BoolType) c)
       (VarExpr (ArrayType (IntType) 2) d)
       (VarExpr (ArrayType (IntType) 2) v))
      (VarExpr (ArrayType (IntType) 2) d))))
   (VarExpr (IntType) j)))
 (LetStmt
  (ArgLValue (ArrayArgument G H I))
  (VarExpr (ArrayType (IntType) 2) v))
 (ReturnStmt
  (ArrayIndexExpr
   (FloatType)
   (ArrayLoopExpr
    (ArrayType (FloatType) 2)
    J
    (VarExpr (IntType) t)
    K
    (VarExpr (IntType) o)
    (IfExpr
     (FloatType)
     (TupleIndexExpr
      (BoolType)
      (TupleLiteralExpr
       (TupleType (IntType) (BoolType))
       (VarExpr (IntType) w)
       (VarExpr (BoolType) c))
      1)
     (SumLoopExpr
      (FloatType)
      L
      (SumLoopExpr
       (IntType)
       L
       (VarExpr (IntType) F)
       M
       (VarExpr (IntType) B)
       (VarExpr (IntType) p))
      M
      (VarExpr (IntType) e)
      N
      (VarExpr (IntType) C)
      (CallExpr (FloatType) asin (FloatExpr (FloatType) 6)))
     (BinopExpr
      (FloatType)
      (FloatExpr (FloatType) 83)
      +
      (CallExpr
       (FloatType)
       g
       (VarExpr (ArrayType (IntType) 3) n)
       (VarExpr (ArrayType (ArrayType (IntType) 3) 1) l)))))
   (TupleIndexExpr
    (IntType)
    (ArrayIndexExpr
     (TupleType (IntType))
     (ArrayLoopExpr
      (ArrayType (TupleType (IntType)) 3)
      J
      (ArrayIndexExpr
       (IntType)
       (VarExpr (ArrayType (IntType) 3) h)
       (VarExpr (IntType) k)
       (VarExpr (IntType) s)
       (VarExpr (IntType) f))
      K
      (VarExpr (IntType) u)
      L
      (VarExpr (IntType) f)
      (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) K)))
     (VarExpr (IntType) F)
     (VarExpr (IntType) s)
     (VarExpr (IntType) o))
    0)
   (VarExpr (IntType) E))))
(LetCmd (ArgLValue (ArrayArgument h i)) (VarExpr (ArrayType (IntType) 1) args))
(TimeCmd
 (LetCmd
  (ArgLValue (VarArgument j))
  (CallExpr
   (IntType)
   to_int
   (CallExpr
    (FloatType)
    asin
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 2)))))))
(ReadCmd "k.png" (VarArgument k))
(AssertCmd (FalseExpr (BoolType)) "l")
