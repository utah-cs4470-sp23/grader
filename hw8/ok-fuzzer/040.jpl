let a[b] = args
let c[d, e, f] = {(tan(73.52) >= (sum[c : (argnum + 754)] sqrt(82.92))), sqrt((asin(74.29) - 3.29)), (array[c : 306, d : b, e : b] (array[f : 211, g : d, h : argnum] e))[argnum, to_int(70.2), argnum]}{2}
write image (array[g : (e % (if (false && (e <= 404)) then b else 318)), h : e] {to_float((sum[i : 987, j : d] (e % b))), atan2(asin(to_float(d)), tan(23.63)), sqrt(exp(to_float(272))), asin(57.07)}) to "g.png"

let {} = {}
fn g() : bool {
  let h = cos((- sin(pow(80.77, acos(12.02)))))
  let i = 201
  let {{j, k[l, m]}} = (array[j : (sum[j : d, k : (argnum * e), l : 156] d), k : e] {{f, (array[l : f, m : e] f)}})[429, (- to_int((sum[j : (if g() then d else b), k : e, l : (f - 132)] log(h))))]
  let n = j
  return (! (if (array[o : (- d), p : i] (if false then true else g()))[f, (m - n)] then ((sum[o : (b / m), p : 43] j) >= n) else (if false then (h < 26.38) else (log(h) == pow(h, 83.63)))))
}

let h[i] = [(array[h : {e, to_int(94.94)}{1}, i : b, j : b] pow((if (! true) then to_float(679) else tan(49.8)), (if (j != j) then to_float(i) else atan(61.44)))), (if (if (true && (argnum >= b)) then ((! true) || (! false)) else {d, false, d}{1}) then (array[h : d, i : d, j : d] (- to_float(461))) else (array[h : f, i : b, j : b] (to_float(b) * (- 10.1))))]
let j = (to_float((- b)) == log(exp(to_float((- d)))))
write image [(array[k : (if g() then argnum else (- i)), l : argnum] {cos(14.52), to_float(b), pow(13.2, 7.93), exp(21.88)}), (array[k : (if j then c else c)[(- f), (f * d), b], l : b] {cos(45.63), tan(66.06), to_float(f), cos(4.0)})][to_int(log({66.95}{0}))] to "k.png"

let {k[l, m, n], o} = (if (if ([g(), g(), true][(if false then f else b)] || g()) then j else (if (tan(71.32) == to_float(e)) then ((! j) || (! g())) else (if (g() || j) then true else (argnum != b)))) then (if {j, 715}{0} then {argnum, {c, e}, (sum[k : d, l : e] 54.94)} else {argnum, {c, e}, tan(7.9)}){1} else {(array[k : b, l : d, m : 524] d), 264})
read image "p.png" to p

show args

fn q(r : float, { s : float }, { t : {int[],float[,,]}, u : bool }) : float[,] {
  let v[w, x, y] = (array[v : argnum, w : n, x : f] {h[n], m})[(if g() then (if j then e else m) else o), (sum[v : f, w : 291, x : o] (array[y : w, z : i] y)[x, 553]), (d + b)]{0}
  assert j, "z"
  let {z, A[B, C, D]} = {[false, (if (a[n] == x) then false else g())], {(y > x), v, log(atan(34.38))}{1}}
  let E = e
  return {acos(66.88), e, (array[F : (if true then e else y), G : (- f)] (array[H : f, I : B] r))}{2}[d, (if (if (if true then g() else g()) then (! (! u)) else (array[F : argnum, G : B] j)[b, l]) then (if true then (if u then a else a) else a)[E] else n)]
}

