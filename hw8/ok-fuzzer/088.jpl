print "a"

let {a, b[c, d, e]} = {(array[a : {argnum}{0}, b : (- (824 + 124)), c : 99] to_float(b)), ({false, false}{1} || {false}{0}), {[(argnum % 948), (argnum * 723), 467], (array[a : argnum, b : (if true then 558 else 432), c : (- argnum)] (b > c))}}{2}
assert (if (argnum >= (if (! false) then {230} else {747}){0}) then ((sum[f : d, g : argnum] (- (argnum * c))) == e) else ((if (! (728 < e)) then (759 != argnum) else {c, true}{1}) != (! (array[f : argnum, g : d] true)[c, (- d)]))), "f"
fn f(g[h, i] : {int,int,float}[,], j : int) : int {
  let k = (- atan2((tan((- 65.21)) - sin(to_float(j))), (sum[k : ((argnum * c) + j)] atan((20.71 / 6.93)))))
  return j
  let l[m, n] = (if ((h >= h) == false) then {to_float(argnum), (array[l : h, m : argnum] g)}{1} else {b, (array[l : i, m : e] g), k}{1})[(- f({g}{0}, ((sum[l : argnum] argnum) - e))), c]
  let {o[p], q[r, s, t]} = {(array[o : d, p : argnum, q : h] {args, b})}{0}[to_int(tan(sqrt(atan(k)))), (if (array[o : e] (! true))[((if false then e else i) + (sum[o : argnum, p : d, q : j] d))] then f((array[o : d, p : n] {argnum, p, 9.64}), (sum[o : m, p : i] 423)) else (h + m)), (if ((to_float(argnum) != to_float(i)) || (! true)) then to_int(cos(acos(36.98))) else i)]
  return d
}

fn g(h : float) : {float,float,bool}[,] {
  let i = d
  let j = atan(asin(atan2(39.19, sqrt(cos(h)))))
  let {{k[l, m, n]}, {o[p, q], r, s}, t} = (if true then (if (! (if true then (c >= i) else false)) then {{b}, {(array[k : argnum, l : c] l), e, {}}, b[argnum, c, d]} else {(if false then {b} else {b}), {(array[k : argnum, l : argnum] e), a[c], {}}, (to_float(i) >= (sum[k : i, l : argnum] 87.15))}) else {(if (if false then false else (d == d)) then {b} else {b}), {(array[k : d, l : (sum[k : argnum] d)] (507 - k)), (sum[k : (- e), l : 579, m : to_int(h)] argnum), (if b[500, i, i] then {} else {})}, (! (75.71 <= cos(h)))})
  assert true, "u"
  return {(array[u : (sum[u : argnum, v : n] e), v : (if false then e else c), w : argnum] g(82.65)), {}}{0}[i, (if (if (! (t && t)) then t else ((sum[u : q, v : p, w : p] j) <= asin(16.13))) then (if (t != t) then (array[u : m, v : q, w : 916] i) else (array[u : r, v : argnum, w : q] p))[p, l, m] else to_int(sin(h))), d]
}

let h = (array[h : argnum, i : (- (if (atan(3.62) != cos(55.05)) then argnum else {{}, argnum}{1}))] false)
let i = h
let j = argnum
print "k"

fn k() : bool {
  let {l, m} = (if (! (! (! true))) then (array[l : (- 265), m : c, n : (- j)] {b, k()}) else (if (cos(11.81) != (- 0.18)) then (array[l : (j / j), m : j, n : j] {b, false}) else (array[l : c, m : j, n : e] {b, false})))[c, f((array[l : e, m : (array[l : d, m : e, n : c] c)[d, c, (if k() then e else j)]] {l, l, asin(57.85)}), j), ((array[l : j, m : (if true then e else j), n : e] e)[910, {d}{0}, d] % j)]
  assert m, "n"
  let n[o, p, q] = (if ((! (285 == (if true then c else argnum))) || h[883, 805]) then {argnum, b}{1} else (if k() then l else (if false then {d, b}{1} else {b}{0})))
  let r = args
  return (d <= 53)
}

fn l(m : int[]) : int {
  let n[o] = a
  let p = o
  let q = exp(sqrt(asin((sum[q : (sum[q : e, r : o, s : argnum] d), r : c] log(52.27)))))
  let r = 145
  return e
}

let {} = (array[m : 929, n : (if (85.41 >= 1.73) then d else e), o : (array[m : e, n : e] 309)[e, argnum]] {{}, d})[to_int(acos(to_float(d))), l(args), c]{0}
