fn a(b : float, { c : {}, d[e, f, g] : int[,,] }) : {float,int,int} {
  let h = false
  let i = e
  assert {cos(to_float(i)), {to_float(e), (30 >= i), (if true then args else args)}, false}{1}{1}, "j"
  assert (if (if (((if false then h else true) || (false && h)) || h) then ((i != (sum[j : e, k : g, l : g] 969)) || (h && (i != e))) else (71.37 > (b - sin(43.48)))) then (g <= i) else h), "j"
  return (if (array[j : (if (argnum != f) then e else (507 + e)), k : f] (if h then (i >= j) else (h || h)))[i, (- (if h then (if h then e else 956) else argnum))] then a(acos(35.63), {c, (if h then (if true then d else d) else (array[j : argnum, k : f, l : i] argnum))}) else a((sqrt(69.43) - to_float(f)), {c, (array[j : g, k : argnum, l : 637] d)[(i % argnum), (argnum % e), g]}))
}

fn b() : {bool} {
  let c[d, e] = (array[c : to_int(atan(cos(57.61))), d : 927] (array[e : (- argnum), f : {b(), argnum}{1}] ((- f) >= (if true then e else c))))[argnum, (- 853)]
  return {(if c[to_int(17.35), 631] then {(239 > 747), (argnum == 950)} else {b(){0}, c[d, 186]}){1}}
  let f[g] = args
  let h[i] = (if (! ((g <= d) && false)) then (if (if false then (argnum >= argnum) else (e == e)) then {(false || true), f} else {(argnum <= 588), f}) else {f, {false, args}}{1}){1}
  return {[{false}]}{0}[(array[j : g, k : (- e)] {i})[(to_int(99.4) / d), (sum[j : argnum, k : to_int(64.12)] e)]{0}]
}

let c[d] = (if (if false then ((88.37 < acos(43.33)) || [true][(- argnum)]) else false) then args else (if ((- 245) != (- argnum)) then (array[c : (sum[c : 807, d : 883, e : argnum] c), d : to_int(76.99), e : (argnum + argnum)] args) else (array[c : 440, d : argnum, e : (sum[c : argnum] argnum)] (array[f : argnum] d)))[((array[c : 267, d : argnum] 232)[args[argnum], (- 302)] % (if false then (- 364) else (- argnum))), {(argnum - argnum)}{0}, (- {673}{0})])
fn e({ f : {}, g : {{bool,float,bool},{}} }, h[i, j] : {float,bool}[,]) : int {
  return (d + (- ((i - j) * argnum)))
  let k = {70.76, (- cos(acos(94.1))), pow(acos(to_float(argnum)), to_float((- j)))}{2}
  let l[m, n, o] = (if b(){0} then (if ((to_float(d) >= 72.64) || (to_float(d) > k)) then {(array[l : i, m : i, n : 758] i)}{0} else (array[l : j, m : i] (array[n : argnum, o : m, p : j] l))[(argnum % j), j]) else (if (if (false && true) then (array[l : i, m : j] false) else (array[l : j, m : argnum] true))[632, e({f, g}, h)] then {(array[l : argnum, m : j, n : d] 799)}{0} else [(array[l : d, m : 353, n : 636] d), (array[l : d, m : argnum, n : i] d)][917]))
  let p[q, r, s] = (if (array[p : (- m)] false)[d] then {(array[p : d, q : n, r : argnum] acos(15.36))} else {(array[p : j, q : m, r : (sum[p : argnum, q : o, r : i] 514)] to_float(i))}){0}
  return 755
}

fn f() : int {
  let {g, {{h[i]}}} = {tan(cos((sum[g : d, h : 40] sin(25.71)))), [{{args}}][argnum]}
  return f()
  let j[k, l, m] = {{argnum, (array[j : 436, k : argnum, l : i] h), tan(39.05)}, argnum, log(to_float(argnum))}{0}{1}
  let n = (if false then (if (m > k) then {j} else {j}){0} else (array[n : (- f()), o : {{}, i}{1}, p : (sum[n : m, o : i] (- d))] args))[d, to_int(sin(tan(78.58))), i]
  return l
}

let {{}, {}} = (array[g : (if (true == false) then f() else argnum), h : (to_int(97.32) * (- d)), i : (- argnum)] [{{}, {}}])[(sum[g : (- argnum), h : (sum[g : (argnum + argnum)] (- f()))] f()), f(), {777, (- d), b()}{1}][argnum]
fn g() : int {
  assert (sqrt(acos(asin(77.19))) != sin({cos(70.49)}{0})), "h"
  assert true, "h"
  let {h, i, j} = (if (! {b()}{0}{0}) then {{log(98.53), to_float(f()), to_float(argnum)}, false}{0} else {atan(atan(35.23)), sin(tan(cos(4.83))), asin(to_float(903))})
  let k[l, m] = {exp(acos((sum[k : g(), l : f(), m : d] j))), (array[k : {true, d}{1}, l : (sum[k : (if true then g() else d)] to_int(i))] (array[m : g(), n : k] argnum)[(argnum * 518), c[599]])}{1}
  return (sum[n : argnum] argnum)
}

let h[i] = (if (array[h : to_int(1.76), i : (sum[h : f(), i : 232] h), j : (660 - g())] (argnum < i))[{f()}{0}, f(), (- (sum[h : f(), i : d] d))] then (if ((166 == f()) || (! true)) then {c} else {(array[h : d] g())}) else (if ((! false) && b(){0}) then (if (false || true) then {c} else {c}) else {c})){0}
let j = i
let k[l, m] = {(if ((! true) && (! true)) then (if false then (array[k : i, l : argnum] k) else (array[k : argnum, l : f()] i)) else (array[k : f(), l : (sum[k : f(), l : j, m : i] i)] (if false then j else j)))}{0}
print "n"

let {n[o, p], {{q}}} = (array[n : d, o : to_int(tan(pow(4.33, 80.59))), p : {g()}{0}] {(if false then k else (array[q : argnum, r : p] i)), (if true then {b()} else {b()})})[(sum[n : d, o : to_int(45.3)] l), m, m]
