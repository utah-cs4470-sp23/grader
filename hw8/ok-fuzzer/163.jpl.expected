(LetCmd (TupleLValue) (TupleLiteralExpr (TupleType)))
(LetCmd
 (ArgLValue (VarArgument a))
 (CallExpr
  (FloatType)
  atan2
  (CallExpr
   (FloatType)
   atan
   (CallExpr
    (FloatType)
    acos
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 97)))))
  (CallExpr
   (FloatType)
   atan
   (CallExpr
    (FloatType)
    sqrt
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 54)))))))
(LetCmd
 (ArgLValue (VarArgument b))
 (ArrayLoopExpr
  (ArrayType (IntType) 3)
  b
  (BinopExpr
   (IntType)
   (TupleIndexExpr
    (IntType)
    (IfExpr
     (TupleType (BoolType) (IntType))
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType)))
     (TupleLiteralExpr
      (TupleType (BoolType) (IntType))
      (FalseExpr (BoolType))
      (IntExpr (IntType) 158))
     (TupleLiteralExpr
      (TupleType (BoolType) (IntType))
      (TrueExpr (BoolType))
      (VarExpr (IntType) argnum)))
    1)
   -
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 1)
     (TrueExpr (BoolType))
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      b
      (IntExpr (IntType) 878)
      (IntExpr (IntType) 967))
     (VarExpr (ArrayType (IntType) 1) args))
    (SumLoopExpr
     (IntType)
     b
     (IntExpr (IntType) 584)
     c
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      -
      (VarExpr (IntType) argnum))
     d
     (SumLoopExpr
      (IntType)
      b
      (IntExpr (IntType) 762)
      c
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) b))
     (VarExpr (IntType) b))))
  c
  (UnopExpr
   (IntType)
   -
   (UnopExpr
    (IntType)
    -
    (SumLoopExpr
     (IntType)
     b
     (VarExpr (IntType) argnum)
     c
     (BinopExpr (IntType) (IntExpr (IntType) 80) % (VarExpr (IntType) argnum))
     (VarExpr (IntType) argnum))))
  d
  (VarExpr (IntType) argnum)
  (BinopExpr
   (IntType)
   (IntExpr (IntType) 482)
   *
   (CallExpr
    (IntType)
    to_int
    (CallExpr
     (FloatType)
     sqrt
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 34)))))))
(FnCmd
 c
 ((VarBinding
   (VarArgument d)
   (ArrayType (TupleType (FloatType) (FloatType)) 3))
  (TupleBinding
   (VarBinding (ArrayArgument e f g) (ArrayType (IntType) 2))
   (TupleBinding (VarBinding (VarArgument h) (IntType)))
   (TupleBinding
    (TupleBinding
     (VarBinding
      (VarArgument i)
      (TupleType (ArrayType (BoolType) 2) (BoolType))))
    (TupleBinding
     (VarBinding (VarArgument j) (TupleType))
     (VarBinding (ArrayArgument k l m) (ArrayType (ArrayType (FloatType) 1) 2)))))
  (VarBinding (VarArgument n) (IntType)))
 (IntType)
 (LetStmt
  (ArgLValue (VarArgument o))
  (CallExpr
   (FloatType)
   atan
   (ArrayIndexExpr
    (FloatType)
    (IfExpr
     (ArrayType (FloatType) 1)
     (BinopExpr
      (BoolType)
      (IfExpr
       (BoolType)
       (TrueExpr (BoolType))
       (TrueExpr (BoolType))
       (TrueExpr (BoolType)))
      ||
      (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
     (ArrayLiteralExpr
      (ArrayType (FloatType) 1)
      (FloatExpr (FloatType) 30)
      (UnopExpr (FloatType) - (VarExpr (FloatType) a))
      (CallExpr (FloatType) atan (FloatExpr (FloatType) 41)))
     (ArrayLiteralExpr
      (ArrayType (FloatType) 1)
      (UnopExpr (FloatType) - (VarExpr (FloatType) a))
      (CallExpr (FloatType) atan (VarExpr (FloatType) a))
      (CallExpr (FloatType) atan (FloatExpr (FloatType) 60))))
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      o
      (IfExpr
       (IntType)
       (TrueExpr (BoolType))
       (VarExpr (IntType) n)
       (VarExpr (IntType) n))
      p
      (SumLoopExpr
       (IntType)
       o
       (IntExpr (IntType) 769)
       p
       (VarExpr (IntType) n)
       (VarExpr (IntType) o))
      (VarExpr (IntType) h))
     (VarExpr (IntType) h)
     (UnopExpr (IntType) - (VarExpr (IntType) m))))))
 (ReturnStmt (VarExpr (IntType) g))
 (LetStmt
  (ArgLValue (ArrayArgument p q r s))
  (TupleIndexExpr
   (ArrayType (TupleType (FloatType) (FloatType)) 3)
   (ArrayIndexExpr
    (TupleType (ArrayType (TupleType (FloatType) (FloatType)) 3))
    (ArrayLoopExpr
     (ArrayType
      (TupleType (ArrayType (TupleType (FloatType) (FloatType)) 3))
      1)
     p
     (VarExpr (IntType) argnum)
     (IfExpr
      (TupleType (ArrayType (TupleType (FloatType) (FloatType)) 3))
      (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType)))
      (TupleLiteralExpr
       (TupleType (ArrayType (TupleType (FloatType) (FloatType)) 3))
       (VarExpr (ArrayType (TupleType (FloatType) (FloatType)) 3) d))
      (TupleLiteralExpr
       (TupleType (ArrayType (TupleType (FloatType) (FloatType)) 3))
       (VarExpr (ArrayType (TupleType (FloatType) (FloatType)) 3) d))))
    (SumLoopExpr
     (IntType)
     p
     (BinopExpr (IntType) (VarExpr (IntType) argnum) / (VarExpr (IntType) m))
     q
     (IntExpr (IntType) 385)
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (IntExpr (IntType) 437)
      (VarExpr (IntType) l))))
   0))
 (AssertStmt
  (TupleIndexExpr
   (BoolType)
   (TupleLiteralExpr
    (TupleType (BoolType) (IntType))
    (BinopExpr
     (BoolType)
     (IntExpr (IntType) 498)
     <=
     (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
    (VarExpr (IntType) f))
   0)
  "t")
 (ReturnStmt (VarExpr (IntType) n)))
(LetCmd (TupleLValue) (TupleLiteralExpr (TupleType)))
(LetCmd
 (ArgLValue (VarArgument d))
 (BinopExpr
  (BoolType)
  (TrueExpr (BoolType))
  ||
  (TupleIndexExpr
   (BoolType)
   (TupleLiteralExpr
    (TupleType (BoolType) (BoolType) (ArrayType (IntType) 3))
    (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
    (FalseExpr (BoolType))
    (VarExpr (ArrayType (IntType) 3) b))
   1)))
(LetCmd
 (ArgLValue (VarArgument e))
 (CallExpr
  (FloatType)
  atan
  (CallExpr
   (FloatType)
   log
   (CallExpr
    (FloatType)
    cos
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) sin (VarExpr (FloatType) a)))))))
(LetCmd
 (ArgLValue (ArrayArgument f g h))
 (ArrayLoopExpr
  (ArrayType (ArrayType (IntType) 1) 2)
  f
  (TupleIndexExpr
   (IntType)
   (TupleIndexExpr
    (TupleType (IntType))
    (TupleLiteralExpr
     (TupleType (TupleType (IntType)))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum)))
    0)
   0)
  g
  (VarExpr (IntType) argnum)
  (VarExpr (ArrayType (IntType) 1) args)))
(AssertCmd
 (IfExpr
  (BoolType)
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    atan2
    (CallExpr
     (FloatType)
     to_float
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 3) b)
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 382)
      (VarExpr (IntType) g)))
    (VarExpr (FloatType) e))
   >=
   (SumLoopExpr
    (FloatType)
    i
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 40)))
    j
    (VarExpr (IntType) g)
    (SumLoopExpr
     (FloatType)
     k
     (UnopExpr (IntType) - (VarExpr (IntType) g))
     (CallExpr (FloatType) asin (VarExpr (FloatType) e)))))
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    tan
    (CallExpr
     (FloatType)
     to_float
     (UnopExpr (IntType) - (IntExpr (IntType) 187))))
   ==
   (CallExpr
    (FloatType)
    acos
    (CallExpr (FloatType) acos (FloatExpr (FloatType) 61))))
  (VarExpr (BoolType) d))
 "i")
(AssertCmd (FalseExpr (BoolType)) "i")
(LetCmd (ArgLValue (VarArgument i)) (VarExpr (FloatType) a))
(PrintCmd "j")
