fn a({ { b : int, c : {{int,int}} }, {  } }, { {  }, {  } }, { { { d : int, {  } }, e[f, g] : float[,], h : {int}[,] }, i : bool }) : bool[,,] {
  let {{j, k[l, m, n], o}} = (array[j : g, k : d] {{cos(85.58), (array[l : b, m : k, n : argnum] 47.46), (- b)}})[b, to_int(to_float(d))]
  let p = atan(((if (i && false) then acos(sqrt(j)) else pow(18.32, (- 73.81))) - atan2(atan2((- j), tan(30.07)), tan(to_float(n)))))
  return {40.05, (p <= tan(p)), [(array[q : d, r : m, s : f] true)]}{2}[d]
  return {{(array[q : b, r : o, s : f] i)}{0}}{0}
  return (if (array[q : 504, r : 78] (true || i))[argnum, (- (- argnum))] then (array[q : (if (false || i) then (314 - f) else (l % b)), r : n] (array[s : (- b), t : (sum[s : d, t : r, u : q] 873), u : 482] (g < q)))[f, f] else (if (if (! (argnum > 801)) then (to_int(j) < 985) else (! i)) then (if (o <= (if i then m else m)) then (array[q : n, r : to_int(14.97), s : n] i) else (array[q : b, r : (sum[q : d] l), s : o] false)) else (if (p > p) then (array[q : g, r : (if false then 776 else 907), s : 80] i) else (array[q : l, r : n, s : o] (if i then i else i)))))
}

let b[c, d, e] = {(! (if (! false) then (! false) else (false != false))), [(array[b : argnum, c : 639, d : 68] false), (array[b : 341, c : 582, d : argnum] false)][((if true then argnum else 376) - to_int(72.56))]}{1}
let f = (if (! (argnum <= d)) then (d >= (d + argnum)) else ({b, (- 285), false}{2} == (if (! (! true)) then ((769 <= c) || b[d, 512, d]) else (exp(53.68) > to_float(argnum)))))
fn g() : int {
  let {h[i, j]} = (if false then {(if (if (true || false) then true else (! false)) then (array[h : (- argnum), i : (if false then 148 else c)] to_float(argnum)) else (array[h : to_int(40.45), i : c] 13.88))} else (array[h : e, i : g(), j : e] {(array[k : i, l : h] 44.29)})[e, (sum[h : 769, i : (- (- c))] g()), {argnum}{0}])
  let {k[l], m} = {(if f then (array[k : argnum, l : c] args) else (array[k : (argnum - argnum), l : 712] args))[to_int(14.37), e], f}
  let {n} = {d}
  return d
  return e
}

let h = (! (sqrt((sin(21.29) * cos(63.47))) == log((- tan(33.48)))))
let i[j] = args
let k = acos(atan(asin(pow(atan2(81.07, 31.4), sin(96.88)))))
let l = exp(sqrt(log(exp(tan(37.86)))))
let m = c
let n = args
time let {} = (if (if f then b[e, argnum, d] else h) then (if (if f then f else true) then {{}, argnum, l} else {{}, argnum, k}) else {{}, j, l}){0}

let o[p, q] = (if (if false then {f} else {h}){0} then (array[o : (c % 551), p : to_int(to_float(c))] (array[q : to_int(k), r : c] (h && f))) else (array[o : c, p : (g() * e)] (array[q : p, r : o] (if h then false else false))))[c, (if ((h && f) || (f != f)) then (if true then {d, d, m} else {argnum, j, e}) else {(- argnum), m, m}){2}]
