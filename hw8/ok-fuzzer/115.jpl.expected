(TypeCmd a (ArrayType (BoolType) 1))
(ReadCmd "b.png" (VarArgument b))
(FnCmd
 c
 ()
 (FloatType)
 (LetStmt
  (ArgLValue (ArrayArgument d e f))
  (VarExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   b))
 (LetStmt (ArgLValue (VarArgument g)) (FloatExpr (FloatType) 45))
 (LetStmt (ArgLValue (VarArgument h)) (FalseExpr (BoolType)))
 (LetStmt
  (ArgLValue (ArrayArgument i j k))
  (VarExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   d))
 (ReturnStmt
  (CallExpr
   (FloatType)
   exp
   (CallExpr
    (FloatType)
    tan
    (ArrayIndexExpr
     (FloatType)
     (ArrayLiteralExpr
      (ArrayType (FloatType) 1)
      (CallExpr (FloatType) log (FloatExpr (FloatType) 34))
      (UnopExpr (FloatType) - (VarExpr (FloatType) g))
      (CallExpr (FloatType) asin (VarExpr (FloatType) g)))
     (VarExpr (IntType) f))))))
(PrintCmd "d")
(TypeCmd d (BoolType))
(LetCmd
 (ArgLValue (VarArgument e))
 (TupleLiteralExpr
  (TupleType (FloatType))
  (SumLoopExpr
   (FloatType)
   e
   (BinopExpr
    (IntType)
    (IntExpr (IntType) 485)
    /
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      e
      (VarExpr (IntType) argnum)
      f
      (IntExpr (IntType) 654)
      (VarExpr (IntType) f))
     (IntExpr (IntType) 285)
     (BinopExpr (IntType) (VarExpr (IntType) argnum) - (IntExpr (IntType) 810))))
   f
   (ArrayIndexExpr
    (IntType)
    (ArrayLoopExpr
     (ArrayType (IntType) 3)
     e
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     f
     (VarExpr (IntType) argnum)
     g
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 831))
     (VarExpr (IntType) argnum))
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (IntExpr (IntType) 319)
      >=
      (VarExpr (IntType) argnum))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 75)))
    (IntExpr (IntType) 33)
    (IntExpr (IntType) 630))
   g
   (IntExpr (IntType) 269)
   (CallExpr
    (FloatType)
    sqrt
    (CallExpr
     (FloatType)
     log
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 15)))))))
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument f g))
  (ArgLValue (ArrayArgument h i j k))
  (TupleLValue
   (TupleLValue (TupleLValue) (ArgLValue (VarArgument l)))
   (ArgLValue (VarArgument m))
   (ArgLValue (ArrayArgument n o p))))
 (TupleLiteralExpr
  (TupleType
   (ArrayType (IntType) 1)
   (ArrayType (FloatType) 3)
   (TupleType
    (TupleType
     (TupleType)
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
    (FloatType)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)))
  (VarExpr (ArrayType (IntType) 1) args)
  (ArrayLoopExpr
   (ArrayType (FloatType) 3)
   f
   (IntExpr (IntType) 14)
   g
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 1)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType)))
     (IfExpr
      (ArrayType (IntType) 1)
      (TrueExpr (BoolType))
      (VarExpr (ArrayType (IntType) 1) args)
      (VarExpr (ArrayType (IntType) 1) args))
     (VarExpr (ArrayType (IntType) 1) args))
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum))
     0))
   h
   (SumLoopExpr
    (IntType)
    f
    (BinopExpr
     (IntType)
     (VarExpr (IntType) argnum)
     +
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 30)))
    g
    (IfExpr
     (IntType)
     (FalseExpr (BoolType))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 799))
     (SumLoopExpr
      (IntType)
      f
      (IntExpr (IntType) 262)
      g
      (IntExpr (IntType) 702)
      (VarExpr (IntType) argnum)))
    h
    (BinopExpr
     (IntType)
     (SumLoopExpr (IntType) f (IntExpr (IntType) 540) (VarExpr (IntType) f))
     /
     (IntExpr (IntType) 615))
    (IfExpr
     (IntType)
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (VarExpr (IntType) g)))
   (CallExpr
    (FloatType)
    atan2
    (CallExpr
     (FloatType)
     tan
     (IfExpr
      (FloatType)
      (FalseExpr (BoolType))
      (FloatExpr (FloatType) 71)
      (CallExpr (FloatType) c)))
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 19)))))
  (IfExpr
   (TupleType
    (TupleType
     (TupleType)
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
    (FloatType)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (FloatExpr (FloatType) 51)
     <
     (CallExpr (FloatType) log (FloatExpr (FloatType) 35)))
    ||
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     0))
   (TupleLiteralExpr
    (TupleType
     (TupleType
      (TupleType)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     (FloatType)
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
    (TupleLiteralExpr
     (TupleType
      (TupleType)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     (TupleLiteralExpr (TupleType))
     (VarExpr
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      b))
    (CallExpr (FloatType) c)
    (ArrayIndexExpr
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
     (ArrayLoopExpr
      (ArrayType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       3)
      f
      (VarExpr (IntType) argnum)
      g
      (IntExpr (IntType) 744)
      h
      (IntExpr (IntType) 987)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       b))
     (CallExpr (IntType) to_int (CallExpr (FloatType) c))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 10))
     (SumLoopExpr
      (IntType)
      f
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 777))))
   (TupleLiteralExpr
    (TupleType
     (TupleType
      (TupleType)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     (FloatType)
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
    (TupleLiteralExpr
     (TupleType
      (TupleType)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     (IfExpr
      (TupleType)
      (FalseExpr (BoolType))
      (TupleLiteralExpr (TupleType))
      (TupleLiteralExpr (TupleType)))
     (VarExpr
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      b))
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 95)))
    (ArrayLoopExpr
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
     f
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (IntExpr (IntType) 362)
      (IntExpr (IntType) 326))
     g
     (BinopExpr (IntType) (VarExpr (IntType) argnum) * (IntExpr (IntType) 80))
     (ArrayIndexExpr
      (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       b)
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) g)))))))
(LetCmd
 (ArgLValue (ArrayArgument q r s))
 (TupleIndexExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (TupleLiteralExpr
   (TupleType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (BoolType)
    (FloatType))
   (VarExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    l)
   (BinopExpr
    (BoolType)
    (FalseExpr (BoolType))
    &&
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType) (BoolType))
      (VarExpr (IntType) o)
      (VarExpr (IntType) k)
      (TrueExpr (BoolType)))
     2))
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) exp (VarExpr (FloatType) m)))
    (FloatExpr (FloatType) 30)))
  0))
(LetCmd (TupleLValue) (TupleLiteralExpr (TupleType)))
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument t u v))
  (ArgLValue (ArrayArgument w x y))
  (ArgLValue (VarArgument z)))
 (IfExpr
  (TupleType
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   (IntType))
  (IfExpr
   (BoolType)
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 2)
     t
     (VarExpr (IntType) k)
     u
     (VarExpr (IntType) k)
     (FalseExpr (BoolType)))
    (VarExpr (IntType) o)
    (VarExpr (IntType) r))
   (BinopExpr
    (BoolType)
    (TupleIndexExpr
     (FloatType)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType) (FloatType))
      (VarExpr (IntType) s)
      (IntExpr (IntType) 48)
      (VarExpr (FloatType) m))
     2)
    <=
    (FloatExpr (FloatType) 48))
   (FalseExpr (BoolType)))
  (TupleLiteralExpr
   (TupleType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (IntType))
   (VarExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    b)
   (VarExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    b)
   (VarExpr (IntType) r))
  (TupleIndexExpr
   (TupleType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (IntType))
   (IfExpr
    (TupleType
     (TupleType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      (IntType))
     (FloatType))
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType)))
     &&
     (BinopExpr (BoolType) (VarExpr (IntType) j) <= (VarExpr (IntType) o)))
    (TupleLiteralExpr
     (TupleType
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (IntType))
      (FloatType))
     (TupleLiteralExpr
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (IntType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       q)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       l)
      (VarExpr (IntType) p))
     (VarExpr (FloatType) m))
    (TupleLiteralExpr
     (TupleType
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (IntType))
      (FloatType))
     (TupleLiteralExpr
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (IntType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       n)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       l)
      (VarExpr (IntType) r))
     (CallExpr (FloatType) acos (VarExpr (FloatType) m))))
   0)))
(WriteCmd
 (VarExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  t)
 "A.png")
(LetCmd
 (TupleLValue (ArgLValue (VarArgument A)))
 (TupleIndexExpr
  (TupleType (IntType))
  (TupleLiteralExpr
   (TupleType
    (IntType)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (TupleType (IntType)))
   (BinopExpr (IntType) (VarExpr (IntType) k) - (VarExpr (IntType) p))
   (VarExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    w)
   (TupleLiteralExpr
    (TupleType (IntType))
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) log (CallExpr (FloatType) c)))))
  2))
