type a = bool[]
read image "b.png" to b

fn c() : float {
  let d[e, f] = b
  let g = 45.57
  let h = false
  let i[j, k] = d
  return exp(tan([log(34.98), (- g), asin(g)][f]))
}

print "d"

type d = bool
let e = {(sum[e : (485 / (array[e : argnum, f : 654] f)[285, (argnum - 810)]), f : (array[e : (- argnum), f : argnum, g : (if true then argnum else 831)] argnum)[(if (319 >= argnum) then (- argnum) else to_int(75.72)), 33, 630], g : 269] sqrt(log((- 15.71))))}
let {f[g], h[i, j, k], {{{}, l}, m, n[o, p]}} = {args, (array[f : 14, g : (if (false && false) then (if true then args else args) else args)[{argnum}{0}], h : (sum[f : (argnum + to_int(30.86)), g : (if false then (if false then argnum else 799) else (sum[f : 262, g : 702] argnum)), h : ((sum[f : 540] f) / 615)] (if (! false) then (- argnum) else g))] atan2(tan((if false then 71.01 else c())), sin(asin(19.96)))), (if ((51.89 < log(35.72)) || {true}{0}) then {{{}, b}, c(), (array[f : argnum, g : 744, h : 987] b)[to_int(c()), to_int(10.69), (sum[f : argnum] 777)]} else {{(if false then {} else {}), b}, log(sin(95.83)), (array[f : (if false then 362 else 326), g : (argnum * 80)] b[argnum, g])})}
let q[r, s] = {l, (false && {o, k, true}{2}), pow(log(exp(m)), 30.65)}{0}
let {} = {}
let {t[u, v], w[x, y], z} = (if (if (array[t : k, u : k] false)[o, r] then ({s, 48, m}{2} <= 48.0) else false) then {b, b, r} else (if ((true && true) && (j <= o)) then {{q, l, p}, m} else {{n, l, r}, acos(m)}){0})
write image t to "A.png"

let {A} = {(k - p), w, {to_int(log(c()))}}{2}
