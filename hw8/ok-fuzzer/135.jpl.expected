(FnCmd
 a
 ((VarBinding (VarArgument b) (FloatType)))
 (TupleType)
 (LetStmt
  (ArgLValue (VarArgument c))
  (CallExpr
   (FloatType)
   sqrt
   (CallExpr
    (FloatType)
    atan
    (CallExpr (FloatType) exp (FloatExpr (FloatType) 84)))))
 (LetStmt
  (ArgLValue (VarArgument d))
  (CallExpr
   (FloatType)
   atan
   (CallExpr (FloatType) asin (FloatExpr (FloatType) 93))))
 (LetStmt
  (TupleLValue (TupleLValue (ArgLValue (VarArgument e))))
  (TupleIndexExpr
   (TupleType (TupleType (IntType)))
   (IfExpr
    (TupleType (TupleType (TupleType (IntType))) (FloatType))
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (FloatType) (FloatType) (BoolType))
      (CallExpr (FloatType) sin (VarExpr (FloatType) b))
      (FloatExpr (FloatType) 37)
      (UnopExpr (BoolType) ! (TrueExpr (BoolType))))
     2)
    (TupleLiteralExpr
     (TupleType (TupleType (TupleType (IntType))) (FloatType))
     (TupleLiteralExpr
      (TupleType (TupleType (IntType)))
      (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum)))
     (CallExpr
      (FloatType)
      exp
      (IfExpr
       (FloatType)
       (TrueExpr (BoolType))
       (VarExpr (FloatType) b)
       (FloatExpr (FloatType) 35))))
    (TupleLiteralExpr
     (TupleType (TupleType (TupleType (IntType))) (FloatType))
     (TupleLiteralExpr
      (TupleType (TupleType (IntType)))
      (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum)))
     (ArrayIndexExpr
      (FloatType)
      (ArrayLoopExpr
       (ArrayType (FloatType) 3)
       e
       (VarExpr (IntType) argnum)
       f
       (IntExpr (IntType) 780)
       g
       (VarExpr (IntType) argnum)
       (FloatExpr (FloatType) 52))
      (IntExpr (IntType) 742)
      (IfExpr
       (IntType)
       (FalseExpr (BoolType))
       (VarExpr (IntType) argnum)
       (VarExpr (IntType) argnum))
      (IntExpr (IntType) 223))))
   0))
 (LetStmt (ArgLValue (VarArgument f)) (VarExpr (IntType) argnum)))
(TypeCmd b (TupleType (FloatType)))
(AssertCmd
 (TupleIndexExpr
  (BoolType)
  (TupleIndexExpr
   (TupleType (BoolType))
   (TupleLiteralExpr
    (TupleType (TupleType (BoolType)))
    (TupleLiteralExpr
     (TupleType (BoolType))
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))))
   0)
  0)
 "c")
(LetCmd
 (ArgLValue (ArrayArgument c d e f))
 (IfExpr
  (ArrayType (FloatType) 3)
  (TupleIndexExpr
   (BoolType)
   (TupleLiteralExpr
    (TupleType (BoolType) (FloatType))
    (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
    (CallExpr
     (FloatType)
     acos
     (SumLoopExpr
      (FloatType)
      c
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 7))))
   0)
  (TupleIndexExpr
   (ArrayType (FloatType) 3)
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 3) (FloatType) (IntType))
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     c
     (SumLoopExpr
      (IntType)
      c
      (IntExpr (IntType) 34)
      d
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) c))
     d
     (IntExpr (IntType) 627)
     e
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (IntExpr (IntType) 629)
      (VarExpr (IntType) argnum))
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 48)))
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 53)))
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (IntExpr (IntType) 168)
      >
      (VarExpr (IntType) argnum))
     (BinopExpr (IntType) (VarExpr (IntType) argnum) + (IntExpr (IntType) 918))
     (SumLoopExpr
      (IntType)
      c
      (IntExpr (IntType) 887)
      d
      (VarExpr (IntType) argnum)
      e
      (IntExpr (IntType) 921)
      (IntExpr (IntType) 617))))
   0)
  (ArrayIndexExpr
   (ArrayType (FloatType) 3)
   (ArrayLoopExpr
    (ArrayType (ArrayType (FloatType) 3) 3)
    c
    (VarExpr (IntType) argnum)
    d
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (FloatType) (IntType))
      (FloatExpr (FloatType) 56)
      (VarExpr (IntType) argnum))
     1)
    e
    (ArrayIndexExpr
     (IntType)
     (VarExpr (ArrayType (IntType) 1) args)
     (VarExpr (IntType) argnum))
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     f
     (VarExpr (IntType) d)
     g
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     h
     (IntExpr (IntType) 888)
     (CallExpr (FloatType) to_float (VarExpr (IntType) e))))
   (CallExpr
    (IntType)
    to_int
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) to_float (IntExpr (IntType) 436))))
   (TupleIndexExpr
    (IntType)
    (TupleLiteralExpr
     (TupleType (IntType) (IntType) (FloatType))
     (IntExpr (IntType) 575)
     (IntExpr (IntType) 58)
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 33)))
    0)
   (UnopExpr (IntType) - (IntExpr (IntType) 768)))))
(ShowCmd
 (BinopExpr
  (FloatType)
  (CallExpr
   (FloatType)
   atan2
   (SumLoopExpr
    (FloatType)
    g
    (BinopExpr (IntType) (VarExpr (IntType) e) / (VarExpr (IntType) d))
    h
    (IfExpr
     (IntType)
     (TrueExpr (BoolType))
     (VarExpr (IntType) d)
     (VarExpr (IntType) e))
    i
    (VarExpr (IntType) e)
    (CallExpr
     (FloatType)
     exp
     (CallExpr (FloatType) to_float (VarExpr (IntType) h))))
   (CallExpr
    (FloatType)
    atan
    (CallExpr
     (FloatType)
     cos
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 28)))))
  -
  (ArrayIndexExpr
   (FloatType)
   (ArrayLoopExpr
    (ArrayType (FloatType) 2)
    g
    (VarExpr (IntType) f)
    h
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      g
      (VarExpr (IntType) e)
      h
      (VarExpr (IntType) e)
      i
      (VarExpr (IntType) f)
      (VarExpr (IntType) argnum))
     (VarExpr (IntType) f)
     (VarExpr (IntType) d)
     (VarExpr (IntType) argnum))
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 64))))
   (UnopExpr (IntType) - (VarExpr (IntType) argnum))
   (TupleIndexExpr
    (IntType)
    (IfExpr
     (TupleType (IntType) (IntType))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (VarExpr (IntType) e)
      (VarExpr (IntType) argnum))
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (VarExpr (IntType) f)
      (VarExpr (IntType) f)))
    0))))
(FnCmd
 g
 ()
 (FloatType)
 (ReturnStmt
  (IfExpr
   (FloatType)
   (FalseExpr (BoolType))
   (SumLoopExpr
    (FloatType)
    h
    (VarExpr (IntType) d)
    i
    (BinopExpr
     (IntType)
     (VarExpr (IntType) e)
     *
     (SumLoopExpr (IntType) h (VarExpr (IntType) f) (VarExpr (IntType) h)))
    (IfExpr
     (FloatType)
     (UnopExpr
      (BoolType)
      !
      (BinopExpr
       (BoolType)
       (VarExpr (IntType) i)
       >=
       (VarExpr (IntType) argnum)))
     (CallExpr (FloatType) g)
     (SumLoopExpr
      (FloatType)
      j
      (VarExpr (IntType) h)
      k
      (SumLoopExpr (IntType) j (VarExpr (IntType) e) (VarExpr (IntType) d))
      l
      (SumLoopExpr
       (IntType)
       j
       (VarExpr (IntType) argnum)
       k
       (VarExpr (IntType) argnum)
       (VarExpr (IntType) h))
      (CallExpr (FloatType) acos (FloatExpr (FloatType) 78)))))
   (CallExpr (FloatType) g)))
 (AssertStmt
  (IfExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (SumLoopExpr
     (FloatType)
     h
     (VarExpr (IntType) f)
     i
     (VarExpr (IntType) d)
     (CallExpr
      (FloatType)
      acos
      (CallExpr
       (FloatType)
       pow
       (FloatExpr (FloatType) 76)
       (CallExpr (FloatType) g))))
    <
    (CallExpr
     (FloatType)
     acos
     (CallExpr
      (FloatType)
      tan
      (BinopExpr
       (FloatType)
       (CallExpr (FloatType) g)
       /
       (CallExpr (FloatType) g)))))
   (FalseExpr (BoolType))
   (BinopExpr
    (BoolType)
    (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
    ||
    (IfExpr
     (BoolType)
     (BinopExpr
      (BoolType)
      (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
      &&
      (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
     (ArrayIndexExpr
      (BoolType)
      (ArrayLoopExpr
       (ArrayType (BoolType) 2)
       h
       (VarExpr (IntType) f)
       i
       (IntExpr (IntType) 416)
       (FalseExpr (BoolType)))
      (IfExpr
       (IntType)
       (TrueExpr (BoolType))
       (IntExpr (IntType) 745)
       (VarExpr (IntType) f))
      (UnopExpr (IntType) - (VarExpr (IntType) f)))
     (IfExpr
      (BoolType)
      (BinopExpr (BoolType) (IntExpr (IntType) 991) < (IntExpr (IntType) 84))
      (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
      (BinopExpr
       (BoolType)
       (VarExpr (IntType) argnum)
       >
       (VarExpr (IntType) argnum))))))
  "h")
 (LetStmt
  (TupleLValue
   (TupleLValue
    (TupleLValue
     (ArgLValue (ArrayArgument h i))
     (ArgLValue (ArrayArgument j k l m))
     (ArgLValue (VarArgument n)))))
  (IfExpr
   (TupleType
    (TupleType
     (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))))
   (TrueExpr (BoolType))
   (IfExpr
    (TupleType
     (TupleType
      (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))))
    (ArrayIndexExpr
     (BoolType)
     (IfExpr
      (ArrayType (BoolType) 2)
      (BinopExpr (BoolType) (VarExpr (IntType) d) < (VarExpr (IntType) argnum))
      (ArrayLoopExpr
       (ArrayType (BoolType) 2)
       h
       (VarExpr (IntType) e)
       i
       (IntExpr (IntType) 566)
       (TrueExpr (BoolType)))
      (ArrayLoopExpr
       (ArrayType (BoolType) 2)
       h
       (VarExpr (IntType) d)
       i
       (VarExpr (IntType) f)
       (FalseExpr (BoolType))))
     (IntExpr (IntType) 520)
     (VarExpr (IntType) f))
    (TupleLiteralExpr
     (TupleType
      (TupleType
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))))
     (TupleLiteralExpr
      (TupleType
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType)))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))
       (VarExpr (ArrayType (IntType) 1) args)
       (VarExpr (ArrayType (FloatType) 3) c)
       (VarExpr (IntType) e))))
    (TupleLiteralExpr
     (TupleType
      (TupleType
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))))
     (TupleLiteralExpr
      (TupleType
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType)))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))
       (VarExpr (ArrayType (IntType) 1) args)
       (VarExpr (ArrayType (FloatType) 3) c)
       (IntExpr (IntType) 645)))))
   (TupleLiteralExpr
    (TupleType
     (TupleType
      (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))))
    (IfExpr
     (TupleType
      (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType)))
     (BinopExpr (BoolType) (VarExpr (IntType) d) != (IntExpr (IntType) 100))
     (TupleLiteralExpr
      (TupleType
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType)))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))
       (VarExpr (ArrayType (IntType) 1) args)
       (VarExpr (ArrayType (FloatType) 3) c)
       (VarExpr (IntType) argnum)))
     (TupleLiteralExpr
      (TupleType
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType)))
      (TupleLiteralExpr
       (TupleType (ArrayType (IntType) 1) (ArrayType (FloatType) 3) (IntType))
       (VarExpr (ArrayType (IntType) 1) args)
       (VarExpr (ArrayType (FloatType) 3) c)
       (IntExpr (IntType) 341)))))))
 (LetStmt (ArgLValue (VarArgument o)) (VarExpr (IntType) i))
 (ReturnStmt
  (CallExpr
   (FloatType)
   cos
   (SumLoopExpr
    (FloatType)
    p
    (BinopExpr (IntType) (VarExpr (IntType) l) % (IntExpr (IntType) 463))
    (BinopExpr
     (FloatType)
     (FloatExpr (FloatType) 97)
     -
     (CallExpr
      (FloatType)
      exp
      (CallExpr (FloatType) acos (CallExpr (FloatType) g))))))))
(ReadCmd "h.png" (ArrayArgument h i j))
(WriteCmd
 (VarExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  h)
 "k.png")
(LetCmd
 (ArgLValue (VarArgument k))
 (UnopExpr
  (FloatType)
  -
  (CallExpr
   (FloatType)
   atan2
   (CallExpr
    (FloatType)
    sin
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 89))
     (CallExpr (FloatType) acos (CallExpr (FloatType) g))))
   (UnopExpr
    (FloatType)
    -
    (IfExpr
     (FloatType)
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 1))
     (CallExpr (FloatType) sqrt (CallExpr (FloatType) g)))))))
(LetCmd
 (ArgLValue (VarArgument l))
 (ArrayIndexExpr
  (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
  (VarExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   h)
  (ArrayIndexExpr
   (IntType)
   (TupleIndexExpr
    (ArrayType (IntType) 2)
    (TupleLiteralExpr
     (TupleType (IntType) (IntType) (ArrayType (IntType) 2))
     (SumLoopExpr (IntType) l (VarExpr (IntType) f) (VarExpr (IntType) i))
     (VarExpr (IntType) argnum)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      l
      (VarExpr (IntType) i)
      m
      (VarExpr (IntType) f)
      (VarExpr (IntType) f)))
    2)
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 3)
     (BinopExpr (BoolType) (VarExpr (IntType) f) < (IntExpr (IntType) 119))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      l
      (VarExpr (IntType) f)
      m
      (VarExpr (IntType) j)
      n
      (VarExpr (IntType) d)
      (VarExpr (IntType) j))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      l
      (VarExpr (IntType) d)
      m
      (VarExpr (IntType) j)
      n
      (VarExpr (IntType) i)
      (VarExpr (IntType) l)))
    (VarExpr (IntType) j)
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) j))
     0)
    (IfExpr
     (IntType)
     (BinopExpr (BoolType) (VarExpr (IntType) d) > (VarExpr (IntType) e))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 38))
     (VarExpr (IntType) argnum)))
   (VarExpr (IntType) argnum))
  (CallExpr
   (IntType)
   to_int
   (SumLoopExpr
    (FloatType)
    l
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) atan (VarExpr (FloatType) k)))
    m
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) cos (CallExpr (FloatType) g)))
    n
    (VarExpr (IntType) d)
    (CallExpr (FloatType) exp (CallExpr (FloatType) g))))))
(PrintCmd "m")
(ReadCmd "m.png" (VarArgument m))
