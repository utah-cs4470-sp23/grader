print "a"

print "a"

fn a({  }) : float {
  let {} = {sqrt(acos(a({}))), {}, 550}{1}
  let b[c, d, e] = (array[b : (if ((if false then false else true) && (argnum != 257)) then {(if false then 436 else argnum)} else (if false then {658} else {776})){0}, c : (argnum - argnum), d : (- (sum[b : argnum, c : [455][(if true then 977 else argnum)]] (- (sum[d : 404] 783))))] argnum)
  let f = to_int(atan2((- (sqrt(51.58) + tan(71.09))), pow(log(atan(37.98)), 66.0)))
  return a((array[g : e, h : argnum, i : e] {988, {}, d})[[e, e][b[argnum, 447, d]], argnum, (- argnum)]{1})
  return log(to_float(f))
}

fn b(c[d, e, f] : {float}[,,], g[h, i, j] : float[,,]) : int {
  assert {{(argnum != h), (- f)}, (if (d != e) then args[j] else d)}{0}{0}, "k"
  let k = {to_int(atan(54.4)), {(argnum == argnum), h, {j, d, argnum}}}{1}{2}
  let l[m, n, o] = c
  return e
  return (- argnum)
}

let c = [((argnum <= 872) && (a({}) != 26.39))]
let {d[e, f], g[h, i, j]} = (if (false || ((72.9 == to_float(549)) || ((! true) != (false && true)))) then (array[d : (sum[d : argnum, e : (sum[d : argnum] argnum), f : (- 731)] (sum[g : e] d)), e : to_int(to_float(509))] {(array[f : 626, g : d] d), (array[f : e, g : d, h : e] e)})[args[497], [to_int(84.19), 736][(- (- 881))]] else {pow(cos(68.3), sqrt(98.38)), {(array[d : 536, e : argnum] d), (array[d : 230, e : argnum, f : 940] d)}, a({})}{1})
let k[l, m, n] = g
fn o({  }, { p[q, r] : float[,], s[t, u] : bool[,], v : int }) : {{}} {
  return o((if false then (array[w : h, x : e] (if false then {} else {}))[t, i] else {}), (array[w : i, x : [v, v, e][e]] {p, (array[y : h, z : e] true), n})[v, r])
  let w = pow(atan(sin(tan(to_float(521)))), (- 37.6))
  let {} = (if (array[x : u, y : k[l, 613, i]] (h != u))[r, (array[x : l, y : i] v)[n, h]] then (if (! (e > r)) then {{}, 70.35, 644} else (if (e >= t) then {{}, 76.76, q} else {{}, w, v})) else {(if true then (if true then {} else {}) else {}), w, (if false then n else v)}){0}
  let {} = {}
  return [(array[x : t, y : (- v), z : r] {{}})][r][(if (q < 318) then d[u, (if true then l else (- n))] else (t * l)), q, (sum[x : j, y : (j + e)] y)]
}

let {} = {}
print "p"

let p = g
time time let q = asin(to_float(n))


