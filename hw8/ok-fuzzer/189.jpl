let {a, {}} = {{(sum[a : (if false then 35 else argnum), b : (if false then 870 else 377), c : (- argnum)] sqrt(61.27)), (array[a : 546, b : 96, c : argnum] {})[361, (argnum % argnum), argnum]}, acos(asin(cos(37.68)))}{0}
fn b(c[d, e] : bool[,]) : bool[,][,,] {
  let f = log(sqrt(58.1))
  let g = asin(a)
  return b(c)
  return (if ((sum[h : {d}{0}, i : (sum[h : (sum[h : argnum] h)] (- 963))] (sum[j : e, k : to_int(76.36)] (sum[l : j, m : k, n : h] k))) >= (if false then to_int(65.88) else (array[h : d] h)[d])) then (if (if ((true && false) && true) then ((- argnum) >= d) else (if (true && true) then true else false)) then (array[h : (sum[h : (- e), i : args[d], j : (e * e)] argnum), i : {e}{0}, j : (sum[h : (- e), i : (if true then 12 else e)] h)] (array[k : (- i), l : h] false)) else (if c[(sum[h : argnum, i : 674] e), (e / e)] then b((array[h : d, i : 434] true)) else (array[h : (- d), i : (- d), j : 1000] c))) else (array[h : d, i : {(- argnum)}{0}, j : (- (- (666 % d)))] c))
  return [{args, (array[h : d, i : argnum, j : e] c), b(c)}, {args, b(c), b(c)}][(sum[h : d, i : {e, d, a}{1}, j : [290, e, d][596]] d)]{1}
}

let c = asin(sqrt(to_float((- (argnum / argnum)))))
fn d(e[f] : bool[], g[h, i, j] : {int}[,,], k : {}) : bool {
  let {{{{}, l}}} = {(array[l : args[651], m : (sum[l : f] i)] {{{}, 13.77}})[i, {e, f, c}{1}]}
  let {m[n, o], p, {}} = {{(if (true && true) then (array[m : argnum, n : 207] 364) else (array[m : j, n : 109] j)), f, k}}{0}
  let {} = (if (! (if (false || (! true)) then (atan(93.79) <= exp(a)) else (! (p <= o)))) then (if ((o < n) && (if true then true else false)) then (if e[776] then (array[q : o, r : 841, s : 848] k) else (array[q : n, r : o, s : f] {})) else (array[q : 397, r : (j + 13), s : f] k))[j, argnum, (o % (if false then (sum[q : argnum] p) else (if false then 930 else o)))] else {k}{0})
  let {q[r, s], {{}, t}} = (if ((! (array[q : argnum, r : n, s : 433] false)[n, (sum[q : argnum, r : 909, s : n] n), o]) || ((array[q : j, r : i, s : argnum] true)[j, (- j), (j * f)] || (array[q : p, r : o, s : h] false)[i, (- p), (sum[q : f] i)])) then {{m, {k, g}}, d(e, g, (if false then {} else {}))}{0} else (array[q : (- i), r : (if true then m else m)[i, h]] {m, {{}, g}})[p, h])
  return d(e, (array[u : f, v : i, w : r] (array[x : (h + w), y : p] {873})[w, f]), k)
}

let {e[f], {}} = (if {{true, false}}{0}{0} then (if (true || (true && true)) then {a, {args, {}}} else {c, {args, {}}}){1} else (array[e : argnum, f : 447, g : 433] {args, (if false then {} else {})})[(if ((! true) != (argnum <= argnum)) then to_int(cos(a)) else (sum[e : (618 % 1)] (- argnum))), (- to_int(acos(a))), to_int(pow(exp(c), to_float(argnum)))])
let g[h, i, j] = (if (! false) then {(array[g : 70] c), (array[g : (argnum + 645), h : (f % f), i : f] g)} else {[(- c), atan(a)], (array[g : f, h : (sum[g : 234, h : argnum] g), i : (f + 966)] argnum)}){1}
let {k[l, m]} = (array[k : ((j * argnum) + argnum), l : i] {(array[m : f, n : 102] asin(c))})[(sum[k : (array[k : j, l : h] (k + l))[to_int(pow(c, a)), i]] (array[l : (i * k)] h)[(sum[l : i, m : (- 527)] argnum)]), to_int((a - exp(c)))]
read image "n.png" to n

let o[p, q] = (if (! (array[o : (if true then f else l), p : j, q : l] (m > i))[to_int(asin(c)), (sum[o : l, p : (i - m)] j), j]) then (if (! ((f < m) || false)) then n else n) else (array[o : {g}{0}[h, l, (m + i)], p : (- to_int((sum[o : argnum, p : h] a)))] (if (true && (p <= o)) then n[o, g[532, l, f]] else {c, sqrt(a), atan(c), sqrt(77.86)})))
let r = b({asin(sqrt(35.01)), g, (array[r : p, s : (- p)] (m >= h))}{2})
let s = exp(asin(asin(a)))
fn t() : {bool} {
  let {u[v, w], x, {}} = (if ((105 > argnum) == false) then (if t(){0} then (array[u : l, v : (sum[u : j] 645)] {k, r, {}}) else (array[u : (sum[u : q, v : q] h), v : h] {k, r, {}})) else (array[u : {q}{0}, v : (sum[u : h, v : q] h)] (if (76 > v) then {k, r, {}} else {k, r, {}})))[(if ((if (if true then false else true) then q else h) >= m) then p else j), argnum]
  return (if (if ((c != acos(s)) == (if true then t() else t()){0}) then (! ((i < q) != (v >= 727))) else (if (if false then (! false) else (c >= 14.28)) then (array[y : 148, z : argnum, A : v] false)[h, 250, j] else (! true))) then {{(80.55 <= 85.82)}}{0} else t())
  let y[z] = args
  assert ((if ((s * log(a)) != pow(to_float(h), atan2(14.6, a))) then (if (if (! false) then true else (a > a)) then (m < w) else {e, true}{1}) else (j > v)) || (if ((if false then false else false) || false) then (array[A : v, B : (if true then j else h)] false) else (array[A : (if false then j else m), B : l] (h != argnum)))[j, {(z * i)}{0}]), "A"
  return {(((a >= log(a)) && (array[A : h, B : q] true)[i, (h % f)]) && (asin(sin(0.93)) != c))}
}

