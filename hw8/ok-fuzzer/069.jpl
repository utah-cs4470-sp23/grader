fn a(b[c, d, e] : {bool}[,,], f[g] : {bool,int,bool}[], h : float) : float {
  let {} = {acos((- h)), {{}}}{1}{0}
  let {i} = (array[i : (if true then (sum[i : 351, j : c] argnum) else e), j : {c, argnum}{1}, k : argnum] {c, {40.19}, exp(11.97)})[557, (if (array[i : e] true)[e] then d else 308), 149]{1}
  let {j[k, l, m], {}} = {(if (if (! (c <= g)) then ((false || true) || (! true)) else (i >= h)) then (if (e != argnum) then (array[j : g, k : e] b) else (array[j : d, k : e] b))[to_int(acos(h)), c] else b), {(array[j : 258, k : c, l : 879] {})[(c % g), to_int(70.97), (sum[j : d] d)], f}{0}}
  let n = ((array[n : g, o : m, p : e] {true, i})[(array[n : k, o : m] m)[k, 31], {m}{0}, (sum[n : (e * k), o : d, p : m] d)]{0} == (cos(cos(exp(69.86))) > acos((if (c != c) then (sum[n : l, o : 418] i) else (- 24.18)))))
  return tan(92.0)
}

fn b(c[d, e, f] : float[,,], { { g : {} }, h : int, i[j, k, l] : {}[,,] }) : int {
  let {m[n, o], {}, p[q]} = (array[m : (array[m : argnum, n : d] (j / l))[e, k]] (if (array[n : f] false)[(- m)] then {(array[n : h, o : j] c), g, (array[n : l] h)} else {(array[n : h, o : argnum] c), g, args}))[l]
  let {r, s[t], u} = (array[r : (e - (if (false && false) then 518 else h)), s : (e * argnum)] {args, args, i[j, q, f]})[(array[r : {d, d}{0}] j)[(if (true != true) then (array[r : j, s : argnum, t : e] f) else (array[r : argnum, s : d, t : l] 461))[(- 283), {n, k}{0}, k]], q]
  let v = sqrt(cos((tan((sum[v : l, w : o] 47.43)) + to_float(j))))
  let w = tan(acos(tan(log(c[q, d, j]))))
  return o
}

fn c() : bool {
  let d[e, f, g] = {exp(75.17), (if (argnum < (- 379)) then (array[d : to_int(49.29), e : argnum, f : args[662]] (89.43 - 11.79)) else (array[d : args[562], e : (- 749), f : 212] atan(61.89))), tan((- log(65.54)))}{1}
  let h[i, j, k] = (array[h : e, i : 194] (array[j : (- argnum)] (array[k : f, l : 149, m : 758] f))[911])[(508 % to_int(exp(atan(83.07)))), 618]
  assert (! c()), "l"
  return (if (array[l : {{}, j, 509}{2}, m : to_int(sin(7.61)), n : f] (if c() then c() else c()))[(array[l : (argnum % j), m : (- i)] l)[(- argnum), (sum[l : (- k), m : j] 78)], (h[argnum, (j - argnum), i] / to_int(asin(72.01))), g] then (atan2(tan(exp(97.58)), (sum[l : k] cos(84.34))) < asin(exp(sqrt(43.31)))) else false)
  return ((- e) != 602)
}

fn d(e : float[,,], { f[g, h, i] : int[,,] }) : {bool,float,float} {
  let {} = [(if true then {e, {}, f} else {e, {}, f})][(sum[j : g, k : (if c() then i else (sum[j : g] argnum))] i)]{1}
  let {{{j[k, l, m]}}, {n[o], p[q], r[s, t]}} = {{{{e}}{0}}, (array[j : {h, c(), c()}{0}, k : 704, l : (if (c() || c()) then (sum[j : g, k : g] argnum) else 853)] {args, [argnum, i], (array[m : k, n : i] g)})[h, i, (- argnum)]}
  let {u[v, w], {x, y, z[A]}} = (array[u : (if c() then r else r)[{true, h, t}{2}, o], v : (if (array[u : argnum] true)[176] then g else s), w : t] {r, (if (! false) then {q, w, n} else {h, k, args})})[7, q, o]
  let B = k
  return (if c() then (if (m != w) then d(j, (if (! true) then {f} else {f})) else d({e}{0}, {(if c() then f else f)})) else d((array[C : q] e)[g], (array[C : w] {f})[w]))
}

let {e[f, g, h], {i[j, k]}, l[m, n, o]} = {(if (c() && c()) then (array[e : args[370], f : argnum, g : (if (c() && false) then 603 else 881)] (if true then (- 43.21) else (- 68.64))) else (array[e : to_int(26.9), f : {argnum, true}{0}, g : args[to_int(29.19)]] sqrt((sum[h : f, i : e, j : e] 96.28)))), {{log(1.04), (array[e : 327, f : argnum] f)}{1}}, (array[e : (851 / (- (sum[e : argnum] 326))), f : argnum, g : (argnum * (argnum / 734))] c())}
let p[q, r, s] = (if (! ((true && (! c())) || c())) then (if (c() || (if false then false else (if c() then true else c()))) then l else (array[p : j, q : (- f)] (array[r : n, s : q, t : f] c()))[g, (if c() then g else (- n))]) else (if (23.73 > cos(46.04)) then (array[p : h, q : k, r : n] (array[s : f, t : g, u : k] c()))[257, k, f] else {l}{0}))
let t = (r < k)
fn u() : bool {
  let {} = (if (! t) then [(array[v : h, w : k] {}), (array[v : s, w : k] {}), (array[v : s, w : k] {})] else [(array[v : q, w : n] {}), (array[v : k, w : m] {}), (array[v : h, w : j] {})])[q][h, (array[v : (if true then 85 else s)] {h, k, 412})[(h + (sum[v : g] r))]{2}]
  let v = {cos((- 83.19)), h}{0}
  let w[x, y, z] = l
  let A[B, C] = (array[A : z, B : x] tan(cos(sqrt(atan2(v, v)))))
  return ((z + r) >= argnum)
}

fn v(w : int[,], x : bool, y[z] : bool[,,][]) : float[][] {
  return (array[A : to_int((- 81.86)), B : n] (array[C : (sum[C : i[g, j]] f)] (array[D : s] to_float(r))))[(if c() then {m, s, k} else {s, args[r], g}){2}, f]
  let A[B] = args
  let C[D, E] = i
  let {} = {}
  return [(array[F : 670, G : D] (array[H : m] asin(68.35)))[(- j), D], {A, i, (array[F : m] sqrt(71.71))}{2}]
}

fn w(x[y, z] : int[,][,], { A[B] : {bool,bool}[], C[D, E, F] : bool[][,,], G : float }, H[I, J] : {float}[,]) : {} {
  let {K, {L[M, N, O], P, Q}} = {F, {l, atan2(sin((sum[K : z, L : j] 6.28)), cos(64.74)), 62.23}}
  return (if (if c() then (47.68 >= (50.47 - G)) else (array[R : s, S : F] false)[J, f]) then {(array[R : n] r), {{}, argnum}}{1} else {{{}}{0}, argnum}){0}
  let {} = {}
  let R = s
  return {{}}{0}
}

type x = int
let y = cos(sin({o, g, to_float(85)}{2}))
