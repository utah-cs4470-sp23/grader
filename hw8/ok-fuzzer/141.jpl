let a = cos(to_float((sum[a : 290] a)))
print "b"

let {b[c], d[e, f], g[h]} = (array[b : (sum[b : (if (argnum > argnum) then (argnum + 300) else to_int(78.6))] (sum[c : (- b)] 948)), c : (if (true || (246 >= 292)) then (- (sum[b : argnum] 147)) else (sum[b : (- 762)] (argnum / argnum)))] {(array[d : args[argnum]] (false || true)), (array[d : b, e : b] b), (array[d : argnum] argnum)})[(if (! (if true then (argnum != 699) else (! true))) then (if (false || (if true then false else false)) then (array[b : 459] argnum)[argnum] else (457 - argnum)) else argnum), (if [true][argnum] then {asin(a), argnum, (656 > argnum)} else {(- a), (- argnum), (argnum != argnum)}){1}]
fn i({ j[k, l] : int[,], m[n, o, p] : int[,,] }, {  }, q : float) : int[,,] {
  let r = argnum
  let s[t, u] = (array[s : argnum] d)[(945 % c)]
  return (array[v : f, w : (array[v : u] r)[c], x : (if (c > 795) then {t, u} else {u, argnum}){1}] (if (! false) then {x, u, m} else {o, argnum, m}){2})[o, e, p]
  let v = [41.48]
  return (array[w : p, x : n, y : (if false then e else k)] argnum)
}

fn j(k[l, m] : int[,], n[o, p, q] : bool[,,], r[s] : float[]) : int {
  assert (if (s >= 971) then (if {true, q}{0} then {d, (! false)} else (if (! true) then {k, false} else {k, true})) else (array[t : (sum[t : o, u : c, v : e] s), u : s] {k, true})[872, l]){1}, "t"
  let t[u] = r
  let v = 36.92
  let w[x, y] = {pow(sqrt(a), (if (f != c) then log(8.17) else acos(v))), {t, (array[w : o, x : argnum] p)}{1}}{1}
  return x
}

fn k({ l[m] : float[], n : float[] }, o : int[]) : int[,,] {
  let p = sqrt((sum[p : 713, q : to_int((if true then acos(33.19) else a))] 3.31))
  let q[r, s] = (array[q : m, r : (sum[q : 504] (array[r : h, s : q, t : q] t)[e, e, to_int(a)])] sin(to_float(245)))
  let t[u, v, w] = (if ((if true then (false || (false == false)) else true) || (p > a)) then k((if false then (if b[c] then {n, n} else {n, l}) else {(if true then l else l), n}), (if (if (! true) then true else (true || true)) then o else {51.94, g}{1})) else [k({l, l}, args)][to_int(((- p) % to_float(e)))])
  let x[y, z, A] = i((array[x : s, y : (sum[x : v, y : (- argnum), z : argnum] 114)] {(if true then d else d), t})[{d}{0}[to_int(n[c]), f], j((array[x : args[m], y : (f * argnum)] d[h, x]), (array[x : w, y : f, z : argnum] true), {f, l, t}{1})], {tan(p), (array[x : u, y : h, z : c] {}), t}{1}[(- (sum[x : w] (if false then m else u))), to_int(sqrt(to_float(421))), {(sum[x : 184, y : 194] u), argnum}{0}], asin(cos((array[x : argnum, y : f, z : m] 34.15)[h, c, s])))
  return (if {(if true then false else false), l}{0} then {{x}}{0} else (if true then (if b[s] then {x} else {x}) else (if (e > e) then {t} else {x}))){0}
}

fn l(m : float, n[o, p] : float[,], { q[r, s, t] : int[][,,] }) : bool {
  assert l(log(atan(asin((- m)))), [(if (s == r) then n else n), (array[u : s, v : t] sin(75.53)), (if (! false) then (array[u : h, v : c] a) else (array[u : c, v : t] m))][[(s + r), e, f][o]], (if b[p] then (if (if (s == f) then (387 >= e) else true) then {q} else {(array[u : c, v : p, w : h] args)}) else (if l(exp(m), (if false then n else n), {q}) then {(array[u : e, v : e, w : r] args)} else {q}))), "u"
  let u[v, w] = n
  let x[y] = (array[x : (- p)] f)
  return ((array[z : w, A : r] {a})[h, w]{0} >= asin((sum[z : h, A : p, B : 231] log(asin(a)))))
  return (! (s <= w))
}

show log(log(atan2(atan2(acos(47.19), exp(a)), to_float(h))))

let {m[n], o} = {[(sum[m : c, n : to_int((77.85 * a)), o : {h, g}{0}] (array[p : f, q : m, r : argnum] p)[f, o, 90])], (argnum * c)}
let p[q] = g
let {} = (if (sqrt((if false then 43.34 else a)) >= (a * cos(a))) then (if {true}{0} then (array[r : h] (if true then {} else {})) else (array[r : 7] {})) else {to_float(c), m, [{}, {}]}{2})[c]
type r = int
