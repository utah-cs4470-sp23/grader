(FnCmd a ((VarBinding (ArrayArgument b c) (ArrayType (BoolType) 1))) (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) (LetStmt (ArgLValue (VarArgument d)) (CallExpr (FloatType) acos (CallExpr (FloatType) sin (BinopExpr (FloatType) (CallExpr (FloatType) log (SumLoopExpr (FloatType) d (VarExpr (IntType) c) (FloatExpr (FloatType) 90))) * (CallExpr (FloatType) sqrt (CallExpr (FloatType) to_float (IntExpr (IntType) 588))))))) (LetStmt (ArgLValue (VarArgument e)) (IfExpr (ArrayType (IntType) 1) (ArrayIndexExpr (BoolType) (VarExpr (ArrayType (BoolType) 1) b) (UnopExpr (IntType) - (VarExpr (IntType) c))) (VarExpr (ArrayType (IntType) 1) args) (ArrayLoopExpr (ArrayType (IntType) 1) e (VarExpr (IntType) argnum) (IntExpr (IntType) 52)))) (LetStmt (ArgLValue (VarArgument f)) (CallExpr (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) a (ArrayLoopExpr (ArrayType (BoolType) 1) f (VarExpr (IntType) c) (UnopExpr (BoolType) ! (UnopExpr (BoolType) ! (BinopExpr (BoolType) (VarExpr (IntType) f) == (VarExpr (IntType) argnum))))))) (AssertStmt (BinopExpr (BoolType) (VarExpr (IntType) argnum) >= (VarExpr (IntType) c)) "g") (ReturnStmt (VarExpr (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) f)))
(LetCmd (ArgLValue (VarArgument b)) (CallExpr (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) a (TupleIndexExpr (ArrayType (BoolType) 1) (TupleLiteralExpr (TupleType (FloatType) (ArrayType (BoolType) 1)) (CallExpr (FloatType) exp (FloatExpr (FloatType) 81)) (ArrayLoopExpr (ArrayType (BoolType) 1) b (UnopExpr (IntType) - (IntExpr (IntType) 800)) (UnopExpr (BoolType) ! (TrueExpr (BoolType))))) 1)))
(LetCmd (TupleLValue (ArgLValue (VarArgument c)) (TupleLValue (ArgLValue (ArrayArgument d e f g)) (TupleLValue (ArgLValue (VarArgument h)) (ArgLValue (VarArgument i)) (ArgLValue (VarArgument j))))) (ArrayIndexExpr (TupleType (FloatType) (TupleType (ArrayType (BoolType) 3) (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)))) (ArrayLoopExpr (ArrayType (TupleType (FloatType) (TupleType (ArrayType (BoolType) 3) (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)))) 3) c (CallExpr (IntType) to_int (CallExpr (FloatType) exp (CallExpr (FloatType) sin (FloatExpr (FloatType) 88)))) d (VarExpr (IntType) argnum) e (UnopExpr (IntType) - (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum)) 0)) (TupleLiteralExpr (TupleType (FloatType) (TupleType (ArrayType (BoolType) 3) (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)))) (CallExpr (FloatType) cos (CallExpr (FloatType) atan2 (FloatExpr (FloatType) 2) (FloatExpr (FloatType) 41))) (TupleLiteralExpr (TupleType (ArrayType (BoolType) 3) (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType))) (ArrayLoopExpr (ArrayType (BoolType) 3) f (VarExpr (IntType) argnum) g (VarExpr (IntType) argnum) h (VarExpr (IntType) e) (TrueExpr (BoolType))) (VarExpr (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) b)))) (TupleIndexExpr (IntType) (TupleIndexExpr (TupleType (IntType)) (TupleLiteralExpr (TupleType (TupleType (IntType))) (TupleLiteralExpr (TupleType (IntType)) (IntExpr (IntType) 77))) 0) 0) (BinopExpr (IntType) (IfExpr (IntType) (BinopExpr (BoolType) (BinopExpr (BoolType) (VarExpr (IntType) argnum) >= (VarExpr (IntType) argnum)) != (TupleIndexExpr (BoolType) (VarExpr (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) b) 1)) (BinopExpr (IntType) (BinopExpr (IntType) (IntExpr (IntType) 753) % (VarExpr (IntType) argnum)) / (CallExpr (IntType) to_int (FloatExpr (FloatType) 7))) (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum)) 0)) * (VarExpr (IntType) argnum)) (SumLoopExpr (IntType) c (IfExpr (IntType) (UnopExpr (BoolType) ! (BinopExpr (BoolType) (TrueExpr (BoolType)) != (TrueExpr (BoolType)))) (CallExpr (IntType) to_int (CallExpr (FloatType) cos (FloatExpr (FloatType) 89))) (IntExpr (IntType) 33)) (TupleIndexExpr (IntType) (TupleLiteralExpr (TupleType (IntType) (IntType) (BoolType)) (VarExpr (IntType) c) (VarExpr (IntType) argnum) (BinopExpr (BoolType) (IntExpr (IntType) 863) < (VarExpr (IntType) c))) 0))))
(AssertCmd (IfExpr (BoolType) (UnopExpr (BoolType) ! (BinopExpr (BoolType) (TupleIndexExpr (FloatType) (TupleLiteralExpr (TupleType (FloatType) (BoolType) (BoolType)) (VarExpr (FloatType) c) (VarExpr (BoolType) i) (TrueExpr (BoolType))) 0) == (UnopExpr (FloatType) - (UnopExpr (FloatType) - (VarExpr (FloatType) c))))) (FalseExpr (BoolType)) (VarExpr (BoolType) i)) "k")
(LetCmd (ArgLValue (VarArgument k)) (BinopExpr (BoolType) (UnopExpr (FloatType) - (CallExpr (FloatType) pow (IfExpr (FloatType) (VarExpr (BoolType) i) (CallExpr (FloatType) to_float (VarExpr (IntType) j)) (CallExpr (FloatType) atan2 (FloatExpr (FloatType) 93) (FloatExpr (FloatType) 72))) (CallExpr (FloatType) tan (VarExpr (FloatType) c)))) < (IfExpr (FloatType) (BinopExpr (BoolType) (VarExpr (BoolType) i) || (IfExpr (BoolType) (BinopExpr (BoolType) (VarExpr (IntType) g) != (VarExpr (IntType) g)) (BinopExpr (BoolType) (VarExpr (BoolType) i) != (VarExpr (BoolType) i)) (BinopExpr (BoolType) (VarExpr (BoolType) i) && (VarExpr (BoolType) i)))) (IfExpr (FloatType) (TrueExpr (BoolType)) (CallExpr (FloatType) to_float (VarExpr (IntType) f)) (IfExpr (FloatType) (UnopExpr (BoolType) ! (VarExpr (BoolType) i)) (CallExpr (FloatType) exp (VarExpr (FloatType) c)) (CallExpr (FloatType) tan (VarExpr (FloatType) c)))) (CallExpr (FloatType) asin (FloatExpr (FloatType) 33)))))
(TimeCmd (ShowCmd (CallExpr (FloatType) exp (CallExpr (FloatType) atan (VarExpr (FloatType) c)))))
(TimeCmd (WriteCmd (ArrayLoopExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) l (CallExpr (IntType) to_int (CallExpr (FloatType) exp (FloatExpr (FloatType) 2))) m (VarExpr (IntType) argnum) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (CallExpr (FloatType) atan (FloatExpr (FloatType) 95)) (CallExpr (FloatType) pow (CallExpr (FloatType) to_float (VarExpr (IntType) f)) (CallExpr (FloatType) tan (VarExpr (FloatType) c))) (FloatExpr (FloatType) 40) (UnopExpr (FloatType) - (TupleIndexExpr (FloatType) (VarExpr (TupleType (FloatType) (FloatType) (IntType)) h) 1)))) "l.png"))
(FnCmd l ((VarBinding (VarArgument m) (IntType)) (TupleBinding (TupleBinding (TupleBinding (VarBinding (VarArgument n) (FloatType)) (VarBinding (ArrayArgument o p q) (ArrayType (ArrayType (FloatType) 3) 2)) (TupleBinding (TupleBinding) (VarBinding (ArrayArgument r s t) (ArrayType (TupleType (TupleType) (IntType)) 2)))) (TupleBinding (VarBinding (VarArgument u) (ArrayType (BoolType) 3)) (VarBinding (VarArgument v) (BoolType)) (TupleBinding (VarBinding (VarArgument w) (IntType)) (VarBinding (VarArgument x) (BoolType)))) (TupleBinding (VarBinding (ArrayArgument y z A) (ArrayType (BoolType) 2)) (VarBinding (VarArgument B) (ArrayType (FloatType) 3)) (VarBinding (ArrayArgument C D E F) (ArrayType (FloatType) 3)))) (VarBinding (VarArgument G) (BoolType)) (TupleBinding (TupleBinding) (TupleBinding))) (VarBinding (ArrayArgument H I J) (ArrayType (TupleType (IntType)) 2))) (BoolType) (LetStmt (ArgLValue (ArrayArgument K L M)) (VarExpr (ArrayType (TupleType (TupleType) (IntType)) 2) r)) (LetStmt (ArgLValue (ArrayArgument N O P Q)) (VarExpr (ArrayType (FloatType) 3) B)) (LetStmt (TupleLValue (ArgLValue (VarArgument R)) (ArgLValue (ArrayArgument S T))) (TupleIndexExpr (TupleType (IntType) (ArrayType (IntType) 1)) (TupleLiteralExpr (TupleType (TupleType (IntType) (ArrayType (IntType) 1)) (ArrayType (BoolType) 3) (IntType)) (IfExpr (TupleType (IntType) (ArrayType (IntType) 1)) (BinopExpr (BoolType) (VarExpr (BoolType) k) && (IfExpr (BoolType) (VarExpr (BoolType) i) (VarExpr (BoolType) x) (VarExpr (BoolType) k))) (IfExpr (TupleType (IntType) (ArrayType (IntType) 1)) (BinopExpr (BoolType) (VarExpr (BoolType) k) && (VarExpr (BoolType) i)) (TupleLiteralExpr (TupleType (IntType) (ArrayType (IntType) 1)) (VarExpr (IntType) O) (VarExpr (ArrayType (IntType) 1) args)) (TupleLiteralExpr (TupleType (IntType) (ArrayType (IntType) 1)) (VarExpr (IntType) I) (VarExpr (ArrayType (IntType) 1) args))) (TupleLiteralExpr (TupleType (IntType) (ArrayType (IntType) 1)) (VarExpr (IntType) e) (ArrayLoopExpr (ArrayType (IntType) 1) R (VarExpr (IntType) P) (VarExpr (IntType) L)))) (VarExpr (ArrayType (BoolType) 3) d) (VarExpr (IntType) m)) 0)) (ReturnStmt (VarExpr (BoolType) x)) (ReturnStmt (BinopExpr (BoolType) (CallExpr (FloatType) cos (CallExpr (FloatType) acos (UnopExpr (FloatType) - (CallExpr (FloatType) atan (VarExpr (FloatType) n))))) == (VarExpr (FloatType) c))))
(FnCmd m ((VarBinding (VarArgument n) (TupleType (ArrayType (FloatType) 3) (TupleType (BoolType) (BoolType) (IntType)))) (TupleBinding (VarBinding (ArrayArgument o p q) (ArrayType (TupleType) 2)) (TupleBinding (TupleBinding (TupleBinding (TupleBinding (VarBinding (ArrayArgument r s t u) (ArrayType (TupleType) 3)) (TupleBinding (VarBinding (VarArgument v) (IntType)))) (VarBinding (ArrayArgument w x y) (ArrayType (TupleType (IntType) (FloatType)) 2)) (TupleBinding)) (VarBinding (ArrayArgument z A B) (ArrayType (FloatType) 2))))) (VarBinding (ArrayArgument C D E F) (ArrayType (FloatType) 3))) (ArrayType (BoolType) 2) (AssertStmt (IfExpr (BoolType) (BinopExpr (BoolType) (CallExpr (FloatType) log (CallExpr (FloatType) to_float (VarExpr (IntType) e))) <= (CallExpr (FloatType) tan (CallExpr (FloatType) exp (ArrayIndexExpr (FloatType) (VarExpr (ArrayType (FloatType) 3) C) (VarExpr (IntType) p) (VarExpr (IntType) x) (VarExpr (IntType) g))))) (BinopExpr (BoolType) (UnopExpr (BoolType) ! (TrueExpr (BoolType))) || (ArrayIndexExpr (BoolType) (ArrayLoopExpr (ArrayType (BoolType) 2) G (VarExpr (IntType) s) H (VarExpr (IntType) y) (VarExpr (BoolType) i)) (VarExpr (IntType) F) (UnopExpr (IntType) - (VarExpr (IntType) E)))) (BinopExpr (BoolType) (CallExpr (FloatType) to_float (VarExpr (IntType) s)) < (SumLoopExpr (FloatType) G (VarExpr (IntType) argnum) H (VarExpr (IntType) B) (CallExpr (FloatType) atan (CallExpr (FloatType) tan (VarExpr (FloatType) c)))))) "G") (ReturnStmt (ArrayLoopExpr (ArrayType (BoolType) 2) G (VarExpr (IntType) q) H (VarExpr (IntType) s) (BinopExpr (BoolType) (IfExpr (FloatType) (TupleIndexExpr (BoolType) (TupleLiteralExpr (TupleType (BoolType)) (VarExpr (BoolType) i)) 0) (CallExpr (FloatType) asin (VarExpr (FloatType) c)) (CallExpr (FloatType) atan (CallExpr (FloatType) exp (VarExpr (FloatType) c)))) == (UnopExpr (FloatType) - (CallExpr (FloatType) acos (SumLoopExpr (FloatType) I (IntExpr (IntType) 940) J (VarExpr (IntType) t) K (VarExpr (IntType) A) (FloatExpr (FloatType) 65))))))) (LetStmt (ArgLValue (VarArgument G)) (VarExpr (IntType) y)) (LetStmt (ArgLValue (ArrayArgument H I)) (TupleIndexExpr (ArrayType (IntType) 1) (ArrayIndexExpr (TupleType (ArrayType (FloatType) 2) (IntType) (ArrayType (IntType) 1)) (IfExpr (ArrayType (TupleType (ArrayType (FloatType) 2) (IntType) (ArrayType (IntType) 1)) 2) (BinopExpr (BoolType) (IfExpr (IntType) (VarExpr (BoolType) i) (VarExpr (IntType) e) (VarExpr (IntType) y)) <= (VarExpr (IntType) e)) (ArrayLoopExpr (ArrayType (TupleType (ArrayType (FloatType) 2) (IntType) (ArrayType (IntType) 1)) 2) H (VarExpr (IntType) F) I (UnopExpr (IntType) - (VarExpr (IntType) j)) (TupleLiteralExpr (TupleType (ArrayType (FloatType) 2) (IntType) (ArrayType (IntType) 1)) (VarExpr (ArrayType (FloatType) 2) z) (VarExpr (IntType) H) (VarExpr (ArrayType (IntType) 1) args))) (ArrayLoopExpr (ArrayType (TupleType (ArrayType (FloatType) 2) (IntType) (ArrayType (IntType) 1)) 2) H (VarExpr (IntType) x) I (VarExpr (IntType) x) (TupleLiteralExpr (TupleType (ArrayType (FloatType) 2) (IntType) (ArrayType (IntType) 1)) (VarExpr (ArrayType (FloatType) 2) z) (VarExpr (IntType) q) (VarExpr (ArrayType (IntType) 1) args)))) (VarExpr (IntType) E) (VarExpr (IntType) argnum)) 2)) (ReturnStmt (ArrayIndexExpr (ArrayType (BoolType) 2) (TupleIndexExpr (ArrayType (ArrayType (BoolType) 2) 1) (TupleLiteralExpr (TupleType (FloatType) (ArrayType (ArrayType (BoolType) 2) 1) (IntType)) (CallExpr (FloatType) exp (CallExpr (FloatType) cos (FloatExpr (FloatType) 65))) (ArrayLiteralExpr (ArrayType (ArrayType (BoolType) 2) 1) (ArrayLoopExpr (ArrayType (BoolType) 2) J (VarExpr (IntType) p) K (VarExpr (IntType) p) (TrueExpr (BoolType))) (ArrayLoopExpr (ArrayType (BoolType) 2) J (VarExpr (IntType) G) K (VarExpr (IntType) E) (TrueExpr (BoolType)))) (VarExpr (IntType) s)) 1) (VarExpr (IntType) e))))
(WriteCmd (IfExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) (VarExpr (BoolType) k) (ArrayLoopExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) n (IfExpr (IntType) (BinopExpr (BoolType) (SumLoopExpr (IntType) n (VarExpr (IntType) j) o (VarExpr (IntType) j) (VarExpr (IntType) f)) <= (VarExpr (IntType) g)) (VarExpr (IntType) e) (VarExpr (IntType) argnum)) o (VarExpr (IntType) j) (IfExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (UnopExpr (BoolType) ! (VarExpr (BoolType) i)) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (FloatExpr (FloatType) 22) (CallExpr (FloatType) acos (FloatExpr (FloatType) 65)) (FloatExpr (FloatType) 50) (CallExpr (FloatType) atan2 (VarExpr (FloatType) c) (FloatExpr (FloatType) 52))) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (VarExpr (FloatType) c) (CallExpr (FloatType) asin (VarExpr (FloatType) c)) (CallExpr (FloatType) to_float (VarExpr (IntType) g)) (CallExpr (FloatType) atan (VarExpr (FloatType) c))))) (ArrayLoopExpr (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2) n (IntExpr (IntType) 932) o (BinopExpr (IntType) (UnopExpr (IntType) - (TupleIndexExpr (IntType) (VarExpr (TupleType (TupleType (FloatType) (FloatType) (IntType)) (BoolType) (IntType)) b) 2)) * (VarExpr (IntType) g)) (IfExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (VarExpr (BoolType) k) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (CallExpr (FloatType) asin (FloatExpr (FloatType) 88)) (CallExpr (FloatType) to_float (VarExpr (IntType) n)) (VarExpr (FloatType) c) (CallExpr (FloatType) acos (VarExpr (FloatType) c))) (TupleLiteralExpr (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) (FloatExpr (FloatType) 12) (CallExpr (FloatType) sin (FloatExpr (FloatType) 42)) (CallExpr (FloatType) asin (VarExpr (FloatType) c)) (CallExpr (FloatType) to_float (VarExpr (IntType) e)))))) "n.png")
(ReadCmd "n.png" (VarArgument n))
(ReadCmd "o.png" (VarArgument o))