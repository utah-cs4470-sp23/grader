let {{}, {a}} = [(if (! false) then {{}, {true}} else {{}, {true}}), {{}, {(! false)}}][to_int((if false then (- sqrt(3.29)) else asin(44.33)))]
let {b[c, d], e} = (array[b : argnum, c : (if true then {argnum, argnum} else {338, argnum}){1}, d : (360 * argnum)] {(array[e : 78, f : to_int(18.85)] (if a then e else c)), 85.14})[argnum, to_float(((- argnum) - 8)), {{479, 281}}{0}{0}]
let {{{f[g], h[i, j], {}}, {k[l, m]}}, {{n, {o, {p, q[r], {}}}, s[t, u]}, v}, w[x]} = {{(if (! (a == true)) then {(array[f : 184] f), b, (if a then {} else {})} else {(array[f : argnum] d), b, {}}), (array[f : c] {b})[980]}, {{true, {args, {true, args, {}}}, {b}{0}}, to_int(to_float((sum[f : argnum, g : d] 18)))}, (if (204 >= 964) then {acos(e), args, exp(92.69)} else {atan2(25.65, e), (array[f : argnum] f), (sum[f : 835] 98.42)}){1}}
let y[z] = args
let A[B] = y
show (461 * to_int((if (acos(e) == to_float(t)) then (- to_float(x)) else sin(log(95.77)))))

assert ({(array[C : l, D : r, E : B] true)}{0}[(- c), j, m] && ((- cos(e)) == exp(asin(88.89)))), "C"
show c

write image (array[C : g, D : a] (array[E : j, F : t] {74.68, to_float(j), exp(e), to_float(F)}))[t, B] to "C.png"

let C[D, E] = {k, t, true}{0}
let F[G, H, I] = {(if (if false then (t != 1) else a) then (if (argnum >= x) then (array[F : m, G : i, H : g] u) else (array[F : l, G : t, H : m] F)) else (array[F : E, G : z, H : l] H))}{0}
let J[K] = args
