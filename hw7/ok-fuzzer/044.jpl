assert ({(array[a : argnum, b : 276, c : 467] a)}{0}[argnum, {argnum, argnum}{0}, 850] == (array[a : (sum[a : argnum, b : 779] (- argnum)), b : argnum] (if (! false) then b else 474))[(((- 935) - (- 871)) - argnum), (array[a : argnum, b : argnum] a)[(if (! true) then args[861] else args[argnum]), (sum[a : (- 554)] (sum[b : 311, c : a, d : a] a))]]), "a"
show false

let {} = (if {sin((- 49.35)), 601, false}{2} then (if (if ((true || true) && (true && false)) then (to_float(argnum) < exp(20.56)) else (450 == argnum)) then {} else {}) else {})
fn a(b[c, d, e] : bool[,,], f : float) : bool {
  let g = a(b, atan2((if true then cos(sin(f)) else (sum[g : e] sin(91.07))), asin(91.83)))
  let h[i, j, k] = (if (to_int(64.46) != (sum[h : d, i : argnum, j : d] i)) then (array[h : argnum, i : (if g then c else e)] (array[j : argnum, k : i, l : 111] b)) else (array[h : d, i : e] (array[j : h, k : 118, l : 237] b)))[to_int(sqrt(cos(f))), (if (! g) then ((sum[h : c, i : d] c) % (c - 806)) else c)][(sum[h : argnum, i : e, j : e] (if g then (if (if false then g else g) then argnum else to_int(67.53)) else to_int(pow(89.01, f)))), (if g then args else (array[h : (607 - c)] (c / argnum)))[(sum[h : argnum, i : (array[h : e, i : c, j : argnum] 299)[d, to_int(f), (- c)], j : (- (sum[h : c] argnum))] argnum)], (if (! (argnum > d)) then {(sum[h : c, i : e] argnum), g, 993} else {(if true then d else d), (g == false), c}){2}]
  let l = {(! a(b, exp(f)))}{0}
  let m[n, o] = (if l then (if l then {j, exp(f), (array[m : argnum, n : d] d)}{2} else {(array[m : c, n : k] m), d, (c + e)}{0}) else (array[m : c, n : (- e)] i))
  return (! (l || ((- j) >= argnum)))
}

fn b(c[d] : bool[], { e[f] : float[] }, { {  }, { g[h, i, j] : bool[,,][,,] } }) : float {
  let k = a((array[k : (sum[k : (sum[k : (argnum / argnum), l : to_int(2.68)] h)] h), l : (sum[k : f, l : h, m : f] (argnum - args[d])), m : 604] (! {c, false}{1})), pow(acos(sqrt((sum[k : 814, l : 983, m : i] 74.53))), sin(asin(to_float(h)))))
  let {l[m, n, o], {p[q, r], s[t, u], v}} = {{(array[l : (sum[l : f, m : i] h), m : to_int(89.88), n : h] 29), {(array[l : f, m : j] l), (array[l : f, m : j] f), (sum[l : i, m : f] m)}}}{0}
  let w[x, y, z] = (array[w : m, x : (if (k != (! k)) then (argnum / f) else (n - f)), y : argnum] (if {(i <= argnum)}{0} then [(to_float(t) != (- 18.84)), (if false then c[t] else (! k)), (32.98 == acos(93.14))] else {(array[z : q] k)}{0}))
  let A[B, C] = (array[A : to_int({tan(23.97)}{0}), B : (z % (y % j))] (array[C : (- i)] (- (r / B))))
  return (array[D : t, E : i, F : r] cos(acos(to_float(F))))[h, n, q]
}

fn c({ d : {bool,float[,,],bool[,]} }) : int {
  let {e[f]} = {(array[e : to_int((- sqrt(80.35)))] {(e <= e)}{0})}
  let g = acos(atan2(tan(pow(acos(23.74), atan(51.81))), atan((if (1.91 > 81.07) then exp(62.17) else to_float(argnum)))))
  let h = (f >= (if (f > 510) then {f} else {(if false then 365 else 654)}){0})
  let i[j] = (if {tan(sin(g)), sqrt((- g)), (to_float(954) == (- g))}{2} then (array[i : c({d}), j : to_int(g)] [i, argnum, argnum])[to_int((- sin(57.21))), (- (- (if h then 912 else f)))] else (array[i : (sum[i : (sum[i : f] 422), j : 752] (568 + argnum))] to_int({g, true}{0})))
  return {atan2(tan(to_float(f)), (- 95.47)), (if (! true) then {j, 50.58, args}{0} else (sum[k : (sum[k : j, l : argnum, m : 614] argnum), l : (if h then f else j)] argnum))}{1}
}

fn d(e[f, g, h] : int[,,]) : bool {
  let {} = {}
  assert a({h, {29.45, true, 966}, (array[i : (argnum * 555), j : argnum, k : args[g]] (false && false))}{2}, to_float(f)), "i"
  let {i[j], k} = {(array[i : to_int(acos(22.73))] to_int(exp(asin(1.74)))), [pow((sum[i : (896 - argnum), j : f, k : (f - g)] tan(39.2)), (sum[i : g, j : (- h)] to_float(argnum))), (- to_float((sum[i : f, j : argnum] 595))), acos((sum[i : to_int(47.33), j : h, k : f] 66.97))]}
  assert {(if {false}{0} then to_float(argnum) else asin(atan(0.0))), (true == (h <= (sum[l : h, m : 460, n : 536] m))), (sum[l : 963, m : (sum[l : j, m : g, n : args[argnum]] f)] asin(7.77))}{1}, "l"
  return ((if false then log(log(sin(84.88))) else pow((sum[l : (j * f)] to_float(f)), (sum[l : argnum, m : h] tan(15.73)))) >= (- log((array[l : argnum, m : h] 70.17)[to_int(56.02), (sum[l : j, m : j] h)])))
}

let {e[f]} = {(array[e : (if (751 > (824 - argnum)) then argnum else (- (- argnum)))] exp(exp(77.79)))}
fn g(h : int, i : int, j[k, l] : bool[,]) : int[] {
  let {m[n, o, p]} = {(array[m : (- f), n : (sum[m : h] i), o : f] 57.07)}
  let q[r, s, t] = (if a((if d((array[q : o, r : h, s : h] i)) then (array[q : p, r : 743, s : f] false) else (if (f != h) then (array[q : i, r : i, s : o] true) else (array[q : i, r : n, s : 192] true))), sqrt(exp(sin(7.44)))) then (array[q : (array[q : i, r : k] r)[i, argnum]] (array[r : o, s : o] m)[to_int(96.93), (if false then l else 654)])[730] else m)
  let u = exp(atan2(pow(sin(to_float(argnum)), atan(log(32.94))), log(sqrt((sum[u : t, v : argnum, w : argnum] 34.16)))))
  assert d({(array[v : n, w : k, x : n] f)}{0}), "v"
  return g(l, (- o), (if true then {j} else {j}){0})
}

fn h(i[j, k, l] : float[,,], { m[n] : bool[], o[p, q, r] : {int,float}[,,] }, s[t] : int[][]) : float {
  let {u} = (if true then {m} else (if false then [{m}] else (array[u : f] {m}))[(if (if true then m[argnum] else false) then [argnum][n] else l)])
  let v[w, x] = (if (if d((array[v : r, w : 327, x : t] 209)) then d((array[v : argnum, w : l, x : t] n)) else true) then (array[v : r, w : (q - (sum[v : k] l)), x : f] (array[y : r, z : q] true)) else (array[v : p, w : argnum, x : (- to_int(39.93))] (array[y : (sum[y : x, z : t] y), z : t] true)))[(array[v : q, w : k] (array[x : v, y : r] v))[n, q][t, (sum[v : (sum[v : n, w : argnum, x : f] q), w : (- t)] j)], to_int((sqrt(asin(59.05)) / (- to_float(argnum)))), l]
  let y[z, A] = v
  let {B[C, D, E], F, {G, {{{}, H[I]}, J, {K[L, M], N}}, {}}} = {i, ((if (if (n <= x) then (q <= z) else (r != l)) then asin(to_float(argnum)) else asin(acos(19.35))) <= (sum[B : f, C : A] sin(acos(76.25)))), {asin(asin(tan(41.3))), (if true then {{{}, u}, {s, o}, {v, z}} else {{{}, u}, {s, o}, {y, f}}), {}}}
  return (cos(G) + acos((atan(tan(40.3)) % 18.35)))
}

let i[j, k, l] = (if (if (! (! true)) then {924, true, true}{1} else ((660 - f) >= (sum[i : f, j : f, k : argnum] j))) then {(array[i : 62, j : argnum, k : argnum] to_float(i))} else {(array[i : args[f], j : argnum, k : argnum] 13.05)}){0}
fn m() : float[,] {
  let {n[o, p]} = (if (j <= (f * to_int(acos(91.81)))) then {(if true then (l != argnum) else (! false)), {m()}}{1} else {j, (if (k != argnum) then {m()} else {m()})}{1})
  assert (to_int(atan(cos(38.51))) != 489), "q"
  let {q, r[s, t]} = (if (if a((array[q : p, r : (- p), s : 994] (f < q)), (to_float(argnum) - (- 64.37))) then (321 > p) else (j <= 71)) then (array[q : k, r : k, s : (sum[q : j, r : k] j)] {k, m()})[(o / j), (- to_int(tan(89.16))), (sum[q : f, r : o, s : o] s)] else {j, (if false then (array[q : f, r : l] n) else (array[q : p, r : l] m()))[p, f]})
  let u = l
  return (if (if ((k < q) != (! false)) then {s, (if true then false else true), false} else {l, (90.96 == 39.24), (l >= u)}){1} then (if (array[v : 22, w : l, x : u] (k >= w))[argnum, u, k] then n else (if (55.19 < 33.98) then (array[v : j, w : s, x : f] r) else (array[v : l, w : p, x : t] m()))[k, u, {j, f}{0}]) else r)
}

