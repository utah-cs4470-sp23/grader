let a[b] = {{args}{0}, (sin(log(22.23)) >= tan(to_float(346))), atan(93.15)}{0}
let c[d, e] = (if ((if ((b != 832) != false) then ((! false) && (b != 252)) else (! true)) || true) then (if (to_float(b) < 62.78) then {(array[c : b, d : 6] argnum)} else {(array[c : 780, d : argnum] 211)}){0} else {(if (false || true) then (array[c : argnum, d : argnum] c) else (array[c : b, d : b] b)), args}{0})
let {f, {g, h, {{}, i[j], k}}} = {{false, {false, [a], {{}, a, argnum}}}, false}{0}
let {} = (if ((tan(51.54) <= log(4.27)) || false) then {{args, c, {}}}{0} else (if ((e - k) != k) then {[d, k, 486], (array[l : argnum, m : j] m), {}} else {args, (array[l : 281, m : k] d), {}})){2}
fn l(m[n, o] : {}[,]) : bool[,,] {
  return (if g then (if f then {c, l(m), i} else {(array[p : o, q : argnum] e), (array[p : b, q : o, r : o] true), args}){1} else l((if false then {m, a, true} else {m, args, false}){0}))
  let p = [(- (acos(to_float(j)) - (if true then to_float(k) else tan(65.86)))), asin(atan2(to_float((- d)), pow(to_float(k), acos(58.08)))), to_float(j)]
  let q = (array[q : (- argnum), r : b] (sum[s : q, t : (- argnum), u : r] (- t)))
  let {{{{{r, s[t, u]}, v}, w}}} = {{{{{o, q}, true}, b}}}
  return (array[x : (- to_int(exp(exp(19.68)))), y : r, z : o] (z != r))
}

time let {m[n, o, p], q[r, s, t], u} = {{(array[m : argnum, n : e, o : b] j), (array[m : b, n : j, o : e] n), args}}{0}

assert f, "v"
fn v({ w : float, x : int }, y[z] : bool[]) : float {
  let A[B] = [pow(asin(exp(sin(w))), w), atan(cos(sin(70.54)))]
  assert ((if g then (to_int(exp(80.4)) != (if (64.57 == 58.55) then b else to_int(4.79))) else f) || (if ((! f) || (g && (! g))) then f else (if f then (false && (! f)) else (! y[j])))), "C"
  let {C, D, E} = (if (if g then (array[C : 103] f) else y)[d] then (array[C : k, D : s] (if false then {534, A, b} else {o, A, d}))[(array[C : n, D : argnum, E : n] (if f then n else p))[(sum[C : argnum, D : 13, E : j] E), 854, d], (j * 884)] else {o, (array[C : r] (sum[D : r] (if true then w else 17.65))), to_int(pow(w, w))})
  let F = v((array[F : o, G : to_int(A[x]), H : 330] {90.09, j})[r, c[n, {e, k, d}{1}], d], (if (cos(cos(56.02)) <= asin((sum[F : k, G : C, H : d] 19.34))) then (if (f == f) then (if false then y else y) else (array[F : argnum] false)) else (if g then {argnum, y} else {s, y}){1}))
  return tan((array[G : E, H : 681] to_float(c[k, k]))[to_int(exp(cos(w))), b])
}

let w[x, y, z] = (if (! (array[w : 55, x : t, y : e] true)[t, b, s]) then {k, (! false), (array[w : r, x : b] m)}{2} else {(array[w : j, x : s] q), b}{0})[s, d]
fn A({ B[C, D] : bool[,], E : float, F : float }, G[H] : float[]) : {} {
  return A({x, {(array[I : k, J : t] f), asin(E), log(F)}}{1}, [tan(((- F) / exp(F)))])
  let {} = A({{B, (- E), E}}{0}, (array[I : (array[I : C, J : j] j)[j, (sum[I : H, J : d, K : C] t)], J : (- x), K : z] G)[p, H, j])
  let {I, J} = {b, 439}
  let {} = (if {u, D, {B, false}}{2}{1} then (array[K : (s / I)] {b, h, {}})[I]{2} else (if (! (false == (g != f))) then (if f then [{}, {}] else (array[K : x] {}))[H] else {}))
  return A((if g then {(if (! false) then B else (array[K : o, L : D] g)), (array[K : s, L : y, M : r] 5.9)[s, r, (if true then e else y)], atan(to_float(H))} else {(if (C >= D) then (if false then B else B) else B), acos((- 7.23)), pow(E, F)}), (array[K : s] atan2(sin(23.74), acos(F))))
}

fn B(C : float) : int {
  let {} = (array[D : y, E : 907, F : 549] (if ((false && f) && g) then {} else (array[G : F, H : x] {})[o, F]))[o, j, d]
  let {D, E[F, G, H], {I[J], K[L], M[N]}} = (if false then {(C <= sqrt(41.03)), {argnum, w, {args, h, a}}, o}{1} else (if (if (f && g) then [true, f] else (array[D : t] g))[428] then {(sum[D : 208, E : d] o), (array[D : q[b, k, s], E : (e - e), F : (sum[D : o, E : s, F : argnum] k)] k), {a, (array[D : y] args), (array[D : n] e)}} else (if (if (y > 251) then (true && true) else false) then {x, (if g then q else m), {i, h, args}} else {(k * n), m, {i, h, i}})))
  assert (f != {{false}}{0}{0}), "O"
  let {} = (if [(J == F), (f && f)][H] then (if (if (if f then f else true) then (false == g) else (f && true)) then {N, m, (if f then {} else {})} else (if g then {b, q, {}} else {s, w, {}})) else {G, m, {}}){2}
  return x
}

read "C.png" to C

