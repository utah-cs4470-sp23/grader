(PrintCmd "a")
(LetCmd
 (ArgLValue (VarArgument (FloatType) a))
 (CallExpr
  (FloatType)
  sqrt
  (CallExpr
   (FloatType)
   asin
   (BinopExpr
    (FloatType)
    (TupleIndexExpr
     (FloatType)
     (TupleLiteralExpr
      (TupleType (BoolType) (FloatType) (ArrayType (IntType) 1))
      (TrueExpr (BoolType))
      (FloatExpr (FloatType) 14)
      (VarExpr (ArrayType (IntType) 1) args))
     1)
    *
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 45)))))))
(ReadCmd
 "b.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  b))
(AssertCmd
 (TupleIndexExpr
  (BoolType)
  (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
  0)
 "c")
(LetCmd (ArgLValue (VarArgument (IntType) c)) (VarExpr (IntType) argnum))
(ReadCmd
 "d.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  d))
(LetCmd
 (ArgLValue (VarArgument (ArrayType (IntType) 1) e))
 (VarExpr (ArrayType (IntType) 1) args))
(LetCmd (ArgLValue (VarArgument (IntType) f)) (VarExpr (IntType) c))
(TimeCmd
 (LetCmd
  (ArgLValue (ArrayArgument g h))
  (ArrayIndexExpr
   (ArrayType (IntType) 1)
   (IfExpr
    (ArrayType (ArrayType (IntType) 1) 2)
    (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 1) 2)
     g
     (UnopExpr (IntType) - (IntExpr (IntType) 512))
     h
     (VarExpr (IntType) argnum)
     (VarExpr (ArrayType (IntType) 1) args))
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 1) 2)
     g
     (BinopExpr (IntType) (IntExpr (IntType) 709) / (VarExpr (IntType) c))
     h
     (VarExpr (IntType) c)
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      i
      (VarExpr (IntType) c)
      (VarExpr (IntType) g))))
   (VarExpr (IntType) c)
   (CallExpr
    (IntType)
    to_int
    (SumLoopExpr
     (FloatType)
     g
     (IntExpr (IntType) 356)
     (FloatExpr (FloatType) 39))))))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument (IntType) i)))
 (IfExpr
  (TupleType (IntType))
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))
    (CallExpr (FloatType) exp (FloatExpr (FloatType) 29)))
   !=
   (IfExpr
    (FloatType)
    (IfExpr
     (BoolType)
     (BinopExpr
      (BoolType)
      (IntExpr (IntType) 303)
      ==
      (VarExpr (IntType) argnum))
     (BinopExpr
      (BoolType)
      (VarExpr (FloatType) a)
      ==
      (FloatExpr (FloatType) 49))
     (UnopExpr (BoolType) ! (TrueExpr (BoolType))))
    (ArrayIndexExpr
     (FloatType)
     (ArrayLoopExpr
      (ArrayType (FloatType) 3)
      i
      (VarExpr (IntType) h)
      j
      (VarExpr (IntType) argnum)
      k
      (VarExpr (IntType) h)
      (FloatExpr (FloatType) 16))
     (IntExpr (IntType) 105)
     (VarExpr (IntType) c)
     (SumLoopExpr
      (IntType)
      i
      (IntExpr (IntType) 422)
      j
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) h)))
    (CallExpr (FloatType) log (FloatExpr (FloatType) 3))))
  (ArrayIndexExpr
   (TupleType (IntType))
   (ArrayLoopExpr
    (ArrayType (TupleType (IntType)) 2)
    i
    (VarExpr (IntType) f)
    j
    (BinopExpr
     (IntType)
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      -
      (VarExpr (IntType) argnum))
     -
     (VarExpr (IntType) c))
    (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) j)))
   (VarExpr (IntType) c)
   (BinopExpr
    (IntType)
    (ArrayIndexExpr
     (IntType)
     (VarExpr (ArrayType (IntType) 1) g)
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) e)
      (IntExpr (IntType) 61)))
    *
    (IfExpr
     (IntType)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) == (TrueExpr (BoolType)))
     (BinopExpr (IntType) (VarExpr (IntType) f) + (VarExpr (IntType) f))
     (VarExpr (IntType) f))))
  (TupleIndexExpr
   (TupleType (IntType))
   (IfExpr
    (TupleType (IntType) (TupleType (IntType)))
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      i
      (VarExpr (IntType) h)
      j
      (IntExpr (IntType) 934)
      (TrueExpr (BoolType)))
     (VarExpr (IntType) argnum)
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (VarExpr (IntType) argnum)))
    (TupleLiteralExpr
     (TupleType (IntType) (TupleType (IntType)))
     (SumLoopExpr (IntType) i (VarExpr (IntType) f) (VarExpr (IntType) h))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) h)))
    (TupleLiteralExpr
     (TupleType (IntType) (TupleType (IntType)))
     (SumLoopExpr
      (IntType)
      i
      (VarExpr (IntType) f)
      j
      (IntExpr (IntType) 831)
      (VarExpr (IntType) argnum))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) h))))
   1)))
(LetCmd
 (ArgLValue (VarArgument (ArrayType (IntType) 1) j))
 (VarExpr (ArrayType (IntType) 1) g))
(LetCmd
 (ArgLValue (ArrayArgument k l m n))
 (ArrayLoopExpr
  (ArrayType (FloatType) 3)
  k
  (CallExpr
   (IntType)
   to_int
   (CallExpr
    (FloatType)
    exp
    (CallExpr
     (FloatType)
     atan2
     (CallExpr (FloatType) exp (VarExpr (FloatType) a))
     (CallExpr (FloatType) tan (VarExpr (FloatType) a)))))
  l
  (CallExpr
   (IntType)
   to_int
   (CallExpr
    (FloatType)
    atan2
    (CallExpr
     (FloatType)
     sin
     (SumLoopExpr
      (FloatType)
      k
      (VarExpr (IntType) i)
      l
      (VarExpr (IntType) i)
      m
      (IntExpr (IntType) 402)
      (FloatExpr (FloatType) 73)))
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) acos (VarExpr (FloatType) a)))))
  m
  (IfExpr
   (IntType)
   (IfExpr
    (BoolType)
    (BinopExpr (BoolType) (TrueExpr (BoolType)) && (FalseExpr (BoolType)))
    (FalseExpr (BoolType))
    (BinopExpr
     (BoolType)
     (BinopExpr
      (BoolType)
      (FloatExpr (FloatType) 16)
      >=
      (VarExpr (FloatType) a))
     &&
     (BinopExpr (BoolType) (TrueExpr (BoolType)) || (TrueExpr (BoolType)))))
   (UnopExpr (IntType) - (VarExpr (IntType) argnum))
   (SumLoopExpr
    (IntType)
    k
    (VarExpr (IntType) f)
    l
    (VarExpr (IntType) i)
    m
    (SumLoopExpr
     (IntType)
     k
     (CallExpr (IntType) to_int (VarExpr (FloatType) a))
     (VarExpr (IntType) argnum))
    (IntExpr (IntType) 885)))
  (CallExpr
   (FloatType)
   sin
   (UnopExpr
    (FloatType)
    -
    (CallExpr
     (FloatType)
     exp
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 0)))))))
