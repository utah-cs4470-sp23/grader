fn a() : bool {
  let b[c, d, e] = (if a() then {{{a()}, 78.69}, (array[b : (argnum - argnum), c : (sum[b : argnum, c : 264] c), d : (694 * argnum)] 11.46), args}{1} else {(array[b : (21 - argnum), c : argnum, d : (argnum / argnum)] to_float(argnum))}{0})
  return (e == (sum[f : d, g : (- (- (- e))), h : 56] e))
  let f[g, h] = (if (array[f : (array[f : d, g : 656] d)[d, 13], g : (sum[f : 674] (- 347))] ((! true) == (a() != a())))[c, (sum[f : e] (if true then (sum[g : d, h : d] h) else 259))] then (array[f : (- argnum), g : ((if a() then e else e) / {argnum}{0})] asin((- cos(20.39)))) else {true, b, (if false then (array[f : e, g : c] 69.5) else (array[f : e, g : d] 12.28))}{2})
  let i = e
  return (! (atan2(sqrt(acos(75.46)), sin(exp(80.26))) < to_float((sum[j : g, k : 220] (616 / k)))))
}

assert {atan(sin(to_float(argnum))), (! {a()}{0})}{1}, "b"
let {} = {}
let {} = {}
fn b() : bool {
  let c = exp(log(asin(44.73)))
  let {d, e, {f, g[h], i}} = (if (if (array[d : 369] a())[(- argnum)] then ((- 807) == (if b() then args[598] else (675 % 281))) else [a()][((sum[d : 57] 693) + (- 825))]) then {{25.28, (! b()), {false, args, a()}}}{0} else (if (array[d : to_int(80.77), e : argnum, f : (argnum / 939)] b())[412, (758 * 869), (136 % argnum)] then {(log(c) * (- 26.28)), a(), {(b() && a()), [876], (! b())}} else {to_float(args[argnum]), false, {b(), (array[d : 804] 710), (! true)}}))
  return (to_int([to_float(h), acos(c)][(if f then (if b() then h else argnum) else h)]) < 942)
  assert e, "j"
  return (to_float(h) < (array[j : (array[j : h, k : 346, l : argnum] h)[(- argnum), argnum, (sum[j : h] argnum)], k : (if e then to_int(64.69) else argnum)] d)[(sum[j : (if (b() != f) then (if f then argnum else h) else (- h))] h), to_int(asin((44.7 / d)))])
}

let {c} = (if (if {true}{0} then a() else (a() && a())) then (array[c : argnum, d : (argnum % to_int(85.26))] {(if false then false else true)}) else (array[c : args[(- argnum)], d : 385] (if a() then {true} else {true})))[argnum, 609]
fn d(e[f] : float[,][], g[h, i] : {float,bool,int}[,], j[k, l] : bool[,]) : bool {
  let m[n] = [((if a() then to_float(args[k]) else asin(to_float(k))) >= acos((95.95 * to_float(i)))), (l < l), (argnum != (sum[m : (- i)] h))]
  assert (if (if (array[o : h, p : argnum] c)[970, (sum[o : (- h)] i)] then b() else c) then (! a()) else d(e, (if b() then (array[o : h, p : f] g[866, i]) else {g}{0}), (array[o : argnum, p : k] false))), "o"
  let {{o}, p[q], r} = [{(if c then {h} else {argnum}), args, args}, {(if (! c) then {231} else {f}), (array[o : args[n]] o), (array[o : h] args)[f]}][((k - (sum[o : (- h), p : i] k)) + (- l))]
  assert d((if {true}{0} then (array[s : args[939]] e) else [(if b() then e else e)])[n], (if (if false then (a() != c) else d(e, g, j)) then (if (a() && b()) then (array[s : n, t : 617] g) else (array[s : o, t : argnum] g)) else (array[s : (sum[s : l, t : argnum, u : n] o), t : (if b() then argnum else h)] g))[924, {e, (sum[s : f, t : h, u : argnum] n), to_float(o)}{1}], {(array[s : i, t : 284, u : l] j)[l, (- k), (413 - q)]}{0}), "s"
  return c
}

assert ((array[e : to_int(32.98), f : (argnum % 773)] {argnum, f, a()})[(- (sum[e : 89, f : 354, g : 544] argnum)), (array[e : argnum] argnum)[argnum]]{2} && (to_float((- (- argnum))) == (if (if a() then b() else (if true then b() else b())) then pow(to_float(604), cos(60.5)) else asin(74.39)))), "e"
let e[f] = (array[e : (- (sum[e : to_int(87.58), f : 513] 13))] args)[(array[e : 876] 56)[1000]]
let g[h, i] = (array[g : (- argnum), h : f] log(atan(sqrt(log(63.67)))))
let j = {f, pow(sin(cos(87.68)), g[(if c then i else 900), f]), false}{2}
let k = {(cos(exp(sin(10.94))) * log((- to_float(i)))), b(), (if (! (if b() then (c == c) else (true && j))) then pow(to_float((if a() then 524 else h)), (sum[k : (if j then argnum else f), l : (sum[k : 113] i)] asin(96.34))) else exp((sum[k : f, l : f, m : h] acos(72.49))))}
