show argnum

print "a"

let a[b, c, d] = (array[a : argnum, b : (if (array[a : 847] (true != false))[(if (! false) then argnum else (- argnum))] then (array[a : 633, b : 504] (sum[c : a, d : 324] a))[(if (960 < 613) then (- 431) else (sum[a : argnum, b : argnum, c : 62] a)), {argnum}{0}] else argnum), c : (- (if (argnum >= argnum) then 453 else (array[a : argnum, b : 338] b)[args[716], argnum]))] atan2(atan(pow(to_float(c), 6.42)), (if (if true then (argnum != argnum) else true) then 8.84 else tan(35.29))))
fn e() : int[,][] {
  let f = (array[f : (if false then (- to_int(sin(24.23))) else d), g : (- (149 - {d, b}{0}))] {})
  return [(if (! (true || (895 != d))) then (if (true && (d < c)) then (array[g : d, h : c] (if true then d else b)) else (array[g : d, h : to_int(20.09)] (- b))) else (if ((917 * argnum) < (- d)) then (array[g : (- d), h : (- 1)] (sum[i : b, j : d] g)) else e()[argnum]))]
  let {g, h, i} = {e()[(array[g : b, h : 102] g)[(- c), argnum]], {sin(sqrt(27.41)), (array[g : (- d)] false)}{0}, ({args, d}{1} >= (if ((- d) != b) then d else (582 + c)))}
  let j[k] = args
  return (array[l : c, m : (if i then (231 + argnum) else (d / c))] (array[n : (argnum / 598), o : 658, p : 661] (array[q : 170] g)))[b, {b, k, (- b)}{0}][(- (sum[l : (if (b > d) then (k / c) else c), m : g[k, b]] (sum[n : d] 174))), (- (sum[l : (array[l : c, m : argnum, n : b] l)[argnum, b, argnum]] (b + 44))), (sum[l : (if (i == true) then (array[l : k, m : k] d) else g)[(d + (- b)), to_int(log(h))], m : (- b), n : to_int(52.43)] (argnum % (- (d * b))))]
}

print "f"

fn f(g[h, i, j] : float[,,], k : {int,{},bool}[,,], l : bool[]) : {int,int} {
  return (array[m : h, n : ((c % c) + [h][(- 109)])] {(if true then (- d) else m), (- n)})[j, i]
  let m[n, o] = (array[m : h, n : j, o : i] (array[p : n, q : n, r : 605] (array[s : o, t : p] args)))[640, (sum[m : i, n : 97, o : {c, b}{1}] i), b][564, (i * h), h]
  let {p[q, r], {s, t[u, v, w], x[y, z]}, {{{}, A[B, C]}}} = (array[p : (if {true, d, d}{0} then 487 else to_int(to_float(h)))] {(array[q : h] m)[o], {e(), a, (array[q : n, r : c] m)}, {{{}, m}}})[(n + d)]
  return (if false then [(if (q != i) then f(t, k, l) else {c, z}), f(g, k, l)][n] else f(t, {j, i, k}{2}, l))
  return {q, (array[D : c, E : u] {u, E})}{1}[y, (if true then argnum else C)]
}

fn g({ h : int }, {  }) : float {
  let i = {sqrt(atan({8.81, args, 24.06}{0}))}
  assert ([(array[j : d, k : b] true), (array[j : argnum, k : argnum] true)][h][c, c] && (333 != argnum)), "j"
  let j = f((array[j : 485, k : argnum, l : argnum] atan(asin(exp(83.31)))), (if (c == 716) then (array[j : to_int(40.1), k : c, l : (if (475 == argnum) then c else 70)] {c, {}, (! true)}) else (array[j : h, k : c, l : h] (if true then {argnum, {}, false} else {k, {}, false}))), [(i{0} == sin(exp(3.07)))])
  let {k[l], m} = (array[k : d, l : argnum] {92.55, {e(), c}, atan(35.61)})[{605, d}{1}, {{}, argnum}{1}]{1}
  return 90.04
}

let h[i, j] = (array[h : (- (- b)), i : b] to_int(g({h}, {a, {}, a}{1})))
time let {{k[l, m, n], o[p, q]}} = {(if ((b >= b) && (i >= 581)) then (if (! false) then {a, h} else {a, h}) else {(if false then a else a), (array[k : b, l : 18] b)})}

fn r(s[t, u, v] : float[,][,,], w[x] : bool[]) : {{},float} {
  let y[z] = [(array[y : n, z : (v + 317)] b)[(array[y : o[t, c], z : b, A : t] l)[i, c, u], x], q]
  return {(array[A : o[q, t], B : o[q, t]] r(s, w))[d, j], cos((sum[A : t, B : u, C : v] to_float(B))), q}{0}
  let {} = (if false then {u, (array[A : d, B : m, C : d] {}), n}{1}[c, m, argnum] else {})
  let {} = {}
  return (if (! (! (d != u))) then (if (w[b] || true) then {r(s, w), e(), d} else {{{}, 0.9}, (if true then e() else e()), d}) else {r(s, w), (array[A : (if true then c else v)] o), (b % x)}){0}
}

let {} = (if (! (if (j == 334) then (! false) else (false || false))) then (array[s : b, t : (if (14 == p) then n else j)] {}) else (if ((i == 288) && true) then (if true then (array[s : 87, t : i] {}) else (array[s : l, t : m] {})) else (array[s : (- n), t : 160] {})))[to_int(1.32), ((if ((d == c) || (995 > m)) then (- h[i, q]) else to_int(sin(54.68))) * (sum[s : (sum[s : argnum, t : (q - p), u : (sum[s : c, t : n] c)] j), t : q, u : (- (- j))] o[n, b]))]
fn s(t[u] : float[][], v : int) : int {
  let w = g([{argnum}][u], {})
  let x = t
  let y[z, A] = (if (array[y : p] (! false))[argnum] then (array[y : (sum[y : j, z : n, A : d] j), z : v, A : b] {o})[argnum, argnum, c] else (array[y : argnum, z : argnum] {h})[p, d]){0}
  let B[C, D] = (if (if {x, 36.45, false}{2} then (((A != c) == (A == A)) || (if (95.02 < 37.35) then false else (! true))) else {(false != false)}{0}) then {u, to_int(1.8), y}{2} else h)
  return (if (if false then false else (if true then false else (! false))) then {j, {}, {b, n}}{2} else {u, c}){0}
}

