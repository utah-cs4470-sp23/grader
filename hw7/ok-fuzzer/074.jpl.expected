(LetCmd
 (ArgLValue (ArrayArgument a b c))
 (ArrayIndexExpr
  (ArrayType (FloatType) 2)
  (TupleIndexExpr
   (ArrayType (ArrayType (FloatType) 2) 2)
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (ArrayType (ArrayType (FloatType) 2) 2))
    (CallExpr
     (FloatType)
     sqrt
     (CallExpr (FloatType) to_float (IntExpr (IntType) 1000)))
    (CallExpr
     (FloatType)
     atan
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 48)))
    (ArrayLoopExpr
     (ArrayType (ArrayType (FloatType) 2) 2)
     a
     (BinopExpr (IntType) (VarExpr (IntType) argnum) * (IntExpr (IntType) 370))
     b
     (IntExpr (IntType) 100)
     (ArrayLoopExpr
      (ArrayType (FloatType) 2)
      c
      (VarExpr (IntType) a)
      d
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 19))))
   2)
  (TupleIndexExpr
   (IntType)
   (TupleLiteralExpr
    (TupleType (FloatType) (IntType) (FloatType))
    (IfExpr
     (FloatType)
     (TrueExpr (BoolType))
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 77))
     (FloatExpr (FloatType) 15))
    (SumLoopExpr
     (IntType)
     a
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (VarExpr (IntType) a))
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 9))))
   1)
  (BinopExpr
   (IntType)
   (SumLoopExpr
    (IntType)
    a
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      ==
      (IntExpr (IntType) 98))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) argnum))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 56)))
    (BinopExpr
     (IntType)
     (IntExpr (IntType) 386)
     /
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      +
      (VarExpr (IntType) argnum))))
   *
   (IfExpr
    (IntType)
    (UnopExpr
     (BoolType)
     !
     (IfExpr
      (BoolType)
      (FalseExpr (BoolType))
      (TrueExpr (BoolType))
      (FalseExpr (BoolType))))
    (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
    (BinopExpr
     (IntType)
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     /
     (IntExpr (IntType) 424))))))
(PrintCmd "d")
(LetCmd
 (TupleLValue (ArgLValue (ArrayArgument d e f)))
 (TupleLiteralExpr
  (TupleType (ArrayType (IntType) 2))
  (ArrayLoopExpr
   (ArrayType (IntType) 2)
   d
   (VarExpr (IntType) b)
   e
   (TupleIndexExpr
    (IntType)
    (TupleLiteralExpr
     (TupleType (IntType))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) b)
      (VarExpr (IntType) argnum)))
    0)
   (CallExpr (IntType) to_int (FloatExpr (FloatType) 74)))))
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument g))
  (ArgLValue (VarArgument h))
  (ArgLValue (VarArgument i)))
 (IfExpr
  (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
  (BinopExpr
   (BoolType)
   (CallExpr (FloatType) cos (FloatExpr (FloatType) 69))
   ==
   (FloatExpr (FloatType) 47))
  (ArrayIndexExpr
   (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
   (ArrayLoopExpr
    (ArrayType
     (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
     2)
    g
    (ArrayIndexExpr
     (IntType)
     (VarExpr (ArrayType (IntType) 1) args)
     (UnopExpr (IntType) - (VarExpr (IntType) f)))
    h
    (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
     (FloatExpr (FloatType) 56)
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 2) 2)
      i
      (VarExpr (IntType) c)
      j
      (VarExpr (IntType) g)
      (VarExpr (ArrayType (IntType) 2) d))
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 33))))
   (IfExpr
    (IntType)
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (IntExpr (IntType) 134) == (VarExpr (IntType) b)))
    (UnopExpr (IntType) - (VarExpr (IntType) argnum))
    (BinopExpr
     (IntType)
     (SumLoopExpr
      (IntType)
      g
      (VarExpr (IntType) c)
      h
      (VarExpr (IntType) c)
      (VarExpr (IntType) e))
     -
     (SumLoopExpr (IntType) g (VarExpr (IntType) b) (IntExpr (IntType) 349))))
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 2)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (TrueExpr (BoolType)))
     (IfExpr
      (ArrayType (IntType) 2)
      (TrueExpr (BoolType))
      (VarExpr (ArrayType (IntType) 2) d)
      (VarExpr (ArrayType (IntType) 2) d))
     (IfExpr
      (ArrayType (IntType) 2)
      (FalseExpr (BoolType))
      (VarExpr (ArrayType (IntType) 2) d)
      (VarExpr (ArrayType (IntType) 2) d)))
    (IntExpr (IntType) 99)
    (SumLoopExpr (IntType) g (VarExpr (IntType) f) (IntExpr (IntType) 950))))
  (ArrayIndexExpr
   (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
   (ArrayLiteralExpr
    (ArrayType
     (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
     1)
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (ArrayType (IntType) 2) 2) (FloatType))
     (FloatExpr (FloatType) 6)
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 2) 2)
      g
      (VarExpr (IntType) argnum)
      h
      (VarExpr (IntType) b)
      (VarExpr (ArrayType (IntType) 2) d))
     (FloatExpr (FloatType) 36)))
   (VarExpr (IntType) f))))
(LetCmd (TupleLValue) (TupleLiteralExpr (TupleType)))
(AssertCmd
 (BinopExpr
  (BoolType)
  (UnopExpr (IntType) - (VarExpr (IntType) c))
  >=
  (IfExpr
   (IntType)
   (UnopExpr (BoolType) ! (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
   (VarExpr (IntType) b)
   (UnopExpr (IntType) - (VarExpr (IntType) f))))
 "j")
(LetCmd (ArgLValue (ArrayArgument j k l)) (VarExpr (ArrayType (IntType) 2) d))
(ShowCmd (VarExpr (FloatType) g))
(LetCmd (ArgLValue (VarArgument m)) (VarExpr (ArrayType (FloatType) 2) a))
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument n o p q))
  (ArgLValue (ArrayArgument r s t))
  (TupleLValue))
 (IfExpr
  (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType))
  (IfExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (IfExpr
     (BoolType)
     (TrueExpr (BoolType))
     (BinopExpr (BoolType) (VarExpr (IntType) c) <= (VarExpr (IntType) argnum))
     (BinopExpr (BoolType) (VarExpr (IntType) k) != (VarExpr (IntType) c)))
    ==
    (TrueExpr (BoolType)))
   (BinopExpr
    (BoolType)
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) tan (VarExpr (FloatType) g)))
    <=
    (CallExpr
     (FloatType)
     sqrt
     (SumLoopExpr
      (FloatType)
      n
      (VarExpr (IntType) e)
      o
      (VarExpr (IntType) k)
      (VarExpr (FloatType) i))))
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (SumLoopExpr
      (IntType)
      n
      (VarExpr (IntType) l)
      o
      (VarExpr (IntType) c)
      (VarExpr (IntType) c))
     >=
     (BinopExpr (IntType) (VarExpr (IntType) c) + (VarExpr (IntType) c)))
    ||
    (TrueExpr (BoolType))))
  (ArrayIndexExpr
   (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType))
   (ArrayLoopExpr
    (ArrayType
     (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType))
     2)
    n
    (BinopExpr (IntType) (VarExpr (IntType) c) + (VarExpr (IntType) b))
    o
    (IfExpr
     (IntType)
     (BinopExpr (BoolType) (VarExpr (IntType) argnum) >= (VarExpr (IntType) f))
     (BinopExpr (IntType) (VarExpr (IntType) f) + (VarExpr (IntType) e))
     (VarExpr (IntType) c))
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      p
      (VarExpr (IntType) k)
      q
      (VarExpr (IntType) argnum)
      r
      (VarExpr (IntType) n)
      (VarExpr (IntType) n))
     (VarExpr (ArrayType (FloatType) 2) a)
     (TupleLiteralExpr (TupleType))))
   (BinopExpr (IntType) (VarExpr (IntType) k) + (VarExpr (IntType) c))
   (VarExpr (IntType) c))
  (TupleIndexExpr
   (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType))
   (TupleLiteralExpr
    (TupleType
     (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType)))
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3) (ArrayType (FloatType) 2) (TupleType))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      n
      (VarExpr (IntType) b)
      o
      (VarExpr (IntType) c)
      p
      (IntExpr (IntType) 734)
      (VarExpr (IntType) l))
     (VarExpr (ArrayType (FloatType) 2) a)
     (IfExpr
      (TupleType)
      (TrueExpr (BoolType))
      (TupleLiteralExpr (TupleType))
      (TupleLiteralExpr (TupleType)))))
   0)))
(LetCmd (ArgLValue (VarArgument u)) (VarExpr (ArrayType (FloatType) 2) m))
(LetCmd
 (ArgLValue (VarArgument v))
 (CallExpr
  (FloatType)
  log
  (BinopExpr
   (FloatType)
   (FloatExpr (FloatType) 60)
   /
   (CallExpr
    (FloatType)
    acos
    (CallExpr (FloatType) exp (FloatExpr (FloatType) 95))))))
