(LetCmd
 (ArgLValue (VarArgument (FloatType) a))
 (UnopExpr
  (FloatType)
  -
  (CallExpr
   (FloatType)
   sin
   (CallExpr
    (FloatType)
    sin
    (CallExpr
     (FloatType)
     exp
     (CallExpr (FloatType) log (FloatExpr (FloatType) 77)))))))
(LetCmd
 (ArgLValue (ArrayArgument b c))
 (TupleIndexExpr
  (ArrayType (FloatType) 1)
  (IfExpr
   (TupleType (ArrayType (FloatType) 1) (BoolType) (FloatType))
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (FloatType) (BoolType) (BoolType))
     (SumLoopExpr
      (FloatType)
      b
      (VarExpr (IntType) argnum)
      c
      (IntExpr (IntType) 984)
      (VarExpr (FloatType) a))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (UnopExpr (BoolType) ! (TrueExpr (BoolType))))
    1)
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 1) (BoolType) (FloatType))
    (ArrayLoopExpr
     (ArrayType (FloatType) 1)
     b
     (VarExpr (IntType) argnum)
     (FloatExpr (FloatType) 32))
    (BinopExpr
     (BoolType)
     (IfExpr
      (BoolType)
      (FalseExpr (BoolType))
      (TrueExpr (BoolType))
      (TrueExpr (BoolType)))
     &&
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (TrueExpr (BoolType))))
    (CallExpr
     (FloatType)
     cos
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 14))))
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 1) (BoolType) (FloatType))
    (ArrayLoopExpr
     (ArrayType (FloatType) 1)
     b
     (IntExpr (IntType) 208)
     (CallExpr
      (FloatType)
      atan2
      (VarExpr (FloatType) a)
      (VarExpr (FloatType) a)))
    (FalseExpr (BoolType))
    (BinopExpr
     (FloatType)
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 79))
     /
     (CallExpr (FloatType) asin (VarExpr (FloatType) a)))))
  0))
(TimeCmd
 (LetCmd
  (TupleLValue
   (ArgLValue (ArrayArgument d e))
   (ArgLValue (VarArgument (FloatType) f))
   (TupleLValue (ArgLValue (VarArgument (FloatType) g))))
  (TupleLiteralExpr
   (TupleType (ArrayType (FloatType) 1) (FloatType) (TupleType (FloatType)))
   (VarExpr (ArrayType (FloatType) 1) b)
   (CallExpr
    (FloatType)
    log
    (CallExpr
     (FloatType)
     sqrt
     (CallExpr (FloatType) to_float (VarExpr (IntType) c))))
   (IfExpr
    (TupleType (FloatType))
    (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
    (IfExpr
     (TupleType (FloatType))
     (TrueExpr (BoolType))
     (TupleLiteralExpr (TupleType (FloatType)) (VarExpr (FloatType) a))
     (TupleLiteralExpr (TupleType (FloatType)) (FloatExpr (FloatType) 20)))
    (TupleLiteralExpr (TupleType (FloatType)) (FloatExpr (FloatType) 13))))))
(LetCmd
 (ArgLValue (ArrayArgument h i j k))
 (ArrayLoopExpr
  (ArrayType (ArrayType (IntType) 1) 3)
  h
  (CallExpr
   (IntType)
   to_int
   (CallExpr
    (FloatType)
    pow
    (VarExpr (FloatType) a)
    (TupleIndexExpr
     (FloatType)
     (TupleLiteralExpr (TupleType (FloatType)) (VarExpr (FloatType) g))
     0)))
  i
  (VarExpr (IntType) c)
  j
  (IntExpr (IntType) 128)
  (VarExpr (ArrayType (IntType) 1) args)))
(LetCmd
 (ArgLValue (ArrayArgument l m))
 (ArrayLiteralExpr
  (ArrayType (ArrayType (FloatType) 1) 1)
  (VarExpr (ArrayType (FloatType) 1) b)
  (VarExpr (ArrayType (FloatType) 1) d)))
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument (IntType) n))
  (ArgLValue (VarArgument (FloatType) o))
  (ArgLValue (ArrayArgument p q r)))
 (ArrayIndexExpr
  (TupleType (IntType) (FloatType) (ArrayType (IntType) 2))
  (ArrayLoopExpr
   (ArrayType (TupleType (IntType) (FloatType) (ArrayType (IntType) 2)) 2)
   n
   (VarExpr (IntType) c)
   o
   (VarExpr (IntType) e)
   (TupleLiteralExpr
    (TupleType (IntType) (FloatType) (ArrayType (IntType) 2))
    (VarExpr (IntType) j)
    (CallExpr (FloatType) to_float (VarExpr (IntType) o))
    (IfExpr
     (ArrayType (IntType) 2)
     (FalseExpr (BoolType))
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      p
      (VarExpr (IntType) o)
      q
      (VarExpr (IntType) c)
      (VarExpr (IntType) p))
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      p
      (VarExpr (IntType) n)
      q
      (VarExpr (IntType) k)
      (VarExpr (IntType) k)))))
  (VarExpr (IntType) j)
  (VarExpr (IntType) argnum)))
(AssertCmd
 (BinopExpr
  (BoolType)
  (SumLoopExpr
   (FloatType)
   s
   (ArrayIndexExpr
    (IntType)
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     s
     (IntExpr (IntType) 444)
     t
     (VarExpr (IntType) n)
     (VarExpr (IntType) s))
    (VarExpr (IntType) k)
    (SumLoopExpr (IntType) s (VarExpr (IntType) i) (VarExpr (IntType) i)))
   (CallExpr (FloatType) to_float (VarExpr (IntType) e)))
  <=
  (VarExpr (FloatType) f))
 "s")
(AssertCmd (TrueExpr (BoolType)) "s")
(ShowCmd (VarExpr (IntType) e))
(ReadCmd "s.png" (ArrayArgument s t u))
(LetCmd (ArgLValue (VarArgument (IntType) v)) (VarExpr (IntType) c))
(AssertCmd
 (IfExpr
  (BoolType)
  (BinopExpr
   (BoolType)
   (BinopExpr
    (FloatType)
    (CallExpr (FloatType) to_float (IntExpr (IntType) 794))
    *
    (CallExpr (FloatType) cos (VarExpr (FloatType) f)))
   <
   (TupleIndexExpr
    (FloatType)
    (TupleLiteralExpr
     (TupleType (IntType) (FloatType))
     (VarExpr (IntType) v)
     (VarExpr (FloatType) f))
    1))
  (BinopExpr
   (BoolType)
   (TupleIndexExpr
    (BoolType)
    (IfExpr
     (TupleType (BoolType))
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType))))
    0)
   !=
   (BinopExpr
    (BoolType)
    (VarExpr (FloatType) o)
    !=
    (CallExpr
     (FloatType)
     atan2
     (FloatExpr (FloatType) 42)
     (VarExpr (FloatType) g))))
  (BinopExpr
   (BoolType)
   (UnopExpr
    (BoolType)
    !
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) e) == (VarExpr (IntType) c))
     (TrueExpr (BoolType))
     (TrueExpr (BoolType))))
   &&
   (BinopExpr
    (BoolType)
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     0)
    ||
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (FloatType) f) != (VarExpr (FloatType) a))
     &&
     (BinopExpr (BoolType) (VarExpr (IntType) j) < (IntExpr (IntType) 416))))))
 "w")
