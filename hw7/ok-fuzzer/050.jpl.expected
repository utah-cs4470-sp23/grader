(LetCmd
 (ArgLValue (ArrayArgument a b c))
 (ArrayLoopExpr
  (ArrayType (FloatType) 2)
  a
  (VarExpr (IntType) argnum)
  b
  (IfExpr
   (IntType)
   (BinopExpr (BoolType) (IntExpr (IntType) 166) > (IntExpr (IntType) 718))
   (SumLoopExpr
    (IntType)
    a
    (SumLoopExpr
     (IntType)
     a
     (VarExpr (IntType) argnum)
     b
     (IntExpr (IntType) 3)
     c
     (UnopExpr (IntType) - (IntExpr (IntType) 823))
     (IntExpr (IntType) 647))
    b
    (BinopExpr
     (IntType)
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      -
      (VarExpr (IntType) argnum))
     *
     (BinopExpr (IntType) (IntExpr (IntType) 76) * (VarExpr (IntType) argnum)))
    c
    (IfExpr
     (IntType)
     (TrueExpr (BoolType))
     (VarExpr (IntType) argnum)
     (VarExpr (IntType) argnum))
    (UnopExpr (IntType) - (VarExpr (IntType) b)))
   (VarExpr (IntType) argnum))
  (CallExpr
   (FloatType)
   pow
   (FloatExpr (FloatType) 42)
   (BinopExpr
    (FloatType)
    (CallExpr
     (FloatType)
     exp
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 18)))
    +
    (CallExpr (FloatType) atan (FloatExpr (FloatType) 99))))))
(ReadCmd "d.png" (ArrayArgument d e f))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument (ArrayType (FloatType) 2) g)))
 (IfExpr
  (TupleType (ArrayType (FloatType) 2))
  (UnopExpr
   (BoolType)
   !
   (UnopExpr (BoolType) ! (UnopExpr (BoolType) ! (FalseExpr (BoolType)))))
  (ArrayIndexExpr
   (TupleType (ArrayType (FloatType) 2))
   (ArrayLiteralExpr
    (ArrayType (TupleType (ArrayType (FloatType) 2)) 1)
    (IfExpr
     (TupleType (ArrayType (FloatType) 2))
     (FalseExpr (BoolType))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 2))
      (VarExpr (ArrayType (FloatType) 2) a))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 2))
      (VarExpr (ArrayType (FloatType) 2) a)))
    (TupleLiteralExpr
     (TupleType (ArrayType (FloatType) 2))
     (VarExpr (ArrayType (FloatType) 2) a)))
   (VarExpr (IntType) c))
  (ArrayIndexExpr
   (TupleType (ArrayType (FloatType) 2))
   (ArrayLiteralExpr
    (ArrayType (TupleType (ArrayType (FloatType) 2)) 1)
    (IfExpr
     (TupleType (ArrayType (FloatType) 2))
     (BinopExpr (BoolType) (VarExpr (IntType) argnum) < (IntExpr (IntType) 76))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 2))
      (VarExpr (ArrayType (FloatType) 2) a))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 2))
      (VarExpr (ArrayType (FloatType) 2) a))))
   (IntExpr (IntType) 858))))
(LetCmd (ArgLValue (VarArgument (TupleType) h)) (TupleLiteralExpr (TupleType)))
(PrintCmd "i")
(TimeCmd
 (ShowCmd
  (IfExpr
   (ArrayType (FloatType) 2)
   (UnopExpr
    (BoolType)
    !
    (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType))))
   (VarExpr (ArrayType (FloatType) 2) a)
   (IfExpr
    (ArrayType (FloatType) 2)
    (BinopExpr
     (BoolType)
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     ==
     (SumLoopExpr
      (IntType)
      i
      (VarExpr (IntType) argnum)
      j
      (VarExpr (IntType) e)
      (VarExpr (IntType) c)))
    (TupleIndexExpr
     (ArrayType (FloatType) 2)
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 2))
      (VarExpr (ArrayType (FloatType) 2) a))
     0)
    (VarExpr (ArrayType (FloatType) 2) a)))))
(TimeCmd
 (LetCmd
  (ArgLValue (VarArgument (TupleType (FloatType)) i))
  (TupleLiteralExpr
   (TupleType (FloatType))
   (CallExpr
    (FloatType)
    acos
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 59)))))))
(ShowCmd
 (CallExpr
  (FloatType)
  atan
  (UnopExpr
   (FloatType)
   -
   (UnopExpr
    (FloatType)
    -
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) to_float (VarExpr (IntType) b)))))))
(TimeCmd
 (LetCmd
  (ArgLValue (VarArgument (ArrayType (FloatType) 2) j))
  (ArrayLoopExpr
   (ArrayType (FloatType) 2)
   j
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 3)
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      j
      (VarExpr (IntType) f)
      k
      (VarExpr (IntType) f)
      l
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) j))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      j
      (VarExpr (IntType) f)
      k
      (VarExpr (IntType) e)
      l
      (VarExpr (IntType) c)
      (IntExpr (IntType) 99)))
    (VarExpr (IntType) e)
    (VarExpr (IntType) argnum)
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      j
      (VarExpr (IntType) argnum)
      k
      (VarExpr (IntType) c)
      l
      (IntExpr (IntType) 682)
      (VarExpr (IntType) f))
     (VarExpr (IntType) b)
     (VarExpr (IntType) c)
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))))
   k
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 3)
     (TrueExpr (BoolType))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      j
      (VarExpr (IntType) argnum)
      k
      (VarExpr (IntType) argnum)
      l
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) l))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      j
      (VarExpr (IntType) b)
      k
      (VarExpr (IntType) f)
      l
      (VarExpr (IntType) c)
      (IntExpr (IntType) 709)))
    (UnopExpr (IntType) - (VarExpr (IntType) b))
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      j
      (VarExpr (IntType) b)
      k
      (VarExpr (IntType) argnum)
      l
      (VarExpr (IntType) f)
      (VarExpr (IntType) b))
     (BinopExpr (IntType) (IntExpr (IntType) 462) / (VarExpr (IntType) argnum))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 94))
     (VarExpr (IntType) b))
    (SumLoopExpr (IntType) j (VarExpr (IntType) f) (VarExpr (IntType) j)))
   (CallExpr
    (FloatType)
    exp
    (CallExpr
     (FloatType)
     sqrt
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 83)))))))
(LetCmd
 (TupleLValue (TupleLValue) (TupleLValue))
 (TupleLiteralExpr
  (TupleType (TupleType) (TupleType))
  (TupleLiteralExpr (TupleType))
  (VarExpr (TupleType) h)))
(PrintCmd "k")
(LetCmd (ArgLValue (VarArgument (BoolType) k)) (FalseExpr (BoolType)))
