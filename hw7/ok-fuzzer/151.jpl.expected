(LetCmd
 (ArgLValue (VarArgument a))
 (CallExpr
  (FloatType)
  atan
  (CallExpr
   (FloatType)
   atan
   (BinopExpr
    (FloatType)
    (FloatExpr (FloatType) 19)
    %
    (TupleIndexExpr
     (FloatType)
     (TupleLiteralExpr
      (TupleType (IntType) (FloatType) (IntType))
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 6)
      (VarExpr (IntType) argnum))
     1)))))
(LetCmd
 (ArgLValue (ArrayArgument b c d e))
 (IfExpr
  (ArrayType (FloatType) 3)
  (TupleIndexExpr
   (BoolType)
   (TupleIndexExpr
    (TupleType (BoolType))
    (TupleLiteralExpr
     (TupleType (FloatType) (TupleType (BoolType)))
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 47))
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType))))
    1)
   0)
  (IfExpr
   (ArrayType (FloatType) 3)
   (BinopExpr
    (BoolType)
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 85)))
    <
    (SumLoopExpr
     (FloatType)
     b
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      -
      (VarExpr (IntType) argnum))
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 15))))
   (ArrayLoopExpr
    (ArrayType (FloatType) 3)
    b
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      !=
      (IntExpr (IntType) 185))
     (SumLoopExpr (IntType) b (VarExpr (IntType) argnum) (VarExpr (IntType) b))
     (VarExpr (IntType) argnum))
    c
    (VarExpr (IntType) argnum)
    d
    (SumLoopExpr
     (IntType)
     b
     (IntExpr (IntType) 601)
     c
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     d
     (IntExpr (IntType) 638)
     (VarExpr (IntType) b))
    (VarExpr (FloatType) a))
   (ArrayLoopExpr
    (ArrayType (FloatType) 3)
    b
    (CallExpr (IntType) to_int (VarExpr (FloatType) a))
    c
    (BinopExpr
     (IntType)
     (CallExpr (IntType) to_int (VarExpr (FloatType) a))
     /
     (VarExpr (IntType) argnum))
    d
    (BinopExpr
     (IntType)
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 97))
     /
     (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
    (SumLoopExpr
     (FloatType)
     e
     (VarExpr (IntType) argnum)
     (UnopExpr (FloatType) - (VarExpr (FloatType) a)))))
  (IfExpr
   (ArrayType (FloatType) 3)
   (IfExpr
    (BoolType)
    (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
    (BinopExpr
     (BoolType)
     (VarExpr (FloatType) a)
     >
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))
    (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
   (IfExpr
    (ArrayType (FloatType) 3)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 63))
     !=
     (CallExpr (FloatType) asin (VarExpr (FloatType) a)))
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     b
     (UnopExpr (IntType) - (IntExpr (IntType) 689))
     c
     (SumLoopExpr
      (IntType)
      b
      (IntExpr (IntType) 362)
      c
      (IntExpr (IntType) 383)
      d
      (IntExpr (IntType) 984)
      (VarExpr (IntType) d))
     d
     (VarExpr (IntType) argnum)
     (SumLoopExpr
      (FloatType)
      e
      (VarExpr (IntType) b)
      f
      (VarExpr (IntType) c)
      g
      (VarExpr (IntType) argnum)
      (VarExpr (FloatType) a)))
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     b
     (IntExpr (IntType) 121)
     c
     (VarExpr (IntType) argnum)
     d
     (VarExpr (IntType) argnum)
     (VarExpr (FloatType) a)))
   (TupleIndexExpr
    (ArrayType (FloatType) 3)
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (FloatType) 3))
     (CallExpr (FloatType) acos (VarExpr (FloatType) a))
     (ArrayLoopExpr
      (ArrayType (FloatType) 3)
      b
      (IntExpr (IntType) 941)
      c
      (VarExpr (IntType) argnum)
      d
      (IntExpr (IntType) 843)
      (VarExpr (FloatType) a)))
    1))))
(LetCmd
 (ArgLValue (ArrayArgument f g))
 (TupleIndexExpr
  (ArrayType (IntType) 1)
  (IfExpr
   (TupleType (FloatType) (ArrayType (IntType) 1))
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (FloatType) (BoolType))
     (CallExpr (FloatType) tan (VarExpr (FloatType) a))
     (FalseExpr (BoolType)))
    1)
   (TupleLiteralExpr
    (TupleType (FloatType) (ArrayType (IntType) 1))
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) acos (VarExpr (FloatType) a))
     (FloatExpr (FloatType) 49))
    (ArrayLoopExpr
     (ArrayType (IntType) 1)
     f
     (CallExpr (IntType) to_int (VarExpr (FloatType) a))
     (IntExpr (IntType) 73)))
   (IfExpr
    (TupleType (FloatType) (ArrayType (IntType) 1))
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     0)
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (IntType) 1))
     (CallExpr
      (FloatType)
      pow
      (VarExpr (FloatType) a)
      (FloatExpr (FloatType) 36))
     (ArrayLiteralExpr
      (ArrayType (IntType) 1)
      (VarExpr (IntType) e)
      (VarExpr (IntType) e)))
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (IntType) 1))
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 47))
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      f
      (IntExpr (IntType) 7)
      (VarExpr (IntType) c)))))
  1))
(LetCmd
 (ArgLValue (ArrayArgument h i j k))
 (TupleIndexExpr
  (ArrayType (FloatType) 3)
  (IfExpr
   (TupleType (BoolType) (ArrayType (FloatType) 3))
   (FalseExpr (BoolType))
   (TupleLiteralExpr
    (TupleType (BoolType) (ArrayType (FloatType) 3))
    (BinopExpr
     (BoolType)
     (BinopExpr (IntType) (IntExpr (IntType) 289) / (IntExpr (IntType) 910))
     !=
     (VarExpr (IntType) e))
    (ArrayIndexExpr
     (ArrayType (FloatType) 3)
     (ArrayLiteralExpr
      (ArrayType (ArrayType (FloatType) 3) 1)
      (VarExpr (ArrayType (FloatType) 3) b)
      (VarExpr (ArrayType (FloatType) 3) b))
     (VarExpr (IntType) d)))
   (TupleIndexExpr
    (TupleType (BoolType) (ArrayType (FloatType) 3))
    (TupleLiteralExpr
     (TupleType (TupleType (BoolType) (ArrayType (FloatType) 3)) (FloatType))
     (TupleLiteralExpr
      (TupleType (BoolType) (ArrayType (FloatType) 3))
      (FalseExpr (BoolType))
      (VarExpr (ArrayType (FloatType) 3) b))
     (UnopExpr (FloatType) - (VarExpr (FloatType) a)))
    0))
  1))
(ReadCmd "l.png" (VarArgument l))
(LetCmd
 (ArgLValue (VarArgument m))
 (ArrayLiteralExpr
  (ArrayType (FloatType) 1)
  (CallExpr
   (FloatType)
   pow
   (CallExpr
    (FloatType)
    atan2
    (ArrayIndexExpr
     (FloatType)
     (ArrayLoopExpr
      (ArrayType (FloatType) 1)
      m
      (IntExpr (IntType) 690)
      (FloatExpr (FloatType) 50))
     (BinopExpr (IntType) (VarExpr (IntType) j) - (VarExpr (IntType) j)))
    (FloatExpr (FloatType) 66))
   (UnopExpr
    (FloatType)
    -
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum))
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 27)))))
  (CallExpr
   (FloatType)
   atan
   (ArrayIndexExpr
    (FloatType)
    (ArrayLoopExpr
     (ArrayType (FloatType) 2)
     m
     (VarExpr (IntType) i)
     n
     (SumLoopExpr
      (IntType)
      m
      (VarExpr (IntType) c)
      n
      (IntExpr (IntType) 127)
      o
      (VarExpr (IntType) i)
      (VarExpr (IntType) k))
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 39)))
    (BinopExpr
     (IntType)
     (VarExpr (IntType) c)
     -
     (BinopExpr (IntType) (VarExpr (IntType) d) / (VarExpr (IntType) j)))
    (VarExpr (IntType) i)))
  (IfExpr
   (FloatType)
   (IfExpr
    (BoolType)
    (BinopExpr (BoolType) (VarExpr (IntType) k) < (VarExpr (IntType) k))
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) e) == (VarExpr (IntType) argnum))
     &&
     (FalseExpr (BoolType)))
    (IfExpr
     (BoolType)
     (FalseExpr (BoolType))
     (FalseExpr (BoolType))
     (TrueExpr (BoolType))))
   (CallExpr (FloatType) to_float (VarExpr (IntType) c))
   (CallExpr
    (FloatType)
    log
    (CallExpr (FloatType) asin (VarExpr (FloatType) a))))))
(ShowCmd (VarExpr (ArrayType (FloatType) 3) h))
(AssertCmd
 (IfExpr
  (BoolType)
  (BinopExpr
   (BoolType)
   (VarExpr (IntType) k)
   <=
   (BinopExpr (IntType) (VarExpr (IntType) j) % (VarExpr (IntType) argnum)))
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    atan
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) sin (VarExpr (FloatType) a))))
   >=
   (TupleIndexExpr
    (FloatType)
    (TupleLiteralExpr
     (TupleType (FloatType) (BoolType))
     (CallExpr (FloatType) tan (VarExpr (FloatType) a))
     (TrueExpr (BoolType)))
    0))
  (ArrayIndexExpr
   (BoolType)
   (ArrayLoopExpr
    (ArrayType (BoolType) 3)
    n
    (IfExpr
     (IntType)
     (TrueExpr (BoolType))
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) f)
      (IntExpr (IntType) 328))
     (BinopExpr (IntType) (VarExpr (IntType) c) + (VarExpr (IntType) c)))
    o
    (VarExpr (IntType) c)
    p
    (VarExpr (IntType) g)
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) || (FalseExpr (BoolType)))
     ||
     (BinopExpr (BoolType) (VarExpr (IntType) k) > (VarExpr (IntType) j))))
   (VarExpr (IntType) g)
   (IfExpr
    (IntType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 1)
      n
      (VarExpr (IntType) e)
      (TrueExpr (BoolType)))
     (VarExpr (IntType) d))
    (VarExpr (IntType) i)
    (VarExpr (IntType) i))
   (VarExpr (IntType) e)))
 "n")
(LetCmd
 (ArgLValue (VarArgument n))
 (CallExpr
  (IntType)
  to_int
  (IfExpr
   (FloatType)
   (BinopExpr
    (BoolType)
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (BoolType) (FloatType))
      (TrueExpr (BoolType))
      (VarExpr (FloatType) a))
     0)
    !=
    (FalseExpr (BoolType)))
   (SumLoopExpr
    (FloatType)
    n
    (UnopExpr (IntType) - (VarExpr (IntType) i))
    o
    (VarExpr (IntType) j)
    p
    (VarExpr (IntType) e)
    (CallExpr (FloatType) to_float (VarExpr (IntType) e)))
   (CallExpr
    (FloatType)
    sin
    (SumLoopExpr
     (FloatType)
     n
     (BinopExpr (IntType) (VarExpr (IntType) j) % (VarExpr (IntType) g))
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 29)))))))
(ReadCmd "o.png" (ArrayArgument o p q))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument r)))
 (IfExpr
  (TupleType (ArrayType (BoolType) 3))
  (IfExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (BinopExpr (BoolType) (VarExpr (IntType) p) == (VarExpr (IntType) p))
    ||
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType)))))
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     &&
     (IfExpr
      (BoolType)
      (FalseExpr (BoolType))
      (TrueExpr (BoolType))
      (FalseExpr (BoolType))))
    ||
    (IfExpr
     (BoolType)
     (FalseExpr (BoolType))
     (BinopExpr (BoolType) (VarExpr (IntType) d) < (VarExpr (IntType) d))
     (BinopExpr (BoolType) (VarExpr (IntType) d) >= (VarExpr (IntType) n))))
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 3)
     r
     (VarExpr (IntType) g)
     s
     (VarExpr (IntType) e)
     t
     (VarExpr (IntType) g)
     (IfExpr
      (BoolType)
      (TrueExpr (BoolType))
      (TrueExpr (BoolType))
      (TrueExpr (BoolType))))
    (CallExpr
     (IntType)
     to_int
     (CallExpr
      (FloatType)
      atan2
      (VarExpr (FloatType) a)
      (FloatExpr (FloatType) 11)))
    (VarExpr (IntType) i)
    (IfExpr
     (IntType)
     (TrueExpr (BoolType))
     (VarExpr (IntType) i)
     (VarExpr (IntType) g))))
  (TupleLiteralExpr
   (TupleType (ArrayType (BoolType) 3))
   (ArrayLoopExpr
    (ArrayType (BoolType) 3)
    r
    (VarExpr (IntType) d)
    s
    (VarExpr (IntType) k)
    t
    (VarExpr (IntType) g)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) asin (VarExpr (FloatType) a))
     ==
     (VarExpr (FloatType) a))))
  (ArrayIndexExpr
   (TupleType (ArrayType (BoolType) 3))
   (ArrayLoopExpr
    (ArrayType (TupleType (ArrayType (BoolType) 3)) 2)
    r
    (VarExpr (IntType) k)
    s
    (VarExpr (IntType) k)
    (TupleLiteralExpr
     (TupleType (ArrayType (BoolType) 3))
     (ArrayLoopExpr
      (ArrayType (BoolType) 3)
      t
      (VarExpr (IntType) r)
      u
      (IntExpr (IntType) 230)
      v
      (VarExpr (IntType) q)
      (TrueExpr (BoolType)))))
   (VarExpr (IntType) q)
   (VarExpr (IntType) g))))
(LetCmd
 (ArgLValue (VarArgument s))
 (BinopExpr
  (FloatType)
  (ArrayIndexExpr
   (FloatType)
   (ArrayLiteralExpr
    (ArrayType (FloatType) 1)
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) to_float (VarExpr (IntType) g)))
    (CallExpr (FloatType) sqrt (VarExpr (FloatType) a)))
   (VarExpr (IntType) c))
  -
  (CallExpr
   (FloatType)
   tan
   (TupleIndexExpr
    (FloatType)
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType))
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 95))
     (VarExpr (FloatType) a))
    0))))
