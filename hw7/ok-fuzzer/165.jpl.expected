(LetCmd
 (ArgLValue (VarArgument (BoolType) a))
 (UnopExpr
  (BoolType)
  !
  (BinopExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (ArrayIndexExpr
     (IntType)
     (ArrayLiteralExpr (ArrayType (IntType) 1) (VarExpr (IntType) argnum))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
    >=
    (BinopExpr
     (IntType)
     (VarExpr (IntType) argnum)
     -
     (VarExpr (IntType) argnum)))
   ||
   (UnopExpr
    (BoolType)
    !
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     0)))))
(LetCmd (ArgLValue (VarArgument (BoolType) b)) (VarExpr (BoolType) a))
(LetCmd
 (ArgLValue (VarArgument (FloatType) c))
 (CallExpr
  (FloatType)
  exp
  (UnopExpr
   (FloatType)
   -
   (CallExpr
    (FloatType)
    atan
    (CallExpr
     (FloatType)
     sqrt
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 9)))))))
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument d e f g))
  (ArgLValue (VarArgument (IntType) h)))
 (TupleIndexExpr
  (TupleType (ArrayType (IntType) 3) (IntType))
  (TupleLiteralExpr
   (TupleType (TupleType (ArrayType (IntType) 3) (IntType)))
   (IfExpr
    (TupleType (ArrayType (IntType) 3) (IntType))
    (VarExpr (BoolType) b)
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3) (IntType))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      d
      (IntExpr (IntType) 895)
      e
      (IntExpr (IntType) 9)
      f
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) f))
     (VarExpr (IntType) argnum))
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3) (IntType))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      d
      (IntExpr (IntType) 450)
      e
      (VarExpr (IntType) argnum)
      f
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) f))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 54)))))
  0))
(TimeCmd
 (TimeCmd
  (LetCmd
   (ArgLValue (VarArgument (ArrayType (IntType) 1) i))
   (ArrayLoopExpr
    (ArrayType (IntType) 1)
    i
    (VarExpr (IntType) argnum)
    (IntExpr (IntType) 300)))))
(LetCmd
 (ArgLValue (ArrayArgument j k))
 (TupleIndexExpr
  (ArrayType (IntType) 1)
  (ArrayIndexExpr
   (TupleType (ArrayType (IntType) 1))
   (ArrayLoopExpr
    (ArrayType (TupleType (ArrayType (IntType) 1)) 2)
    j
    (SumLoopExpr
     (IntType)
     j
     (IntExpr (IntType) 604)
     k
     (SumLoopExpr
      (IntType)
      j
      (VarExpr (IntType) g)
      k
      (VarExpr (IntType) g)
      l
      (VarExpr (IntType) f)
      (VarExpr (IntType) h))
     l
     (VarExpr (IntType) g)
     (BinopExpr (IntType) (VarExpr (IntType) l) / (VarExpr (IntType) h)))
    k
    (IntExpr (IntType) 813)
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 1))
     (IfExpr
      (ArrayType (IntType) 1)
      (VarExpr (BoolType) b)
      (VarExpr (ArrayType (IntType) 1) i)
      (VarExpr (ArrayType (IntType) 1) args))))
   (CallExpr
    (IntType)
    to_int
    (CallExpr (FloatType) acos (FloatExpr (FloatType) 53)))
   (VarExpr (IntType) argnum))
  0))
(ReadCmd
 "l.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  l))
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument (FloatType) m))
  (ArgLValue (VarArgument (BoolType) n)))
 (TupleLiteralExpr
  (TupleType (FloatType) (BoolType))
  (CallExpr
   (FloatType)
   sin
   (CallExpr
    (FloatType)
    atan2
    (VarExpr (FloatType) c)
    (CallExpr (FloatType) to_float (VarExpr (IntType) k))))
  (TrueExpr (BoolType))))
(AssertCmd (UnopExpr (BoolType) ! (VarExpr (BoolType) a)) "o")
(LetCmd (ArgLValue (ArrayArgument o p)) (VarExpr (ArrayType (IntType) 1) args))
(AssertCmd
 (BinopExpr
  (BoolType)
  (VarExpr (IntType) k)
  <=
  (TupleIndexExpr
   (IntType)
   (TupleLiteralExpr
    (TupleType (IntType) (FloatType))
    (VarExpr (IntType) g)
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) exp (VarExpr (FloatType) m))
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 58))))
   0))
 "q")
(PrintCmd "q")
