(LetCmd
 (ArgLValue (VarArgument (FloatType) a))
 (CallExpr
  (FloatType)
  log
  (CallExpr
   (FloatType)
   cos
   (TupleIndexExpr
    (FloatType)
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType))
     (FloatExpr (FloatType) 39)
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 45)))
    0))))
(TimeCmd
 (LetCmd
  (ArgLValue (ArrayArgument b c))
  (IfExpr
   (ArrayType (IntType) 1)
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 86))
     !=
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 67))))
   (TupleIndexExpr
    (ArrayType (IntType) 1)
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 1))
     (VarExpr (ArrayType (IntType) 1) args))
    0)
   (ArrayLiteralExpr
    (ArrayType (IntType) 1)
    (SumLoopExpr
     (IntType)
     b
     (BinopExpr (IntType) (VarExpr (IntType) argnum) % (IntExpr (IntType) 22))
     c
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) argnum))
     (SumLoopExpr
      (IntType)
      d
      (VarExpr (IntType) c)
      e
      (VarExpr (IntType) c)
      f
      (VarExpr (IntType) b)
      (VarExpr (IntType) b)))
    (IfExpr
     (IntType)
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (SumLoopExpr (IntType) b (VarExpr (IntType) argnum) (VarExpr (IntType) b))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 521)))))))
(LetCmd (ArgLValue (VarArgument (IntType) d)) (VarExpr (IntType) c))
(LetCmd
 (ArgLValue (ArrayArgument e f g h))
 (TupleIndexExpr
  (ArrayType (FloatType) 3)
  (TupleIndexExpr
   (TupleType (FloatType) (ArrayType (FloatType) 3) (FloatType))
   (TupleLiteralExpr
    (TupleType
     (FloatType)
     (TupleType (FloatType) (ArrayType (FloatType) 3) (FloatType)))
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 89)))
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (FloatType) 3) (FloatType))
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 53))
     (ArrayLoopExpr
      (ArrayType (FloatType) 3)
      e
      (IntExpr (IntType) 708)
      f
      (IntExpr (IntType) 790)
      g
      (VarExpr (IntType) d)
      (VarExpr (FloatType) a))
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 29))))
   1)
  1))
(AssertCmd
 (TupleIndexExpr
  (BoolType)
  (ArrayIndexExpr
   (TupleType (BoolType))
   (ArrayLiteralExpr
    (ArrayType (TupleType (BoolType)) 1)
    (TupleLiteralExpr
     (TupleType (BoolType))
     (BinopExpr (BoolType) (VarExpr (IntType) f) != (VarExpr (IntType) argnum)))
    (IfExpr
     (TupleType (BoolType))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (TupleLiteralExpr (TupleType (BoolType)) (FalseExpr (BoolType)))
     (TupleLiteralExpr (TupleType (BoolType)) (FalseExpr (BoolType)))))
   (VarExpr (IntType) c))
  0)
 "i")
(LetCmd
 (ArgLValue (VarArgument (FloatType) i))
 (CallExpr (FloatType) atan (UnopExpr (FloatType) - (VarExpr (FloatType) a))))
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument (IntType) j))
  (ArgLValue (VarArgument (ArrayType (FloatType) 3) k)))
 (TupleIndexExpr
  (TupleType (IntType) (ArrayType (FloatType) 3))
  (IfExpr
   (TupleType (TupleType (IntType) (ArrayType (FloatType) 3)))
   (BinopExpr
    (BoolType)
    (TrueExpr (BoolType))
    &&
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) asin (VarExpr (FloatType) i))
     >
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 66))))
   (IfExpr
    (TupleType (TupleType (IntType) (ArrayType (FloatType) 3)))
    (IfExpr
     (BoolType)
     (BinopExpr
      (BoolType)
      (IntExpr (IntType) 977)
      <
      (VarExpr (IntType) argnum))
     (FalseExpr (BoolType))
     (BinopExpr
      (BoolType)
      (VarExpr (FloatType) a)
      <
      (FloatExpr (FloatType) 79)))
    (TupleLiteralExpr
     (TupleType (TupleType (IntType) (ArrayType (FloatType) 3)))
     (TupleLiteralExpr
      (TupleType (IntType) (ArrayType (FloatType) 3))
      (VarExpr (IntType) g)
      (VarExpr (ArrayType (FloatType) 3) e)))
    (TupleLiteralExpr
     (TupleType (TupleType (IntType) (ArrayType (FloatType) 3)))
     (TupleLiteralExpr
      (TupleType (IntType) (ArrayType (FloatType) 3))
      (VarExpr (IntType) d)
      (VarExpr (ArrayType (FloatType) 3) e))))
   (TupleLiteralExpr
    (TupleType (TupleType (IntType) (ArrayType (FloatType) 3)))
    (TupleLiteralExpr
     (TupleType (IntType) (ArrayType (FloatType) 3))
     (VarExpr (IntType) argnum)
     (ArrayLoopExpr
      (ArrayType (FloatType) 3)
      j
      (VarExpr (IntType) f)
      k
      (VarExpr (IntType) f)
      l
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 37)))))
  0))
(LetCmd
 (ArgLValue (VarArgument (FloatType) l))
 (CallExpr (FloatType) atan (VarExpr (FloatType) i)))
(WriteCmd
 (ArrayLoopExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  m
  (BinopExpr
   (IntType)
   (IfExpr
    (IntType)
    (IfExpr
     (BoolType)
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (FalseExpr (BoolType)))
    (VarExpr (IntType) d)
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (IntType) (ArrayType (FloatType) 3) (ArrayType (IntType) 1))
      (VarExpr (IntType) g)
      (VarExpr (ArrayType (FloatType) 3) e)
      (VarExpr (ArrayType (IntType) 1) args))
     0))
   +
   (IfExpr
    (IntType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      m
      (VarExpr (IntType) f)
      n
      (VarExpr (IntType) h)
      (FalseExpr (BoolType)))
     (VarExpr (IntType) d)
     (UnopExpr (IntType) - (VarExpr (IntType) f)))
    (IntExpr (IntType) 702)
    (VarExpr (IntType) j)))
  n
  (SumLoopExpr
   (IntType)
   m
   (TupleIndexExpr
    (IntType)
    (TupleLiteralExpr
     (TupleType (IntType))
     (BinopExpr (IntType) (VarExpr (IntType) j) % (IntExpr (IntType) 871)))
    0)
   n
   (VarExpr (IntType) argnum)
   o
   (VarExpr (IntType) j)
   (VarExpr (IntType) f))
  (TupleIndexExpr
   (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
   (TupleLiteralExpr
    (TupleType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)))
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
     (VarExpr (FloatType) a)
     (FloatExpr (FloatType) 5)
     (CallExpr (FloatType) sqrt (VarExpr (FloatType) l))
     (CallExpr (FloatType) tan (VarExpr (FloatType) a))))
   0))
 "m.png")
(LetCmd
 (ArgLValue (VarArgument (FloatType) m))
 (CallExpr
  (FloatType)
  exp
  (CallExpr (FloatType) to_float (IntExpr (IntType) 818))))
(LetCmd (ArgLValue (VarArgument (BoolType) n)) (TrueExpr (BoolType)))
(ShowCmd (TupleLiteralExpr (TupleType)))
