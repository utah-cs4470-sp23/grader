let a[b, c, d] = {(! (false || true)), (array[a : (- argnum), b : args[716]] (array[c : argnum, d : a, e : a] 964)), (true || false)}{1}[(if (if (array[a : argnum] false)[(- 707)] then [false][(- argnum)] else (cos(66.57) >= 60.91)) then args[{558, argnum, argnum}{1}] else (if (! false) then 174 else 820)), (- (- (argnum * (- 302))))]
write (if false then (array[e : to_int((sqrt(91.6) - atan(92.86))), f : to_int(sin(log(3.2)))] {exp(64.5), (if (! true) then to_float(c) else (sum[g : 201, h : f] 22.39)), exp(atan(44.89)), exp(pow(13.06, 65.61))}) else (array[e : (sum[e : d, f : b] argnum), f : ((array[e : 131] 624)[b] - 504)] {(- to_float(d)), asin(sin(58.45)), (42.09 * cos(21.44)), (if true then cos(61.42) else to_float(e))})) to "e.png"

let {e[f, g]} = {(if ((array[e : argnum, f : c] b)[to_int(37.49), b] < (if true then argnum else d)) then (array[e : {argnum}{0}, f : (if (if false then true else false) then d else c)] [e]) else (if (if false then false else (argnum <= b)) then (array[e : c, f : 268] (array[g : d] c)) else (array[e : b, f : (431 % d)] (array[g : f] e))))}
let h[i, j] = (array[h : c, i : 163] (argnum - to_int(to_float(i))))
fn k({  }) : float {
  assert ({pow(35.77, atan(97.58)), d}{1} == (sum[l : (sum[l : {f, f}{0}] to_int(acos(58.29))), m : b] (if (true || false) then (sum[n : argnum] argnum) else (array[n : m, o : d] i)[(- g), c]))), "l"
  let l[m, n, o] = (array[l : (if ((false || true) || true) then {a, true, a}{2} else (if (g > 977) then (array[l : d, m : j, n : argnum] n) else a))[(- d), (a[argnum, b, b] / (array[l : g, m : b, n : g] c)[argnum, (sum[l : i, m : b] j), (if false then argnum else 518)]), f], m : (if false then i else c), n : j] k({}))
  let p = sin(atan(k({{}}{0})))
  let {} = {}
  return p
}

let {l[m, n]} = (array[l : 876, m : h[to_int(66.77), h[g, b]]] {m, {e}, d})[j, (- g)]{1}
assert (if (if (if {false}{0} then true else [true, false][d]) then (! (b >= (- n))) else (array[o : i, p : (- i)] true)[argnum, {j}{0}]) then false else false), "o"
let o = f
fn p({ q : int, r[s] : {}[] }) : int {
  let t = m
  let u[v] = args
  let w[x] = (if (t == c) then {(if (d < t) then r else r), e[g, m]}{0} else (array[w : f] (if (s <= q) then (if false then {} else {}) else [{}][b])))
  let y[z] = [h, (array[y : (sum[y : (sum[y : x] o), z : (- m)] h[125, n]), z : n] {a}{0}[m, {q, y}{0}, argnum]), h]
  return j
}

fn q(r[s, t, u] : bool[,,], v : int, {  }) : int {
  let w[x, y, z] = (if (true || true) then {(array[w : n, x : v, y : u] n)}{0} else (array[w : i, x : a[c, n, g]] {a, argnum})[q(r, o, (if true then {} else {})), f]{0})
  assert (! ((if {true, true}{0} then (array[A : f, B : x] false)[j, y] else (! (true || false))) && {r, z}{0}[argnum, o, g])), "A"
  let {} = (array[A : q(r, c, {}), B : i, C : (g / o)] {{}, a, s}{0})[437, ((t * c) * t), s]
  assert ({95.36, (! true), {true}}{2}{0} || (! (if (if (o != o) then (s != argnum) else (d != j)) then false else (array[A : c] false)[j]))), "A"
  return m
}

let r[s] = [((- pow(cos(2.82), (sum[r : m, s : i] 46.5))) >= {tan(21.63)}{0}), ((sqrt(66.73) < atan(to_float(argnum))) && ((if true then (! false) else (j != i)) && (if (! true) then false else (c < g)))), (i != d)]
fn t() : {int,{int,{}}} {
  return t()
  let u = b
  return t()
  assert ((! (if false then (array[v : s, w : 526, x : b] false) else (array[v : m, w : i, x : m] true))[o, to_int(to_float(926)), j]) && (if r[b] then (array[v : f, w : 614] (! false)) else (if (o < i) then (array[v : 811, w : m] true) else (array[v : i, w : d] true)))[(- m), s]), "v"
  return (if ((! (false || false)) || (! false)) then (if (b != (if false then s else b)) then {t(), true} else {t(), false}) else (array[v : i, w : d, x : (sum[v : m, w : i] f)] {t(), true})[m, (- 441), (- 209)]){0}
}

