let a = ((- (if (to_int(41.3) != argnum) then to_float((729 + argnum)) else tan(to_float(argnum)))) < pow(57.29, (if (! (55 <= argnum)) then cos(56.39) else exp(74.67))))
time print "b"


assert (if false then {{a, false, 74.75}}{0} else {a, (! false), (if (! a) then to_float(910) else cos(39.9))}){1}, "b"
let b = sqrt((if (483 != 681) then log(to_float((if a then 430 else argnum))) else log(log(cos(76.09)))))
show argnum

print "c"

read image "c.png" to c

let d = [tan(75.37)]
let e = c
let {f[g, h], i[j, k], l[m, n]} = {{(array[f : argnum, g : argnum, h : 789] e), 465, argnum}{0}[(argnum / (if (if true then a else true) then (if false then 591 else 190) else (sum[f : argnum, g : 291, h : 434] 820))), argnum, to_int(b)], (if false then (array[f : to_int(52.36), g : 182, h : (argnum / 549)] e) else (array[f : (sum[f : argnum, g : argnum, h : 27] f), g : argnum, h : (- 717)] (if true then c else c)))[(array[f : to_int(b), g : args[argnum], h : 284] argnum)[(sum[f : (sum[f : 303] f)] (572 * f)), {b, argnum, argnum}{1}, (965 % (696 + 975))], (array[f : (- argnum), g : 708, h : (- 883)] f)[{840, b, {}}{0}, ((argnum + 418) - to_int(40.54)), (if false then (- 287) else 118)], (- 659)], (if [a, a, true][argnum] then (if (! true) then {e, false, d} else {e, a, d}) else {(if a then e else e), a, d}){0}}
write image {{l}}{0}{0} to "o.png"

write image i to "o.png"

