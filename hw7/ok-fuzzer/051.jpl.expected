(ReadCmd
 "a.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  a))
(LetCmd
 (ArgLValue (VarArgument (IntType) b))
 (TupleIndexExpr
  (IntType)
  (ArrayIndexExpr
   (TupleType (IntType) (ArrayType (IntType) 1))
   (ArrayLoopExpr
    (ArrayType (TupleType (IntType) (ArrayType (IntType) 1)) 1)
    b
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      b
      (VarExpr (IntType) argnum)
      c
      (IntExpr (IntType) 211)
      (IntExpr (IntType) 71))
     (VarExpr (IntType) argnum)
     (VarExpr (IntType) argnum))
    (IfExpr
     (TupleType (IntType) (ArrayType (IntType) 1))
     (FalseExpr (BoolType))
     (TupleLiteralExpr
      (TupleType (IntType) (ArrayType (IntType) 1))
      (VarExpr (IntType) argnum)
      (VarExpr (ArrayType (IntType) 1) args))
     (TupleLiteralExpr
      (TupleType (IntType) (ArrayType (IntType) 1))
      (VarExpr (IntType) argnum)
      (VarExpr (ArrayType (IntType) 1) args))))
   (IntExpr (IntType) 829))
  0))
(LetCmd
 (ArgLValue (VarArgument (FloatType) c))
 (CallExpr
  (FloatType)
  asin
  (CallExpr
   (FloatType)
   sqrt
   (CallExpr
    (FloatType)
    sin
    (BinopExpr
     (FloatType)
     (IfExpr
      (FloatType)
      (FalseExpr (BoolType))
      (FloatExpr (FloatType) 97)
      (FloatExpr (FloatType) 10))
     /
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 69)))))))
(LetCmd (TupleLValue) (TupleLiteralExpr (TupleType)))
(LetCmd
 (ArgLValue (ArrayArgument d e))
 (IfExpr
  (ArrayType (FloatType) 1)
  (ArrayIndexExpr
   (BoolType)
   (ArrayLoopExpr
    (ArrayType (BoolType) 2)
    d
    (VarExpr (IntType) argnum)
    e
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) b))
     0)
    (BinopExpr
     (BoolType)
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     ||
     (BinopExpr (BoolType) (VarExpr (IntType) argnum) == (VarExpr (IntType) e))))
   (IntExpr (IntType) 620)
   (BinopExpr
    (IntType)
    (UnopExpr
     (IntType)
     -
     (BinopExpr (IntType) (VarExpr (IntType) b) % (VarExpr (IntType) b)))
    *
    (VarExpr (IntType) b)))
  (ArrayLoopExpr
   (ArrayType (FloatType) 1)
   d
   (UnopExpr
    (IntType)
    -
    (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) b))))
   (VarExpr (FloatType) c))
  (ArrayLoopExpr
   (ArrayType (FloatType) 1)
   d
   (CallExpr
    (IntType)
    to_int
    (CallExpr (FloatType) exp (VarExpr (FloatType) c)))
   (CallExpr
    (FloatType)
    acos
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 14)))))))
(LetCmd
 (ArgLValue (VarArgument (TupleType (ArrayType (FloatType) 1)) f))
 (TupleLiteralExpr
  (TupleType (ArrayType (FloatType) 1))
  (ArrayLiteralExpr
   (ArrayType (FloatType) 1)
   (FloatExpr (FloatType) 52)
   (CallExpr
    (FloatType)
    atan
    (CallExpr
     (FloatType)
     atan2
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 96))
     (FloatExpr (FloatType) 87)))
   (CallExpr
    (FloatType)
    asin
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) atan (VarExpr (FloatType) c)))))))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument (ArrayType (FloatType) 1) g)))
 (TupleIndexExpr
  (TupleType (ArrayType (FloatType) 1))
  (IfExpr
   (TupleType
    (TupleType (FloatType) (IntType) (ArrayType (IntType) 1))
    (TupleType (FloatType) (FloatType))
    (TupleType (ArrayType (FloatType) 1)))
   (BinopExpr
    (BoolType)
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (IntExpr (IntType) 996) == (VarExpr (IntType) e))
     (FalseExpr (BoolType))
     (FalseExpr (BoolType)))
    &&
    (UnopExpr (BoolType) ! (TrueExpr (BoolType))))
   (TupleLiteralExpr
    (TupleType
     (TupleType (FloatType) (IntType) (ArrayType (IntType) 1))
     (TupleType (FloatType) (FloatType))
     (TupleType (ArrayType (FloatType) 1)))
    (TupleLiteralExpr
     (TupleType (FloatType) (IntType) (ArrayType (IntType) 1))
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 29))
     (VarExpr (IntType) argnum)
     (VarExpr (ArrayType (IntType) 1) args))
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType))
     (CallExpr (FloatType) asin (VarExpr (FloatType) c))
     (CallExpr
      (FloatType)
      pow
      (FloatExpr (FloatType) 38)
      (FloatExpr (FloatType) 40)))
    (VarExpr (TupleType (ArrayType (FloatType) 1)) f))
   (TupleLiteralExpr
    (TupleType
     (TupleType (FloatType) (IntType) (ArrayType (IntType) 1))
     (TupleType (FloatType) (FloatType))
     (TupleType (ArrayType (FloatType) 1)))
    (TupleLiteralExpr
     (TupleType (FloatType) (IntType) (ArrayType (IntType) 1))
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum))
     (UnopExpr (IntType) - (IntExpr (IntType) 320))
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      g
      (VarExpr (IntType) e)
      (VarExpr (IntType) b)))
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType))
     (VarExpr (FloatType) c)
     (ArrayIndexExpr
      (FloatType)
      (VarExpr (ArrayType (FloatType) 1) d)
      (IntExpr (IntType) 415)))
    (TupleIndexExpr
     (TupleType (ArrayType (FloatType) 1))
     (TupleLiteralExpr
      (TupleType
       (BoolType)
       (ArrayType (FloatType) 1)
       (TupleType (ArrayType (FloatType) 1)))
      (FalseExpr (BoolType))
      (VarExpr (ArrayType (FloatType) 1) d)
      (VarExpr (TupleType (ArrayType (FloatType) 1)) f))
     2)))
  2))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument (FloatType) h)) (TupleLValue))
 (TupleIndexExpr
  (TupleType (FloatType) (TupleType))
  (TupleLiteralExpr
   (TupleType
    (ArrayType (FloatType) 1)
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (TupleType (FloatType) (TupleType)))
   (VarExpr (ArrayType (FloatType) 1) g)
   (VarExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    a)
   (IfExpr
    (TupleType (FloatType) (TupleType))
    (BinopExpr (BoolType) (VarExpr (IntType) e) == (VarExpr (IntType) e))
    (TupleLiteralExpr
     (TupleType (FloatType) (TupleType))
     (FloatExpr (FloatType) 27)
     (TupleLiteralExpr (TupleType)))
    (TupleLiteralExpr
     (TupleType (FloatType) (TupleType))
     (CallExpr (FloatType) log (FloatExpr (FloatType) 22))
     (IfExpr
      (TupleType)
      (FalseExpr (BoolType))
      (TupleLiteralExpr (TupleType))
      (TupleLiteralExpr (TupleType))))))
  2))
(WriteCmd
 (IfExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (UnopExpr
   (BoolType)
   !
   (BinopExpr
    (BoolType)
    (CallExpr
     (FloatType)
     acos
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))
    <
    (SumLoopExpr
     (FloatType)
     i
     (IntExpr (IntType) 804)
     j
     (BinopExpr (IntType) (VarExpr (IntType) b) % (VarExpr (IntType) e))
     k
     (SumLoopExpr
      (IntType)
      i
      (IntExpr (IntType) 541)
      (VarExpr (IntType) argnum))
     (UnopExpr (FloatType) - (VarExpr (FloatType) h)))))
  (ArrayLoopExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   i
   (BinopExpr
    (IntType)
    (SumLoopExpr
     (IntType)
     i
     (IntExpr (IntType) 27)
     j
     (BinopExpr (IntType) (VarExpr (IntType) b) + (VarExpr (IntType) e))
     k
     (VarExpr (IntType) e)
     (VarExpr (IntType) j))
    -
    (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
   j
   (CallExpr
    (IntType)
    to_int
    (BinopExpr (FloatType) (FloatExpr (FloatType) 5) + (VarExpr (FloatType) h)))
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) log (VarExpr (FloatType) c)))
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) log (VarExpr (FloatType) c)))
    (SumLoopExpr
     (FloatType)
     k
     (SumLoopExpr (IntType) k (VarExpr (IntType) i) (IntExpr (IntType) 898))
     (CallExpr (FloatType) log (VarExpr (FloatType) c)))
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) asin (VarExpr (FloatType) c)))))
  (ArrayIndexExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   (IfExpr
    (ArrayType
     (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
     2)
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (FloatType) (BoolType))
      (VarExpr (FloatType) c)
      (FalseExpr (BoolType)))
     1)
    (IfExpr
     (ArrayType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      2)
     (TrueExpr (BoolType))
     (ArrayLoopExpr
      (ArrayType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       2)
      i
      (VarExpr (IntType) b)
      j
      (VarExpr (IntType) b)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       a))
     (ArrayLoopExpr
      (ArrayType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       2)
      i
      (VarExpr (IntType) e)
      j
      (VarExpr (IntType) b)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       a)))
    (ArrayLoopExpr
     (ArrayType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      2)
     i
     (VarExpr (IntType) argnum)
     j
     (SumLoopExpr
      (IntType)
      i
      (IntExpr (IntType) 224)
      (VarExpr (IntType) argnum))
     (IfExpr
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      (FalseExpr (BoolType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       a)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       a))))
   (ArrayIndexExpr
    (IntType)
    (ArrayLoopExpr
     (ArrayType (IntType) 3)
     i
     (UnopExpr (IntType) - (VarExpr (IntType) b))
     j
     (BinopExpr (IntType) (IntExpr (IntType) 279) * (VarExpr (IntType) e))
     k
     (UnopExpr (IntType) - (VarExpr (IntType) b))
     (SumLoopExpr
      (IntType)
      l
      (IntExpr (IntType) 515)
      m
      (VarExpr (IntType) i)
      n
      (VarExpr (IntType) b)
      (VarExpr (IntType) b)))
    (VarExpr (IntType) e)
    (VarExpr (IntType) e)
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      i
      (VarExpr (IntType) b)
      j
      (IntExpr (IntType) 962)
      k
      (VarExpr (IntType) e)
      (IntExpr (IntType) 1000))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) e)
      (VarExpr (IntType) b))
     (VarExpr (IntType) e)))
   (VarExpr (IntType) e)))
 "i.png")
(LetCmd
 (ArgLValue (ArrayArgument i j k l))
 (ArrayLoopExpr
  (ArrayType (TupleType (IntType) (IntType)) 3)
  i
  (IntExpr (IntType) 300)
  j
  (IfExpr
   (IntType)
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 3)
     i
     (VarExpr (IntType) argnum)
     j
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (VarExpr (IntType) argnum))
     k
     (VarExpr (IntType) e)
     (BinopExpr (BoolType) (VarExpr (IntType) i) == (VarExpr (IntType) b)))
    (VarExpr (IntType) b)
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) asin (VarExpr (FloatType) c)))
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       (IntType))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       a)
      (IntExpr (IntType) 827))
     1))
   (VarExpr (IntType) argnum)
   (VarExpr (IntType) argnum))
  k
  (CallExpr (IntType) to_int (VarExpr (FloatType) c))
  (TupleLiteralExpr
   (TupleType (IntType) (IntType))
   (VarExpr (IntType) j)
   (VarExpr (IntType) j))))
(LetCmd
 (ArgLValue (ArrayArgument m n o p))
 (ArrayLoopExpr
  (ArrayType (IntType) 3)
  m
  (ArrayIndexExpr
   (IntType)
   (IfExpr
    (ArrayType (IntType) 1)
    (TrueExpr (BoolType))
    (ArrayIndexExpr
     (ArrayType (IntType) 1)
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 1) 2)
      m
      (VarExpr (IntType) b)
      n
      (VarExpr (IntType) e)
      (VarExpr (ArrayType (IntType) 1) args))
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 60))
     (IntExpr (IntType) 684))
    (IfExpr
     (ArrayType (IntType) 1)
     (BinopExpr (BoolType) (VarExpr (FloatType) c) == (VarExpr (FloatType) c))
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      m
      (VarExpr (IntType) j)
      (VarExpr (IntType) m))
     (VarExpr (ArrayType (IntType) 1) args)))
   (VarExpr (IntType) l))
  n
  (SumLoopExpr (IntType) m (VarExpr (IntType) b) (IntExpr (IntType) 96))
  o
  (VarExpr (IntType) e)
  (VarExpr (IntType) e)))
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument q r))
  (TupleLValue
   (TupleLValue
    (ArgLValue (VarArgument (FloatType) s))
    (ArgLValue (VarArgument (IntType) t)))
   (ArgLValue (ArrayArgument u v w x))))
 (TupleIndexExpr
  (TupleType
   (ArrayType (FloatType) 1)
   (TupleType
    (TupleType (FloatType) (IntType))
    (ArrayType (TupleType (IntType) (IntType)) 3)))
  (TupleLiteralExpr
   (TupleType
    (TupleType
     (ArrayType (FloatType) 1)
     (TupleType
      (TupleType (FloatType) (IntType))
      (ArrayType (TupleType (IntType) (IntType)) 3)))
    (IntType)
    (FloatType))
   (TupleLiteralExpr
    (TupleType
     (ArrayType (FloatType) 1)
     (TupleType
      (TupleType (FloatType) (IntType))
      (ArrayType (TupleType (IntType) (IntType)) 3)))
    (VarExpr (ArrayType (FloatType) 1) g)
    (TupleLiteralExpr
     (TupleType
      (TupleType (FloatType) (IntType))
      (ArrayType (TupleType (IntType) (IntType)) 3))
     (TupleLiteralExpr
      (TupleType (FloatType) (IntType))
      (VarExpr (FloatType) h)
      (VarExpr (IntType) o))
     (VarExpr (ArrayType (TupleType (IntType) (IntType)) 3) i)))
   (VarExpr (IntType) n)
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) log (VarExpr (FloatType) h)))
    (SumLoopExpr
     (FloatType)
     q
     (VarExpr (IntType) p)
     (CallExpr (FloatType) acos (VarExpr (FloatType) h)))))
  0))
