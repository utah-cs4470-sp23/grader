(LetCmd
 (ArgLValue (ArrayArgument a b c))
 (TupleIndexExpr
  (ArrayType (IntType) 2)
  (TupleLiteralExpr
   (TupleType (ArrayType (IntType) 2) (FloatType) (BoolType))
   (ArrayIndexExpr
    (ArrayType (IntType) 2)
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 2) 2)
     a
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      *
      (VarExpr (IntType) argnum))
     b
     (VarExpr (IntType) argnum)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      c
      (IntExpr (IntType) 996)
      d
      (VarExpr (IntType) a)
      (VarExpr (IntType) b)))
    (UnopExpr
     (IntType)
     -
     (BinopExpr (IntType) (VarExpr (IntType) argnum) - (IntExpr (IntType) 998)))
    (VarExpr (IntType) argnum))
   (CallExpr
    (FloatType)
    sqrt
    (SumLoopExpr
     (FloatType)
     a
     (UnopExpr (IntType) - (IntExpr (IntType) 160))
     (FloatExpr (FloatType) 38)))
   (BinopExpr
    (BoolType)
    (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 58))
    >
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 39)))))
  0))
(WriteCmd
 (ArrayLoopExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  d
  (VarExpr (IntType) argnum)
  e
  (IfExpr
   (IntType)
   (BinopExpr
    (BoolType)
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) argnum) == (VarExpr (IntType) b))
     (BinopExpr (BoolType) (VarExpr (IntType) c) == (VarExpr (IntType) b))
     (FalseExpr (BoolType)))
    ==
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 3)
      d
      (VarExpr (IntType) argnum)
      e
      (VarExpr (IntType) c)
      f
      (VarExpr (IntType) c)
      (TrueExpr (BoolType)))
     (UnopExpr (IntType) - (IntExpr (IntType) 762))
     (IntExpr (IntType) 806)
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))))
   (BinopExpr
    (IntType)
    (VarExpr (IntType) b)
    *
    (SumLoopExpr
     (IntType)
     d
     (IntExpr (IntType) 48)
     e
     (VarExpr (IntType) b)
     f
     (UnopExpr (IntType) - (VarExpr (IntType) b))
     (VarExpr (IntType) c)))
   (CallExpr (IntType) to_int (FloatExpr (FloatType) 35)))
  (ArrayIndexExpr
   (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
   (ArrayLoopExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    f
    (VarExpr (IntType) argnum)
    g
    (CallExpr
     (IntType)
     to_int
     (SumLoopExpr
      (FloatType)
      f
      (VarExpr (IntType) argnum)
      g
      (VarExpr (IntType) c)
      (FloatExpr (FloatType) 92)))
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 12))
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 37))
     (FloatExpr (FloatType) 63)
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 94))))
   (UnopExpr
    (IntType)
    -
    (ArrayIndexExpr
     (IntType)
     (IfExpr
      (ArrayType (IntType) 2)
      (FalseExpr (BoolType))
      (VarExpr (ArrayType (IntType) 2) a)
      (VarExpr (ArrayType (IntType) 2) a))
     (VarExpr (IntType) c)
     (VarExpr (IntType) c)))
   (UnopExpr (IntType) - (VarExpr (IntType) b))))
 "d.png")
(LetCmd
 (ArgLValue (ArrayArgument d e f g))
 (ArrayLoopExpr
  (ArrayType (FloatType) 3)
  d
  (SumLoopExpr
   (IntType)
   d
   (SumLoopExpr
    (IntType)
    d
    (UnopExpr (IntType) - (VarExpr (IntType) argnum))
    (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) b))))
   e
   (CallExpr
    (IntType)
    to_int
    (CallExpr
     (FloatType)
     to_float
     (SumLoopExpr
      (IntType)
      d
      (VarExpr (IntType) argnum)
      e
      (IntExpr (IntType) 496)
      f
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) c))))
   (VarExpr (IntType) e))
  e
  (CallExpr (IntType) to_int (FloatExpr (FloatType) 69))
  f
  (IfExpr
   (IntType)
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (BoolType))
     (IfExpr
      (BoolType)
      (FalseExpr (BoolType))
      (TrueExpr (BoolType))
      (TrueExpr (BoolType))))
    0)
   (IfExpr
    (IntType)
    (BinopExpr (BoolType) (VarExpr (IntType) c) == (IntExpr (IntType) 545))
    (VarExpr (IntType) c)
    (IntExpr (IntType) 614))
   (TupleIndexExpr
    (IntType)
    (TupleLiteralExpr
     (TupleType (IntType) (IntType))
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (IntExpr (IntType) 553)
      (VarExpr (IntType) c))
     (IntExpr (IntType) 553))
    0))
  (CallExpr
   (FloatType)
   atan2
   (CallExpr
    (FloatType)
    log
    (CallExpr
     (FloatType)
     pow
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 34))
     (CallExpr (FloatType) to_float (VarExpr (IntType) c))))
   (FloatExpr (FloatType) 74))))
(ShowCmd
 (IfExpr
  (FloatType)
  (BinopExpr
   (BoolType)
   (TupleIndexExpr
    (FloatType)
    (TupleLiteralExpr
     (TupleType (FloatType))
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 49)))
    0)
   !=
   (CallExpr
    (FloatType)
    exp
    (CallExpr
     (FloatType)
     atan
     (CallExpr
      (FloatType)
      pow
      (FloatExpr (FloatType) 51)
      (FloatExpr (FloatType) 14)))))
  (CallExpr
   (FloatType)
   atan2
   (FloatExpr (FloatType) 12)
   (CallExpr
    (FloatType)
    acos
    (IfExpr
     (FloatType)
     (BinopExpr (BoolType) (VarExpr (IntType) g) >= (VarExpr (IntType) argnum))
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 52))
     (CallExpr
      (FloatType)
      pow
      (FloatExpr (FloatType) 93)
      (FloatExpr (FloatType) 28)))))
  (CallExpr
   (FloatType)
   atan2
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 40)))
    (IfExpr
     (FloatType)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (FalseExpr (BoolType)))
     (FloatExpr (FloatType) 72)
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 87))))
   (FloatExpr (FloatType) 74))))
(LetCmd
 (ArgLValue (ArrayArgument h i))
 (ArrayLiteralExpr
  (ArrayType (FloatType) 1)
  (CallExpr (FloatType) to_float (VarExpr (IntType) e))))
(AssertCmd
 (BinopExpr
  (BoolType)
  (CallExpr
   (FloatType)
   atan
   (CallExpr
    (FloatType)
    asin
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) to_float (IntExpr (IntType) 947)))))
  ==
  (CallExpr
   (FloatType)
   to_float
   (ArrayIndexExpr
    (IntType)
    (VarExpr (ArrayType (IntType) 1) args)
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      j
      (VarExpr (IntType) e)
      k
      (VarExpr (IntType) b)
      (VarExpr (IntType) argnum))
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (VarExpr (IntType) g))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) c)
      (VarExpr (IntType) b))))))
 "j")
(LetCmd
 (ArgLValue (ArrayArgument j k l))
 (ArrayLoopExpr
  (ArrayType (TupleType (ArrayType (FloatType) 1) (FloatType)) 2)
  j
  (VarExpr (IntType) f)
  k
  (VarExpr (IntType) f)
  (TupleLiteralExpr
   (TupleType (ArrayType (FloatType) 1) (FloatType))
   (ArrayLiteralExpr
    (ArrayType (FloatType) 1)
    (CallExpr
     (FloatType)
     sin
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 73))))
   (FloatExpr (FloatType) 37))))
(LetCmd
 (ArgLValue (VarArgument m))
 (CallExpr
  (FloatType)
  tan
  (UnopExpr
   (FloatType)
   -
   (CallExpr
    (FloatType)
    acos
    (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 10))))))
(LetCmd
 (ArgLValue (ArrayArgument n o p q))
 (ArrayIndexExpr
  (ArrayType (FloatType) 3)
  (ArrayLoopExpr
   (ArrayType (ArrayType (FloatType) 3) 2)
   n
   (IfExpr
    (IntType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      n
      (IntExpr (IntType) 493)
      o
      (VarExpr (IntType) k)
      (TrueExpr (BoolType)))
     (VarExpr (IntType) e)
     (VarExpr (IntType) c))
    (VarExpr (IntType) e)
    (CallExpr
     (IntType)
     to_int
     (ArrayIndexExpr
      (FloatType)
      (VarExpr (ArrayType (FloatType) 3) d)
      (VarExpr (IntType) b)
      (VarExpr (IntType) l)
      (VarExpr (IntType) b))))
   o
   (IfExpr
    (IntType)
    (FalseExpr (BoolType))
    (IfExpr
     (IntType)
     (FalseExpr (BoolType))
     (VarExpr (IntType) b)
     (CallExpr (IntType) to_int (VarExpr (FloatType) m)))
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      n
      (VarExpr (IntType) b)
      o
      (VarExpr (IntType) f)
      p
      (VarExpr (IntType) f)
      (VarExpr (IntType) b))
     (VarExpr (IntType) e)
     (VarExpr (IntType) f)
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) l))))
   (IfExpr
    (ArrayType (FloatType) 3)
    (BinopExpr
     (BoolType)
     (FalseExpr (BoolType))
     ==
     (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
    (VarExpr (ArrayType (FloatType) 3) d)
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     p
     (VarExpr (IntType) g)
     q
     (VarExpr (IntType) g)
     r
     (VarExpr (IntType) i)
     (CallExpr (FloatType) to_float (VarExpr (IntType) q)))))
  (IntExpr (IntType) 310)
  (IfExpr
   (IntType)
   (BinopExpr
    (BoolType)
    (CallExpr (FloatType) sin (UnopExpr (FloatType) - (VarExpr (FloatType) m)))
    ==
    (CallExpr (FloatType) to_float (VarExpr (IntType) l)))
   (VarExpr (IntType) l)
   (SumLoopExpr
    (IntType)
    n
    (VarExpr (IntType) c)
    (SumLoopExpr
     (IntType)
     o
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (VarExpr (IntType) f)
      (VarExpr (IntType) g))
     p
     (BinopExpr (IntType) (VarExpr (IntType) n) * (VarExpr (IntType) g))
     q
     (UnopExpr (IntType) - (VarExpr (IntType) g))
     (VarExpr (IntType) l))))))
(ShowCmd
 (IfExpr
  (IntType)
  (TupleIndexExpr
   (BoolType)
   (ArrayIndexExpr
    (TupleType (BoolType))
    (ArrayLoopExpr
     (ArrayType (TupleType (BoolType)) 2)
     r
     (VarExpr (IntType) g)
     s
     (SumLoopExpr
      (IntType)
      r
      (IntExpr (IntType) 751)
      s
      (VarExpr (IntType) p)
      t
      (VarExpr (IntType) i)
      (VarExpr (IntType) i))
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType))))
    (VarExpr (IntType) g)
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 3) (IntType) (IntType))
      (VarExpr (ArrayType (FloatType) 3) n)
      (VarExpr (IntType) i)
      (VarExpr (IntType) p))
     2))
   0)
  (VarExpr (IntType) e)
  (VarExpr (IntType) e)))
(LetCmd
 (TupleLValue
  (TupleLValue
   (ArgLValue (ArrayArgument r s t u))
   (ArgLValue (ArrayArgument v w x)))
  (ArgLValue (VarArgument y)))
 (ArrayIndexExpr
  (TupleType
   (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
   (IntType))
  (ArrayLoopExpr
   (ArrayType
    (TupleType
     (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
     (IntType))
    3)
   r
   (UnopExpr (IntType) - (IntExpr (IntType) 637))
   s
   (IntExpr (IntType) 904)
   t
   (IfExpr
    (IntType)
    (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType)))
    (UnopExpr (IntType) - (VarExpr (IntType) g))
    (SumLoopExpr
     (IntType)
     r
     (VarExpr (IntType) i)
     s
     (VarExpr (IntType) p)
     t
     (VarExpr (IntType) i)
     (VarExpr (IntType) q)))
   (IfExpr
    (TupleType
     (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
     (IntType))
    (FalseExpr (BoolType))
    (TupleLiteralExpr
     (TupleType
      (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
      (IntType))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
      (VarExpr (ArrayType (FloatType) 3) d)
      (VarExpr (ArrayType (IntType) 2) a))
     (IntExpr (IntType) 425))
    (TupleLiteralExpr
     (TupleType
      (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
      (IntType))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 3) (ArrayType (IntType) 2))
      (VarExpr (ArrayType (FloatType) 3) n)
      (VarExpr (ArrayType (IntType) 2) a))
     (VarExpr (IntType) s))))
  (VarExpr (IntType) l)
  (VarExpr (IntType) i)
  (BinopExpr (IntType) (VarExpr (IntType) l) / (VarExpr (IntType) l))))
(ShowCmd (VarExpr (IntType) w))
