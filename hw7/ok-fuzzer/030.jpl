write (if (! (if false then (cos(77.69) >= cos(51.19)) else true)) then (if ((if (if true then false else false) then (! false) else true) != (if (888 > argnum) then (if true then false else false) else true)) then (array[a : (sum[a : argnum, b : argnum] (b - argnum)), b : (sum[a : (- argnum), b : (- 851)] b)] {exp(50.67), asin(6.76), sqrt(76.43), (- 94.24)}) else (array[a : (sum[a : argnum, b : (if true then argnum else argnum)] argnum), b : (- (611 - argnum))] {to_float(a), asin(71.53), log(51.4), 63.83})) else (array[a : (if false then (if (! false) then (if false then argnum else 981) else 625) else (719 - (- 344))), b : 78] {acos(to_float(a)), atan2(75.33, 60.54), atan(atan(65.53)), to_float((sum[c : a, d : 862, e : 367] 456))})) to "a.png"

fn a({  }) : int {
  return (if ((array[b : 683, c : argnum] false)[a({}), 571] || false) then (array[b : (- 849), c : (- argnum), d : argnum] {c, argnum, 868})[(- argnum), to_int(to_float(argnum)), (if (true != true) then 430 else 381)] else {(a({}) * argnum), (sum[b : (if false then argnum else 1), c : 697, d : 604] a({})), argnum}){1}
  let b = (log((sum[b : (- argnum), c : ((- argnum) + a({})), d : (argnum % argnum)] (- exp(32.85)))) >= (sum[b : {[{}, {}, {}], a({}), (316 != 619)}{1}, c : (- to_int(59.32))] {14.93}{0}))
  let c = argnum
  let d[e] = (array[d : to_int(atan2((- log(64.97)), atan(exp(0.28))))] false)
  return to_int(tan(to_float((- (c % e)))))
}

let b[c] = (if (if (atan2(exp(18.6), cos(71.77)) <= (- pow(53.23, 43.24))) then (! true) else (95.92 == cos(tan(64.9)))) then [(array[b : argnum, c : argnum, d : a({})] to_float(b))[a({}), (sum[b : (- 962)] argnum), a((if true then {} else {}))], (if (args[argnum] != (- argnum)) then (if (! true) then to_float(argnum) else exp(99.14)) else to_float(145)), 78.07] else (if true then [sin(tan(62.06)), atan2(84.4, to_float(argnum)), to_float(902)] else (array[b : argnum] (array[c : argnum] 6.78))[(- 166)]))
time let d[e, f, g] = (array[d : args[494], e : ((sum[d : a({}), e : to_int(69.51), f : c] d) % ((argnum % c) / (if true then c else 909))), f : (if (c >= c) then (91 * (if false then c else argnum)) else (sum[d : 101] (sum[e : d] c)))] ((false != true) != false))

let h = pow(tan(to_float(e)), (sum[h : ((g + g) / a({}))] 17.75))
fn i() : float {
  let j = a({{{}, args}{0}, e, to_float(a({}))}{0})
  assert (if {{false}{0}, atan2(sqrt(25.59), sin(h)), argnum}{0} then (! ((! false) == true)) else (if (d[g, 963, c] != (! true)) then {false} else {(e == f)}){0}), "k"
  assert (if ((if ((! true) && (! true)) then true else (g >= c)) || (((j + f) > g) && true)) then (array[k : argnum, l : f, m : (- g)] ((- h) == sin(i())))[(if (if (g >= e) then false else (if true then true else true)) then (f - (if true then c else g)) else e), (- (sum[k : g, l : c] (g % 408))), (- (sum[k : args[c]] f))] else (array[k : f] (h < asin(i())))[(if (true && false) then {j} else {j}){0}]), "k"
  let {k[l, m, n]} = [(if (f > (e - g)) then (if d[j, g, 255] then {d} else {d}) else {(array[k : f, l : argnum, m : e] false)}), {(if (f > argnum) then d else (array[k : e, l : 557, m : g] true))}][(- ({200, 387}{1} + (- (c * f))))]
  return (sum[o : n, p : (- (if d[argnum, (sum[o : e, p : l] 832), e] then (if k[g, j, 309] then m else j) else argnum)), q : (if (m > (array[o : f, p : c, q : n] 878)[to_int(i()), argnum, g]) then j else a((array[o : argnum, p : l, q : j] {})[m, f, (if false then e else e)]))] ((if (m >= (sum[r : l, s : q, t : q] l)) then i() else asin(tan(i()))) * exp(h)))
}

fn j() : float {
  return exp(atan((if (cos(h) == j()) then exp(i()) else log(sqrt(0.64)))))
  return (cos(acos(to_float(f))) * log((j() - i())))
  return (if (! ((! false) && (if (true != false) then (i() >= h) else (true && true)))) then acos(sqrt((if false then atan(h) else (- 99.06)))) else (sum[k : c] (tan(tan(j())) + acos(atan(79.01)))))
  assert (! [(g != f), false, false][f]), "k"
  return to_float((- argnum))
}

read "k.png" to k

read "l.png" to l

fn m({ n : int, {  }, o : {} }, p[q, r, s] : float[,,], t[u, v] : {}[,]) : bool {
  let w = d
  let {{x, y[z, A, B], C[D]}} = (array[x : v, y : g] {{h, p, (array[z : g] n)}})[q, r]
  return (if false then (if true then (array[E : A, F : 988] (23.43 < 29.77)) else (if (x == 58.4) then (array[E : g, F : f] true) else (array[E : 941, F : c] false))) else (array[E : D, F : 286, G : c] (array[H : n, I : g] true))[s, (D + v), (- q)])[argnum, A]
  let {E[F], G, H[I, J, K]} = {b, t, w}
  return (if (B != g) then (if w[D, q, I] then {87.1, I, w} else {30.91, s, H}) else {i(), s, w}){2}[u, c, argnum]
}

fn n({ o : bool }, p : bool, { q[r, s] : {bool,float,int}[,] }) : bool {
  let t[u] = (if (! (if o then (o || true) else (! true))) then {acos(cos(10.19)), (array[t : a({})] exp(97.28)), atan(sqrt(h))} else {(sum[t : argnum, u : (sum[t : e, u : e, v : argnum] argnum), v : r] log(i())), [j(), i()], sqrt(h)}){1}
  let v[w, x] = (array[v : (sum[v : (if (i() == j()) then g else c), w : e] u), w : f, x : argnum] l)[e, c, e]
  let y = args
  return ((! (to_float(173) != (- cos(i())))) || (n((if (g == s) then {p} else {o}), (e != w), (if (! o) then {q} else {q})) || (! ((p && false) && true))))
  return {(array[z : g] (o && true))[c], {(array[z : s, A : 93] z)}{0}}{0}
}

fn o(p[q, r] : float[][,], s[t] : float[], u : float) : float {
  return log(u)
  return sin((asin((- i())) * u))
  return asin((sum[v : a((array[v : g, w : q, x : r] {})[to_int(77.06), r, f]), w : (r % e)] (sqrt(cos(19.9)) / h)))
  assert {((a({}) == (g * t)) && (argnum >= c)), (array[v : r, w : e, x : e] d)[q, t, e][r, a({}), (array[v : r, w : f, x : argnum] f)[a({}), 769, f]], a({})}{1}, "v"
  return o((array[v : argnum, w : a({})] b), b, acos(84.67))
}

