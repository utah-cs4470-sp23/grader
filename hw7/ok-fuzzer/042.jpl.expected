(LetCmd
 (ArgLValue (VarArgument a))
 (IfExpr
  (FloatType)
  (FalseExpr (BoolType))
  (BinopExpr
   (FloatType)
   (CallExpr (FloatType) cos (FloatExpr (FloatType) 99))
   %
   (SumLoopExpr
    (FloatType)
    a
    (IntExpr (IntType) 9)
    (CallExpr
     (FloatType)
     tan
     (CallExpr
      (FloatType)
      atan2
      (FloatExpr (FloatType) 63)
      (FloatExpr (FloatType) 91)))))
  (BinopExpr
   (FloatType)
   (BinopExpr
    (FloatType)
    (CallExpr
     (FloatType)
     acos
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 75)))
    /
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 75))))
   *
   (BinopExpr
    (FloatType)
    (CallExpr (FloatType) tan (FloatExpr (FloatType) 73))
    -
    (FloatExpr (FloatType) 16)))))
(LetCmd
 (ArgLValue (VarArgument b))
 (ArrayLoopExpr
  (ArrayType (FloatType) 3)
  b
  (TupleIndexExpr
   (IntType)
   (TupleLiteralExpr
    (TupleType (IntType) (IntType))
    (IntExpr (IntType) 756)
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) acos (VarExpr (FloatType) a))))
   0)
  c
  (TupleIndexExpr
   (IntType)
   (IfExpr
    (TupleType (IntType) (IntType))
    (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
    (IfExpr
     (TupleType (IntType) (IntType))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 459))
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (IntExpr (IntType) 911)
      (IntExpr (IntType) 991)))
    (TupleLiteralExpr
     (TupleType (IntType) (IntType))
     (IntExpr (IntType) 862)
     (VarExpr (IntType) argnum)))
   1)
  d
  (BinopExpr
   (IntType)
   (IntExpr (IntType) 318)
   -
   (IfExpr
    (IntType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 1)
      b
      (IntExpr (IntType) 242)
      (TrueExpr (BoolType)))
     (CallExpr (IntType) to_int (VarExpr (FloatType) a)))
    (VarExpr (IntType) argnum)
    (IntExpr (IntType) 224)))
  (CallExpr
   (FloatType)
   asin
   (CallExpr
    (FloatType)
    exp
    (CallExpr
     (FloatType)
     acos
     (CallExpr (FloatType) log (VarExpr (FloatType) a)))))))
(ReadCmd "c.png" (ArrayArgument c d e))
(ReadCmd "f.png" (ArrayArgument f g h))
(WriteCmd
 (VarExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  c)
 "i.png")
(LetCmd
 (TupleLValue)
 (TupleIndexExpr
  (TupleType)
  (ArrayIndexExpr
   (TupleType (TupleType))
   (IfExpr
    (ArrayType (TupleType (TupleType)) 1)
    (TrueExpr (BoolType))
    (ArrayLiteralExpr
     (ArrayType (TupleType (TupleType)) 1)
     (TupleLiteralExpr (TupleType (TupleType)) (TupleLiteralExpr (TupleType))))
    (ArrayLoopExpr
     (ArrayType (TupleType (TupleType)) 1)
     i
     (IntExpr (IntType) 932)
     (TupleLiteralExpr (TupleType (TupleType)) (TupleLiteralExpr (TupleType)))))
   (VarExpr (IntType) d))
  0))
(AssertCmd
 (UnopExpr
  (BoolType)
  !
  (UnopExpr
   (BoolType)
   !
   (IfExpr
    (BoolType)
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     0)
    (FalseExpr (BoolType))
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) d) != (VarExpr (IntType) d))
     &&
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))))))
 "i")
(LetCmd
 (ArgLValue (ArrayArgument i j))
 (IfExpr
  (ArrayType (IntType) 1)
  (BinopExpr
   (BoolType)
   (SumLoopExpr
    (IntType)
    i
    (VarExpr (IntType) g)
    j
    (VarExpr (IntType) argnum)
    k
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) d))
     0)
    (VarExpr (IntType) d))
   <
   (VarExpr (IntType) e))
  (IfExpr
   (ArrayType (IntType) 1)
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (FalseExpr (BoolType))
     !=
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      ==
      (VarExpr (IntType) argnum)))
    &&
    (ArrayIndexExpr
     (BoolType)
     (ArrayLiteralExpr (ArrayType (BoolType) 1) (FalseExpr (BoolType)))
     (VarExpr (IntType) g)))
   (IfExpr
    (ArrayType (IntType) 1)
    (BinopExpr
     (BoolType)
     (VarExpr (FloatType) a)
     !=
     (SumLoopExpr
      (FloatType)
      i
      (VarExpr (IntType) g)
      j
      (VarExpr (IntType) d)
      (VarExpr (FloatType) a)))
    (ArrayIndexExpr
     (ArrayType (IntType) 1)
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 1) 1)
      i
      (VarExpr (IntType) d)
      (VarExpr (ArrayType (IntType) 1) args))
     (IntExpr (IntType) 839))
    (VarExpr (ArrayType (IntType) 1) args))
   (IfExpr
    (ArrayType (IntType) 1)
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (TrueExpr (BoolType)) || (FalseExpr (BoolType))))
    (ArrayLiteralExpr
     (ArrayType (IntType) 1)
     (SumLoopExpr (IntType) i (VarExpr (IntType) g) (VarExpr (IntType) d)))
    (VarExpr (ArrayType (IntType) 1) args)))
  (ArrayLoopExpr
   (ArrayType (IntType) 1)
   i
   (BinopExpr (IntType) (IntExpr (IntType) 186) / (IntExpr (IntType) 808))
   (BinopExpr
    (IntType)
    (CallExpr
     (IntType)
     to_int
     (UnopExpr (FloatType) - (VarExpr (FloatType) a)))
    *
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      j
      (VarExpr (IntType) e)
      (VarExpr (IntType) e))
     (SumLoopExpr (IntType) j (VarExpr (IntType) argnum) (VarExpr (IntType) j)))))))
(LetCmd (ArgLValue (ArrayArgument k l)) (VarExpr (ArrayType (IntType) 1) i))
(LetCmd
 (ArgLValue (ArrayArgument m n o p))
 (TupleIndexExpr
  (ArrayType (FloatType) 3)
  (IfExpr
   (TupleType (ArrayType (FloatType) 3) (IntType))
   (BinopExpr
    (BoolType)
    (VarExpr (FloatType) a)
    ==
    (IfExpr
     (FloatType)
     (IfExpr
      (BoolType)
      (TrueExpr (BoolType))
      (TrueExpr (BoolType))
      (FalseExpr (BoolType)))
     (VarExpr (FloatType) a)
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 58))))
   (TupleIndexExpr
    (TupleType (ArrayType (FloatType) 3) (IntType))
    (TupleLiteralExpr
     (TupleType
      (IntType)
      (IntType)
      (TupleType (ArrayType (FloatType) 3) (IntType)))
     (VarExpr (IntType) j)
     (BinopExpr (IntType) (IntExpr (IntType) 966) / (VarExpr (IntType) argnum))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 3) (IntType))
      (VarExpr (ArrayType (FloatType) 3) b)
      (VarExpr (IntType) e)))
    2)
   (ArrayIndexExpr
    (TupleType (ArrayType (FloatType) 3) (IntType))
    (ArrayLoopExpr
     (ArrayType (TupleType (ArrayType (FloatType) 3) (IntType)) 1)
     m
     (SumLoopExpr
      (IntType)
      m
      (VarExpr (IntType) e)
      n
      (VarExpr (IntType) g)
      o
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) e))
     (TupleLiteralExpr
      (TupleType (ArrayType (FloatType) 3) (IntType))
      (VarExpr (ArrayType (FloatType) 3) b)
      (VarExpr (IntType) argnum)))
    (VarExpr (IntType) j)))
  0))
(ShowCmd
 (CallExpr
  (FloatType)
  cos
  (CallExpr
   (FloatType)
   sqrt
   (BinopExpr
    (FloatType)
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) to_float (IntExpr (IntType) 528))
     (CallExpr (FloatType) sqrt (VarExpr (FloatType) a)))
    /
    (CallExpr
     (FloatType)
     sqrt
     (ArrayIndexExpr
      (FloatType)
      (VarExpr (ArrayType (FloatType) 3) b)
      (VarExpr (IntType) l)
      (VarExpr (IntType) n)
      (VarExpr (IntType) d)))))))
(LetCmd
 (ArgLValue (ArrayArgument q r s))
 (IfExpr
  (ArrayType (BoolType) 2)
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    acos
    (CallExpr (FloatType) sqrt (VarExpr (FloatType) a)))
   >
   (FloatExpr (FloatType) 40))
  (ArrayLoopExpr
   (ArrayType (BoolType) 2)
   q
   (VarExpr (IntType) o)
   r
   (VarExpr (IntType) d)
   (FalseExpr (BoolType)))
  (ArrayLoopExpr
   (ArrayType (BoolType) 2)
   q
   (TupleIndexExpr
    (IntType)
    (TupleLiteralExpr
     (TupleType (IntType) (IntType))
     (CallExpr (IntType) to_int (VarExpr (FloatType) a))
     (VarExpr (IntType) o))
    0)
   r
   (IfExpr
    (IntType)
    (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
    (VarExpr (IntType) d)
    (VarExpr (IntType) p))
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) cos (VarExpr (FloatType) a))
     >
     (VarExpr (FloatType) a))
    ||
    (TrueExpr (BoolType))))))
