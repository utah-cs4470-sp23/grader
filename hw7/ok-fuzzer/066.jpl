let a = (- tan(log(to_float(argnum))))
let b[c] = (if (! (if ((argnum >= argnum) && false) then (! (argnum < argnum)) else false)) then {(array[b : argnum, c : argnum] args)}{0}[args[(sum[b : args[argnum], c : (sum[b : argnum, c : argnum, d : argnum] c), d : 235] (c % 693))], to_int(sin(exp(39.1)))] else [(if ((! false) && (true && true)) then argnum else to_int((sum[b : 672] 71.72)))])
fn d({ e : int, f[g, h] : bool[,], { {  }, { i[j, k] : {int,float}[,] } } }, { l : {float}, m[n, o, p] : bool[,,] }, { { { {  }, q[r, s] : {int,bool,float}[,] }, { t[u, v, w] : int[,,] } }, x[y] : bool[,,][] }) : float {
  let z[A] = (if (if (false || false) then m[o, c, u] else (if false then false else false)) then (array[z : v, A : o, B : g] [args]) else (array[z : j, A : o, B : c] [args, args, b]))[(sum[z : (- (sum[z : y] u)), A : u, B : j] v), to_int((atan2(90.51, a) - (sum[z : j] a))), (if (if true then (k != h) else (! true)) then w else args[args[o]])][56]
  let {B[C, D], {{E[F, G], H[I, J, K]}}} = {{(array[B : (sum[B : v, C : h] c), C : y] f), {{f, t}}}}{0}
  let L = a
  let {M, N, O[P, Q, R]} = (if (e != to_int(to_float(j))) then (if E[F, s] then {exp(L), {b, x, m}} else {(- 63.08), {args, x, m}}) else {91.37, {args, x, x[y]}}){1}
  return (if ((true != true) && (true && (! false))) then (array[S : s, T : e, U : I] 98.79) else (if (argnum == P) then (if E[P, k] then (array[S : v, T : C, U : J] a) else (array[S : J, T : I, U : n] a)) else (array[S : g, T : 697, U : Q] a)))[G, I, g]
}

let e = acos(atan2(pow(sqrt(55.56), tan(sin(1.66))), tan(asin(cos(a)))))
assert ((if ((if true then argnum else argnum) >= argnum) then {atan(3.95), (c - 561)} else {94.26, argnum}){1} == (if false then (- (sum[f : (sum[f : c, g : argnum, h : 246] g), g : c] b[447])) else c)), "f"
fn f({ { { { {  } } }, { { {  } }, g : int } }, h : {{float,bool,int}} }, { i : int, { j : int, { k : bool, l[m] : bool[] } }, n : {float[,,],bool} }) : float {
  let o = asin((sum[o : {(- m)}{0}, p : argnum, q : (if (! n{1}) then c else (if (g != m) then c else to_int(20.06)))] exp(exp(exp(a)))))
  assert {(if k then (if k then n else n) else n), exp(o)}{0}{1}, "p"
  return sqrt(cos((- (sum[p : (if k then j else 17)] cos(53.93)))))
  let p[q, r, s] = n{0}
  return atan({to_int(a), {e, p}}{1}{0})
}

let {{{{g, h, i}, j[k, l, m]}, n[o, p]}} = {{{{log(a), e, true}, (if true then (array[g : 52, h : 912, i : argnum] c) else (array[g : 965, h : 335, i : c] h))}, {60.91, (array[g : c, h : 404] h), (array[g : argnum] g)}{1}}}
let q[r, s] = (if true then (array[q : k, r : k] atan(e)) else (array[q : p, r : ((sum[q : k, r : m, s : (sum[q : c] o)] k) % ((if i then argnum else argnum) / (c - argnum)))] sqrt(sin((- g)))))
fn t(u : bool[,,], { v[w] : float[] }, x[y, z] : bool[,]) : int[,,][] {
  let A = l
  let {{{B}}} = {(array[B : k, C : (array[B : o, C : o] y)[z, A], D : (- j[109, k, 156])] {{o}})[(o / p), l, w]}
  let C = (to_float((if (! i) then (if (B >= o) then s else (z + 281)) else r)) != a)
  let D = atan2((sum[D : p] tan(e)), a)
  return (if ((sum[E : ((if C then 493 else s) + (- m))] to_int(exp(h))) < p) then [(if (l != argnum) then {j, i} else {j, i}){0}, j, (array[E : 384, F : r] (array[G : l, H : p, I : E] F))[l, (if true then s else s)]] else [t(u, {v}, x)][B])
}

fn u({  }) : {{bool,int},{bool,bool,bool},{bool,float,int}} {
  return {(array[v : k] {false, k})[to_int(cos(a))], {((true && (p <= l)) || (array[v : l, w : s] false)[(- c), m]), (if false then (89.17 != exp(43.05)) else (array[v : p] i)[l]), ((if false then (r > k) else (k != argnum)) == (! (s >= r)))}, (array[v : argnum, w : m] {(! i), exp(e), v})[l, l]}
  let {{}, {v, {w[x, y, z], {}}}} = (if (i || (! i)) then (if true then {{}, {[884, argnum, r], {j, {}}}} else {(array[v : l] {})[to_int(a)], {args, {j, {}}}}) else {{}, (if ((false || i) && (argnum >= o)) then {b, {j, {}}} else {args, {j, {}}})})
  let A[B, C, D] = j
  let E[F, G, H] = (array[E : r, F : B] (if (! i) then (array[G : E, H : x] j) else (array[G : l, H : argnum] A)))[m, (sum[E : D, F : p] y)][(- D), m]
  return {(if true then {(array[I : r, J : p] true)[r, v[c]], o} else {e, {false, B}, cos(h)}{1}), (if (if (h == e) then (array[I : H, J : G] i) else (array[I : 993, J : B] true))[(if i then s else argnum), c] then {i, {false, h}{0}, (o < p)} else (array[I : (l / l), J : k, K : x] {true, false, i})[to_int((e * e)), to_int(atan2(24.42, g)), y]), (if (D < y) then {{false, 26.05, argnum}, x, p} else {{i, g, r}, p, l}){0}}
}

let v[w, x] = (array[v : m, w : r, x : s] q)[c, (s + {(if i then argnum else r), atan(e)}{0}), (- (sum[v : l, w : to_int(atan(31.53))] c))]
fn y(z : bool, A[B, C, D] : {float,float,int}[,,]) : {bool,int} {
  let E[F, G, H] = (array[E : c, F : B, G : k] asin(h))
  let {I[J, K], {}, L} = (array[I : D, J : p] (array[K : B, L : p, M : H] {n, {}, L}))[w, to_int(pow(sin(e), atan(a)))][(s - s), r, B]
  let M = (array[M : x, N : K] x)
  assert ((array[N : s, O : (- k)] (if i then j else j))[n[x, w], K][c, s, C] <= l), "N"
  return {i, K}
}

