(TimeCmd
 (LetCmd
  (ArgLValue (ArrayArgument a b c))
  (ArrayIndexExpr
   (ArrayType (TupleType) 2)
   (ArrayLoopExpr
    (ArrayType (ArrayType (TupleType) 2) 2)
    a
    (IntExpr (IntType) 32)
    b
    (SumLoopExpr
     (IntType)
     a
     (IntExpr (IntType) 592)
     b
     (SumLoopExpr (IntType) a (IntExpr (IntType) 540) (VarExpr (IntType) a))
     c
     (IntExpr (IntType) 390)
     (VarExpr (IntType) b))
    (ArrayLoopExpr
     (ArrayType (TupleType) 2)
     c
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     d
     (VarExpr (IntType) b)
     (TupleLiteralExpr (TupleType))))
   (IfExpr
    (IntType)
    (BinopExpr (BoolType) (IntExpr (IntType) 432) != (IntExpr (IntType) 594))
    (IntExpr (IntType) 562)
    (IfExpr
     (IntType)
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (UnopExpr (IntType) - (IntExpr (IntType) 863))
     (IntExpr (IntType) 144)))
   (IntExpr (IntType) 139))))
(LetCmd
 (ArgLValue (ArrayArgument d e f g))
 (IfExpr
  (ArrayType (FloatType) 3)
  (FalseExpr (BoolType))
  (ArrayLoopExpr
   (ArrayType (FloatType) 3)
   d
   (VarExpr (IntType) argnum)
   e
   (BinopExpr
    (IntType)
    (CallExpr (IntType) to_int (FloatExpr (FloatType) 43))
    *
    (IntExpr (IntType) 390))
   f
   (CallExpr
    (IntType)
    to_int
    (ArrayIndexExpr
     (FloatType)
     (ArrayLoopExpr
      (ArrayType (FloatType) 1)
      d
      (VarExpr (IntType) c)
      (FloatExpr (FloatType) 29))
     (UnopExpr (IntType) - (VarExpr (IntType) c))))
   (CallExpr
    (FloatType)
    sin
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 35))
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 13)))))
  (ArrayIndexExpr
   (ArrayType (FloatType) 3)
   (ArrayLoopExpr
    (ArrayType (ArrayType (FloatType) 3) 2)
    d
    (IfExpr
     (IntType)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) != (FalseExpr (BoolType)))
     (IntExpr (IntType) 442)
     (VarExpr (IntType) b))
    e
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) c))
     0)
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     f
     (VarExpr (IntType) c)
     g
     (VarExpr (IntType) d)
     h
     (VarExpr (IntType) e)
     (CallExpr
      (FloatType)
      pow
      (FloatExpr (FloatType) 45)
      (FloatExpr (FloatType) 0))))
   (IntExpr (IntType) 124)
   (VarExpr (IntType) b))))
(WriteCmd
 (IfExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (ArrayIndexExpr
   (BoolType)
   (TupleIndexExpr
    (ArrayType (BoolType) 3)
    (TupleLiteralExpr
     (TupleType (ArrayType (BoolType) 3) (IntType))
     (ArrayLoopExpr
      (ArrayType (BoolType) 3)
      h
      (IntExpr (IntType) 49)
      i
      (VarExpr (IntType) argnum)
      j
      (VarExpr (IntType) g)
      (TrueExpr (BoolType)))
     (VarExpr (IntType) f))
    0)
   (VarExpr (IntType) e)
   (ArrayIndexExpr
    (IntType)
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     h
     (SumLoopExpr (IntType) h (IntExpr (IntType) 561) (VarExpr (IntType) c))
     i
     (VarExpr (IntType) f)
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) i)
      (VarExpr (IntType) e)))
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (ArrayType (TupleType) 2) (IntType) (IntType))
      (VarExpr (ArrayType (TupleType) 2) a)
      (VarExpr (IntType) b)
      (VarExpr (IntType) f))
     1)
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (FloatExpr (FloatType) 9)
      ==
      (FloatExpr (FloatType) 6))
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) b)
      (VarExpr (IntType) b))
     (VarExpr (IntType) b)))
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 1)
     (BinopExpr (BoolType) (VarExpr (IntType) b) > (VarExpr (IntType) g))
     (VarExpr (ArrayType (IntType) 1) args)
     (ArrayLiteralExpr
      (ArrayType (IntType) 1)
      (IntExpr (IntType) 823)
      (VarExpr (IntType) c)))
    (VarExpr (IntType) c)))
  (ArrayLoopExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   h
   (SumLoopExpr
    (IntType)
    h
    (VarExpr (IntType) f)
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType) (IntType))
      (VarExpr (IntType) h)
      (VarExpr (IntType) c)
      (VarExpr (IntType) g))
     1))
   i
   (BinopExpr
    (IntType)
    (UnopExpr (IntType) - (VarExpr (IntType) f))
    /
    (SumLoopExpr
     (IntType)
     h
     (SumLoopExpr
      (IntType)
      h
      (VarExpr (IntType) f)
      i
      (VarExpr (IntType) e)
      j
      (IntExpr (IntType) 963)
      (VarExpr (IntType) argnum))
     i
     (SumLoopExpr
      (IntType)
      h
      (VarExpr (IntType) b)
      i
      (VarExpr (IntType) f)
      j
      (VarExpr (IntType) e)
      (VarExpr (IntType) j))
     j
     (VarExpr (IntType) e)
     (UnopExpr (IntType) - (VarExpr (IntType) h))))
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
    (ArrayIndexExpr
     (FloatType)
     (VarExpr (ArrayType (FloatType) 3) d)
     (VarExpr (IntType) b)
     (VarExpr (IntType) i)
     (VarExpr (IntType) h))
    (CallExpr (FloatType) cos (FloatExpr (FloatType) 41))
    (CallExpr
     (FloatType)
     to_float
     (UnopExpr (IntType) - (VarExpr (IntType) b)))
    (FloatExpr (FloatType) 77)))
  (ArrayLoopExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   h
   (IfExpr
    (IntType)
    (TrueExpr (BoolType))
    (VarExpr (IntType) argnum)
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) c))
     0))
   i
   (VarExpr (IntType) argnum)
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
    (BinopExpr
     (FloatType)
     (CallExpr (FloatType) to_float (VarExpr (IntType) f))
     -
     (FloatExpr (FloatType) 9))
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) to_float (VarExpr (IntType) g)))
    (CallExpr (FloatType) acos (FloatExpr (FloatType) 89))
    (CallExpr
     (FloatType)
     atan
     (CallExpr (FloatType) to_float (VarExpr (IntType) g))))))
 "h.png")
(PrintCmd "h")
(PrintCmd "h")
(LetCmd (ArgLValue (VarArgument h)) (VarExpr (IntType) e))
(AssertCmd
 (IfExpr
  (BoolType)
  (IfExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (VarExpr (IntType) h)
     >=
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (IntExpr (IntType) 126)
      (VarExpr (IntType) c)))
    ==
    (TrueExpr (BoolType)))
   (FalseExpr (BoolType))
   (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
  (TupleIndexExpr
   (BoolType)
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (BoolType))
    (CallExpr
     (FloatType)
     atan2
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 91))
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 62)))
    (CallExpr
     (FloatType)
     atan
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 97)))
    (BinopExpr (BoolType) (FalseExpr (BoolType)) && (TrueExpr (BoolType))))
   2)
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    log
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 15))))
   <
   (CallExpr
    (FloatType)
    cos
    (CallExpr
     (FloatType)
     cos
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 80))))))
 "i")
(LetCmd
 (ArgLValue (VarArgument i))
 (UnopExpr
  (FloatType)
  -
  (UnopExpr
   (FloatType)
   -
   (CallExpr
    (FloatType)
    log
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 94)))))))
(AssertCmd
 (BinopExpr
  (BoolType)
  (VarExpr (IntType) argnum)
  >
  (IfExpr
   (IntType)
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (TrueExpr (BoolType)) || (TrueExpr (BoolType)))
     ||
     (BinopExpr (BoolType) (VarExpr (IntType) b) == (VarExpr (IntType) c))))
   (CallExpr
    (IntType)
    to_int
    (TupleIndexExpr
     (FloatType)
     (TupleLiteralExpr
      (TupleType (IntType) (FloatType))
      (VarExpr (IntType) b)
      (VarExpr (FloatType) i))
     1))
   (CallExpr
    (IntType)
    to_int
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) acos (VarExpr (FloatType) i))))))
 "j")
(LetCmd
 (TupleLValue
  (TupleLValue
   (TupleLValue)
   (ArgLValue (VarArgument j))
   (ArgLValue (VarArgument k)))
  (ArgLValue (VarArgument l)))
 (TupleIndexExpr
  (TupleType (TupleType (TupleType) (BoolType) (BoolType)) (FloatType))
  (TupleLiteralExpr
   (TupleType
    (TupleType (TupleType (TupleType) (BoolType) (BoolType)) (FloatType))
    (FloatType)
    (BoolType))
   (TupleLiteralExpr
    (TupleType (TupleType (TupleType) (BoolType) (BoolType)) (FloatType))
    (TupleLiteralExpr
     (TupleType (TupleType) (BoolType) (BoolType))
     (TupleLiteralExpr (TupleType))
     (FalseExpr (BoolType))
     (TrueExpr (BoolType)))
    (CallExpr (FloatType) log (VarExpr (FloatType) i)))
   (CallExpr
    (FloatType)
    pow
    (CallExpr (FloatType) cos (FloatExpr (FloatType) 2))
    (CallExpr
     (FloatType)
     to_float
     (CallExpr (IntType) to_int (VarExpr (FloatType) i))))
   (BinopExpr
    (BoolType)
    (BinopExpr (BoolType) (VarExpr (IntType) argnum) == (VarExpr (IntType) b))
    &&
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) h) < (VarExpr (IntType) f))
     &&
     (IfExpr
      (BoolType)
      (TrueExpr (BoolType))
      (FalseExpr (BoolType))
      (FalseExpr (BoolType))))))
  0))
(ReadCmd "m.png" (VarArgument m))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument n)) (ArgLValue (VarArgument o)))
 (TupleLiteralExpr
  (TupleType (FloatType) (BoolType))
  (BinopExpr
   (FloatType)
   (CallExpr (FloatType) atan (VarExpr (FloatType) l))
   %
   (CallExpr
    (FloatType)
    cos
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) to_float (VarExpr (IntType) c))
     (CallExpr (FloatType) sqrt (VarExpr (FloatType) l)))))
  (BinopExpr
   (BoolType)
   (CallExpr
    (FloatType)
    cos
    (CallExpr
     (FloatType)
     atan
     (CallExpr (FloatType) to_float (VarExpr (IntType) f))))
   !=
   (CallExpr
    (FloatType)
    exp
    (IfExpr
     (FloatType)
     (BinopExpr (BoolType) (VarExpr (IntType) b) >= (IntExpr (IntType) 895))
     (CallExpr (FloatType) sin (VarExpr (FloatType) i))
     (VarExpr (FloatType) l))))))
