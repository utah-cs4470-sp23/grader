let a[b, c, d] = {(array[a : 924, b : to_int(63.06)] (array[c : argnum, d : a, e : argnum] 841))}{0}[to_int(log(asin(acos(25.21)))), to_int((sum[a : (- 484), b : (sum[a : (477 / argnum), b : 770] (- a))] (sum[c : 790, d : 639, e : (- a)] atan(50.21))))]
read "e.png" to e[f, g]

fn h({  }) : {{bool,float},{bool,bool,int},float} {
  let i[j, k] = (array[i : b, j : argnum] args[{args, i, 15.67}{0}[i]])
  let l[m, n, o] = (array[l : (- {d}{0}), m : f, n : c] h((if false then (array[o : j, p : argnum] {})[l, d] else {})))
  let p[q, r, s] = a
  let t[u, v, w] = (if (! false) then [(array[t : f, u : o] p), (array[t : o, u : f] p), (array[t : argnum, u : g] a)] else (array[t : b] (array[u : r, v : d] a)))[j][m, n]
  return (if (pow(atan(sqrt(54.26)), (sum[x : g, y : q] cos(59.63))) >= ((if (! false) then (- 73.51) else 60.81) - acos(sin(28.19)))) then h((array[x : m, y : g, z : (if false then 341 else w)] {})[(- f), j, v]) else (if (if ((- 63.27) != to_float(348)) then false else false) then h((array[x : v] {})[i[v, w]]) else l[(if (w < k) then (sum[x : s, y : d] argnum) else v), c, q]))
}

fn i() : int {
  let j = i()
  let k[l] = (array[k : argnum] (if (! ((true && true) && (k < argnum))) then (sum[l : k, m : b] c) else argnum))
  let m[n, o, p] = [{b, (array[m : j, n : argnum, o : d] g)}, {j, (array[m : 140, n : j, o : c] c)}, {i(), a}][g]{1}
  assert ((if false then (d >= f) else (false || (true || true))) || true), "q"
  return f
}

fn j({ { k[l] : {int,int,bool}[], m[n, o, p] : int[,,], q[r] : bool[,][] }, s[t, u, v] : bool[,,] }, { w : {float}, {  } }) : {float,{}} {
  let {{x[y]}, z} = (if {{c, true, c}}{0}{1} then (array[x : i(), y : {k, i()}{1}] {{args}, 764})[((if false then o else (argnum * b)) / (array[x : 776, y : p] p)[u, argnum]), (if ((true != true) || true) then g else d)] else (array[x : v, y : v, z : to_int(87.93)] {{args}, t})[v, {r}{0}, (if s[(n / p), c, f] then argnum else a[(t % i()), i(), l])])
  let A = k
  let B = h((if ((if false then o else o) < f) then {(c % u), {}} else {i(), {}}){1})
  let {} = {}
  return (if (! false) then {(if true then (i() / n) else c), {31.51, {}}}{1} else {(if false then {91.02, r}{0} else to_float(a[b, g, c])), (if true then {{}} else {{}}){0}})
}

time let k = atan2((sum[k : to_int(exp(41.25)), l : c, m : (array[k : g, l : argnum, m : b] m)[183, args[d], (argnum - 137)]] cos(sin(46.83))), tan(asin(87.3)))

fn l(m[n, o] : int[,], { p : {float} }, q : {{},bool}) : int {
  let r = l((if (if (n == (sum[r : i(), s : b] f)) then false else ((- i()) == d)) then {m, (i() >= n)}{0} else (if (14.79 < sin(k)) then (array[r : c] m)[n] else (array[r : (- i()), s : (sum[r : n] f)] s))), {(array[r : g] p)[g]}, {{q}, (sum[r : d, s : d] n), g}{0}{0})
  let s[t] = (array[s : (if (if ((! true) || false) then (if (i() != o) then (! false) else (if true then true else false)) else (! true)) then (if true then m else m)[argnum, f] else (if (args[argnum] > argnum) then d else d))] log(k))
  return d
  let u[v, w, x] = (if ((asin(96.83) != to_float(i())) || {(d < t), q{0}, {a, f}}{0}) then (if true then (array[u : 91, v : c, w : (sum[u : 468] f)] tan(k)) else (array[u : f, v : r, w : (- b)] (exp(k) - asin(k)))) else (array[u : n, v : (d + n), w : argnum] (- tan(sqrt(14.49)))))
  return g
}

fn m({  }, n[o] : bool[], p : float) : {{{}}} {
  let {} = {}
  let {{q[r], s}} = [{(if false then {args, args} else {args, args})}][o]
  return [m({argnum, {}, q}{1}, (array[t : r] (f < c)), log(atan(k))), m({}, n, exp(cos(33.83)))][argnum]
  let {t[u, v], w} = (if ((acos(log(p)) == (if (r == r) then log(p) else acos(k))) == (true || (if (false || true) then (p != p) else (true != true)))) then (if false then {{argnum}, {e, c}, acos(k)}{1} else (array[t : o, u : g, v : argnum] {e, g})[b, (sum[t : g, u : (c + o)] i()), c]) else (array[t : to_int((57.97 * p))] {e, o})[(r / (sum[t : g, u : (sum[t : r, u : 444] t), v : 355] (- o)))])
  return (if (! (((if false then false else false) && false) || {false}{0})) then (if (asin(k) != (if false then 2.32 else cos(86.08))) then {[args], m({}, n, p), d}{1} else (if (if (false || false) then (true == true) else false) then m({}, [true, true, true], p) else m({}, [true], 9.92))) else {{{{}}}, args[i()], f}{0})
}

let n[o, p, q] = a
let r[s, t] = e
let u = atan2(((if (if (false && true) then (! false) else (s < d)) then tan(asin(87.96)) else pow(atan2(32.58, 53.03), (k * k))) % sqrt(exp((sum[u : o, v : p] 44.33)))), log(to_float((- argnum))))
let v = q
