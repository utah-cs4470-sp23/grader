let a = [args[400]]
let b = to_float((if (if (! (! true)) then (cos(17.52) != acos(20.05)) else (! (18 >= argnum))) then (if (true == (true == false)) then (if false then args[argnum] else (867 / argnum)) else (array[b : 501, c : 206] 275)[argnum, to_int(24.13)]) else (to_int(exp(61.25)) / argnum)))
let {c[d]} = (array[c : {635}{0}] {{args}, 560})[(sum[c : (if (! false) then (if true then 799 else argnum) else (- 670)), d : (- (argnum / 199)), e : (776 / 507)] ((sum[f : e, g : 609, h : 140] 11) % (sum[f : c, g : d] e)))]{0}
write (if false then (array[e : (sum[e : (if (! false) then d else d), f : d] argnum), f : (array[e : d, f : (- 162), g : (sum[e : 39, f : 421] d)] d)[argnum, (d % (- 392)), to_int((- b))]] {c, (! false), {75.46, b, 37.34, 88.22}}{2}) else (if {98, (argnum > argnum), to_float(507)}{1} then (array[e : d, f : (- d)] {to_float(d), 85.83, asin(77.48), atan(14.41)}) else (array[e : (if (d > d) then argnum else (if false then argnum else d)), f : argnum] {(sum[g : 100, h : f] b), pow(b, b), (- b), sin(74.8)}))) to "e.png"

let {} = {acos(log(b)), (array[e : d, f : a[argnum]] (if true then {} else {}))}{1}[(if (28.46 > log(asin(50.1))) then (if (d < argnum) then (array[e : 158] 842) else [d, 488])[((d * 76) % argnum)] else (if false then {b, argnum} else {99.35, 105}){1}), (if ((true && (argnum == 288)) || [true][argnum]) then (- argnum) else {(- argnum), d}{0})]
fn e({  }) : bool {
  let f = sin(log(to_float((sum[f : (888 / 34), g : d, h : (560 - d)] (- d)))))
  let g[h, i] = [(if ((argnum <= d) && (33.83 >= f)) then (array[g : argnum, h : (d - d)] g) else (array[g : (sum[g : argnum] 373), h : d] argnum)), (array[g : d, h : to_int(f)] (if e({}) then g else c[d]))][(if (e({}) || e({})) then {(- d), to_int(34.18)} else {(99 % argnum), (if false then 240 else 952)}){1}]
  let {j} = {27.37}
  let k[l] = (array[k : {(if false then g else g), d, 88.92}{0}[(- 495), argnum]] log(exp(b)))
  return e((if (if (! false) then e({}) else (527 >= d)) then (array[m : h, n : (sum[m : i, n : 750] i), o : h] {}) else (if e({}) then (array[m : h, n : argnum, o : h] {}) else (array[m : d, n : d, o : d] {})))[(- argnum), l, h])
}

let f = d
fn g() : float {
  return acos(acos(pow((exp(g()) * atan2(g(), g())), b)))
  let h[i, j, k] = (if ((array[h : (d / d), i : (797 - 934)] (true || true))[f, f] || (if ((g() <= 22.97) || true) then (to_int(g()) != (if true then argnum else 240)) else ((sum[h : 848, i : 884, j : 734] 600) >= d))) then (array[h : (sum[h : f, i : argnum, j : d] {69.94, j, h}{1}), i : {731}{0}, j : (if (d > f) then (array[h : f, i : argnum] f) else (array[h : argnum, i : f] i))[to_int(tan(34.15)), (- argnum)]] acos(atan(g()))) else (if (! e({})) then {(array[h : 874] 54.27), (array[h : argnum, i : 708, j : argnum] 12.97)} else {(array[h : 306] 54.37), (array[h : f, i : d, j : d] g())}){1})
  let {{}} = {(if (! (88.25 == b)) then (if true then {{}} else {{}}) else {{}}), args}{0}
  let l[m, n] = {{(array[l : k, m : j] j)}}{0}{0}
  return cos(atan2(g(), log(asin(cos(b)))))
}

fn h(i[j, k] : {}[,,][,]) : bool {
  let {l[m, n, o], p[q, r], {s[t], u}} = {(atan2(pow(g(), b), tan(54.61)) + g()), {(array[l : 235, m : k, n : (argnum * 23)] a), (array[l : (sum[l : f, m : k, n : f] l), m : (sum[l : argnum] j)] pow(b, 50.77)), {args, (j / d)}}}{1}
  let {} = (array[v : (if (m == d) then (- 370) else argnum), w : (sum[v : k] argnum)] (array[x : (sum[x : m, y : t, z : m] z)] (if false then {} else {})))[(- to_int(b)), 870][(- u)]
  let {v[w, x, y]} = {(array[v : argnum, w : (if (! (n >= f)) then o else {773, r}{1}), x : argnum] s)}
  let z[A, B, C] = (array[z : t] (array[A : q, B : (- w)] i[n, r]))[argnum][n, argnum]
  return false
}

show args

fn i({ { j[k] : float[,][], l[m, n, o] : bool[,,] }, p[q] : float[], r : float }, s[t] : float[]) : int {
  return (if (if ((g() == 60.38) && (f <= n)) then (f < m) else (! true)) then (if (! (! false)) then (if l[n, k, o] then {s, k} else {s, 602}) else {p, argnum}) else {args, (d < m), {s, m}}{2}){1}
  return (to_int(g()) - to_int(cos(acos((- 22.53)))))
  let u[v, w, x] = l
  let y[z, A] = (if ((exp(g()) > (if false then (- r) else atan2(r, b))) || (if l[args[d], t, f] then (if (764 < n) then (if false then true else false) else false) else (r != (- r)))) then (if (if (! true) then (! false) else (false != false)) then j else (array[y : f] j)[q])[d] else (array[y : f, z : (sum[y : to_int(p[v]), z : v, A : k] z)] atan(cos((sum[A : o] r)))))
  return z
}

fn j(k : int[,,][], l : int) : float {
  let {} = {}
  let {} = {}
  let m[n] = args
  let o = j((array[o : d] {argnum, (array[p : l, q : argnum, r : 982] 193), sin(20.2)}{1}), f)
  return j((if e((if (n >= d) then (if false then {} else {}) else {})) then k else (array[p : n] (if (! true) then (array[q : argnum, r : d, s : 872] d) else (array[q : l, r : f, s : 64] s)))), argnum)
}

