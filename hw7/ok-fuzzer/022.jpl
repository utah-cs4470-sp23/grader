let a = exp(asin(atan(exp(14.11))))
let b[c] = (if (! (atan(11.04) <= cos(a))) then {argnum, (array[b : (if true then 295 else argnum)] b), ((- argnum) >= argnum)} else {argnum, (array[b : (argnum + 771)] (19 * b)), ((992 != argnum) == (false && true))}){1}
let {d} = {args}
let {e[f], g, h[i, j]} = {d, exp(cos(sqrt(cos(a)))), (if (! (! true)) then {(array[e : c, f : c] e), false} else {(array[e : c, f : c] argnum), (c >= argnum)}){0}}
read image "k.png" to k[l, m]

write image k to "n.png"

assert (if (if (acos(g) <= 24.17) then (log(a) != a) else (atan(a) >= 24.79)) then {h, {true}}{1} else {{false}{0}}){0}, "n"
assert [{i, (! false)}{1}, false, (! (! true))][{l, sqrt(to_float(349))}{0}], "n"
let {n[o, p, q], {{}, r, s[t]}, u[v, w, x]} = (array[n : ({869}{0} % j), o : f] {(if (! false) then (array[p : l, q : m, r : j] d) else (array[p : argnum, q : f, r : o] args)), {{}, args, d}, (array[p : (sum[p : l, q : n, r : o] r), q : l, r : args[l]] [o, m])})[m, (m * (sum[n : i, o : h[m, c], p : c] o))]
read image "y.png" to y[z, A]

let B = v
print "C"

