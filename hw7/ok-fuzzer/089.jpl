let a = log(80.83)
let {{}} = {(array[b : argnum, c : (200 / (- argnum))] [{}][to_int(88.23)])[argnum, [to_int(a)][(- (- 180))]]}
let b = (array[b : to_int(exp(atan2(to_float(argnum), cos(4.11)))), c : argnum, d : {{true, 225}}{0}{1}] log({acos(a), a, (! true)}{0}))
let c = (if ({true}{0} || ((102 > 850) || true)) then {exp((- 89.76)), acos(sqrt(36.24))} else {atan2(tan(17.11), acos(93.96)), atan(asin(a))}){1}
let d = (- acos(atan2(exp(36.7), pow(a, a))))
fn e(f : float, g[h] : int[]) : float {
  return tan(sqrt(60.93))
  let i = atan(log(acos((sum[i : 752, j : (812 - h)] sqrt(f)))))
  let j[k] = (if (if ((289 > h) && (f >= 57.47)) then {argnum, (! false), (h * h)} else {(- 686), false, h}){1} then (array[j : h, k : (- h)] {d, g, g})[h, {51, d, a}{0}]{2} else [926, {(if true then 616 else argnum)}{0}, (sum[j : 598, k : h, l : (if false then g[h] else to_int(d))] {a, h}{1})])
  let {l, {}} = {(array[l : 373, m : (- 236)] {h, {}})}{0}[{i, {k}, (h == k)}{1}{0}, 288]
  return (array[m : ((592 * argnum) % h), n : l] {acos(f)})[(if (l != k) then {k, 458} else {h, k}){0}, (- l)]{0}
}

let f = cos(pow(asin(asin(acos(96.29))), a))
let g = ({c, to_int(sin(c)), {{}, c, true}{1}}{2} >= exp(a))
let h[i] = [args]
let j[k] = (if ((sum[j : argnum, k : argnum] (j / j)) > (sum[j : i, k : 157] (- j))) then (array[j : (sum[j : 244] 78), k : argnum, l : (argnum % 820)] (array[m : argnum, n : k] args))[(argnum + 371), to_int(d), to_int(c)] else (if (if (true && true) then (true || g) else (g && g)) then (array[j : to_int(a), k : to_int(a)] (array[l : k] argnum)) else (array[j : i, k : argnum] args)))[(- i), (if ((if g then 213 else argnum) == i) then {(sum[j : 996, k : i, l : i] k)} else {(- i)}){0}]
let l[m, n, o] = (if (if (i < k) then {(404 != 707)} else {true}){0} then {(array[l : argnum, m : (sum[l : 201, m : i] l), n : argnum] to_float(i))}{0} else (array[l : (if false then {b, j, k}{2} else i), m : to_int((pow(d, d) % e(f, args))), n : (sum[l : [i, k, k][(- argnum)], m : k, n : (- argnum)] m)] [b, b][to_int(a)][940, (- k), n]))
fn p(q[r] : float[][], { s : int }, { { { t : bool, u[v, w] : bool[,] } } }) : float {
  let x[y, z] = (if (t || t) then (array[x : argnum, y : s, z : s] (array[A : s, B : y, C : y] u)) else (array[x : k, y : (sum[x : argnum, y : argnum] y), z : n] (array[A : z, B : z, C : r] u)))[to_int(a), (if (t && g) then (array[x : m, y : n] k) else (array[x : n, y : 156] v))[w, w], to_int(cos(pow(f, f)))][v, s, r]
  let A = (- m)
  let B[C, D, E] = b
  let {F, G[H], {}} = {q, {k, q, {{}}{0}}, true}{1}
  return cos(atan((sum[I : (sum[I : w, J : r, K : y] w)] a)))
}

