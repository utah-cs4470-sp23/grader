(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument a b c d))
  (TupleLValue
   (ArgLValue (ArrayArgument e f))
   (TupleLValue (ArgLValue (VarArgument (FloatType) g))))
  (ArgLValue (VarArgument (ArrayType (FloatType) 1) h)))
 (IfExpr
  (TupleType
   (ArrayType (ArrayType (IntType) 1) 3)
   (TupleType (ArrayType (FloatType) 1) (TupleType (FloatType)))
   (ArrayType (FloatType) 1))
  (BinopExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (CallExpr
     (IntType)
     to_int
     (SumLoopExpr
      (FloatType)
      a
      (IntExpr (IntType) 996)
      b
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 7)))
    <
    (ArrayIndexExpr
     (IntType)
     (VarExpr (ArrayType (IntType) 1) args)
     (UnopExpr (IntType) - (IntExpr (IntType) 570))))
   ||
   (BinopExpr
    (BoolType)
    (TrueExpr (BoolType))
    ||
    (BinopExpr
     (BoolType)
     (BinopExpr (IntType) (IntExpr (IntType) 297) - (VarExpr (IntType) argnum))
     !=
     (IntExpr (IntType) 984))))
  (TupleLiteralExpr
   (TupleType
    (ArrayType (ArrayType (IntType) 1) 3)
    (TupleType (ArrayType (FloatType) 1) (TupleType (FloatType)))
    (ArrayType (FloatType) 1))
   (ArrayLoopExpr
    (ArrayType (ArrayType (IntType) 1) 3)
    a
    (CallExpr (IntType) to_int (FloatExpr (FloatType) 51))
    b
    (BinopExpr
     (IntType)
     (VarExpr (IntType) argnum)
     %
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) argnum)))
    c
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum))
     0)
    (ArrayLiteralExpr
     (ArrayType (IntType) 1)
     (IntExpr (IntType) 515)
     (IntExpr (IntType) 547)
     (SumLoopExpr (IntType) d (IntExpr (IntType) 91) (VarExpr (IntType) b))))
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 1) (TupleType (FloatType)))
    (ArrayLiteralExpr
     (ArrayType (FloatType) 1)
     (CallExpr (FloatType) tan (FloatExpr (FloatType) 67))
     (IfExpr
      (FloatType)
      (FalseExpr (BoolType))
      (FloatExpr (FloatType) 49)
      (FloatExpr (FloatType) 19))
     (FloatExpr (FloatType) 64))
    (TupleLiteralExpr (TupleType (FloatType)) (FloatExpr (FloatType) 21)))
   (ArrayLiteralExpr
    (ArrayType (FloatType) 1)
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) to_float (IntExpr (IntType) 369)))))
  (TupleLiteralExpr
   (TupleType
    (ArrayType (ArrayType (IntType) 1) 3)
    (TupleType (ArrayType (FloatType) 1) (TupleType (FloatType)))
    (ArrayType (FloatType) 1))
   (ArrayLoopExpr
    (ArrayType (ArrayType (IntType) 1) 3)
    a
    (ArrayIndexExpr
     (IntType)
     (ArrayLiteralExpr
      (ArrayType (IntType) 1)
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 225))
     (IntExpr (IntType) 154))
    b
    (VarExpr (IntType) argnum)
    c
    (SumLoopExpr
     (IntType)
     a
     (VarExpr (IntType) argnum)
     (IntExpr (IntType) 486))
    (TupleIndexExpr
     (ArrayType (IntType) 1)
     (TupleLiteralExpr
      (TupleType (ArrayType (IntType) 1))
      (VarExpr (ArrayType (IntType) 1) args))
     0))
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 1) (TupleType (FloatType)))
    (ArrayLoopExpr
     (ArrayType (FloatType) 1)
     a
     (IntExpr (IntType) 418)
     (FloatExpr (FloatType) 61))
    (TupleLiteralExpr (TupleType (FloatType)) (FloatExpr (FloatType) 90)))
   (ArrayLoopExpr
    (ArrayType (FloatType) 1)
    a
    (ArrayIndexExpr
     (IntType)
     (ArrayLiteralExpr (ArrayType (IntType) 1) (VarExpr (IntType) argnum))
     (IntExpr (IntType) 835))
    (CallExpr (FloatType) atan (FloatExpr (FloatType) 62))))))
(LetCmd
 (ArgLValue (VarArgument (IntType) i))
 (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
(LetCmd
 (TupleLValue)
 (IfExpr
  (TupleType)
  (BinopExpr
   (BoolType)
   (VarExpr (IntType) argnum)
   ==
   (UnopExpr (IntType) - (VarExpr (IntType) b)))
  (TupleLiteralExpr (TupleType))
  (ArrayIndexExpr
   (TupleType)
   (ArrayLoopExpr
    (ArrayType (TupleType) 3)
    j
    (VarExpr (IntType) f)
    k
    (CallExpr
     (IntType)
     to_int
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 22)))
    l
    (BinopExpr
     (IntType)
     (SumLoopExpr
      (IntType)
      j
      (VarExpr (IntType) argnum)
      k
      (IntExpr (IntType) 498)
      l
      (IntExpr (IntType) 546)
      (VarExpr (IntType) d))
     *
     (BinopExpr (IntType) (VarExpr (IntType) d) * (VarExpr (IntType) b)))
    (ArrayIndexExpr
     (TupleType)
     (ArrayLiteralExpr
      (ArrayType (TupleType) 1)
      (TupleLiteralExpr (TupleType))
      (TupleLiteralExpr (TupleType)))
     (IntExpr (IntType) 267)))
   (VarExpr (IntType) c)
   (SumLoopExpr
    (IntType)
    j
    (VarExpr (IntType) d)
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) log (FloatExpr (FloatType) 86))))
   (VarExpr (IntType) argnum))))
(LetCmd
 (ArgLValue (ArrayArgument j k l))
 (TupleIndexExpr
  (ArrayType (IntType) 2)
  (TupleLiteralExpr
   (TupleType (ArrayType (IntType) 2) (IntType))
   (ArrayIndexExpr
    (ArrayType (IntType) 2)
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 2) 2)
     j
     (VarExpr (IntType) i)
     k
     (SumLoopExpr (IntType) j (VarExpr (IntType) d) (VarExpr (IntType) b))
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      l
      (VarExpr (IntType) b)
      m
      (VarExpr (IntType) i)
      (VarExpr (IntType) argnum)))
    (BinopExpr
     (IntType)
     (SumLoopExpr (IntType) j (VarExpr (IntType) f) (VarExpr (IntType) j))
     -
     (IntExpr (IntType) 76))
    (VarExpr (IntType) b))
   (VarExpr (IntType) i))
  0))
(LetCmd
 (ArgLValue (VarArgument (FloatType) m))
 (CallExpr
  (FloatType)
  asin
  (CallExpr (FloatType) sqrt (VarExpr (FloatType) g))))
(WriteCmd
 (ArrayIndexExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (ArrayLoopExpr
   (ArrayType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    3)
   n
   (TupleIndexExpr
    (IntType)
    (IfExpr
     (TupleType (IntType) (IntType))
     (BinopExpr (BoolType) (VarExpr (IntType) f) == (VarExpr (IntType) argnum))
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (VarExpr (IntType) d)
      (VarExpr (IntType) b))
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (VarExpr (IntType) f)
      (VarExpr (IntType) k)))
    1)
   o
   (VarExpr (IntType) i)
   p
   (IntExpr (IntType) 303)
   (ArrayLoopExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    q
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      q
      (VarExpr (IntType) b)
      r
      (VarExpr (IntType) o)
      s
      (VarExpr (IntType) n)
      (VarExpr (IntType) argnum))
     (BinopExpr (IntType) (IntExpr (IntType) 480) % (VarExpr (IntType) d))
     (SumLoopExpr
      (IntType)
      q
      (VarExpr (IntType) c)
      r
      (VarExpr (IntType) c)
      (VarExpr (IntType) q))
     (VarExpr (IntType) k))
    r
    (VarExpr (IntType) argnum)
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
     (BinopExpr
      (FloatType)
      (VarExpr (FloatType) m)
      +
      (FloatExpr (FloatType) 22))
     (CallExpr (FloatType) sin (VarExpr (FloatType) m))
     (CallExpr (FloatType) asin (VarExpr (FloatType) m))
     (UnopExpr (FloatType) - (VarExpr (FloatType) m)))))
  (VarExpr (IntType) l)
  (VarExpr (IntType) k)
  (VarExpr (IntType) f))
 "n.png")
(LetCmd (ArgLValue (ArrayArgument n o)) (VarExpr (ArrayType (IntType) 1) args))
(LetCmd
 (ArgLValue (VarArgument (IntType) p))
 (TupleIndexExpr
  (IntType)
  (ArrayIndexExpr
   (TupleType (FloatType) (IntType))
   (IfExpr
    (ArrayType (TupleType (FloatType) (IntType)) 1)
    (FalseExpr (BoolType))
    (ArrayLoopExpr
     (ArrayType (TupleType (FloatType) (IntType)) 1)
     p
     (VarExpr (IntType) argnum)
     (TupleLiteralExpr
      (TupleType (FloatType) (IntType))
      (VarExpr (FloatType) m)
      (VarExpr (IntType) k)))
    (ArrayLoopExpr
     (ArrayType (TupleType (FloatType) (IntType)) 1)
     p
     (VarExpr (IntType) k)
     (TupleLiteralExpr
      (TupleType (FloatType) (IntType))
      (VarExpr (FloatType) g)
      (VarExpr (IntType) l))))
   (VarExpr (IntType) argnum))
  1))
(AssertCmd (TrueExpr (BoolType)) "q")
(ReadCmd
 "q.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  q))
(LetCmd (ArgLValue (ArrayArgument r s)) (VarExpr (ArrayType (IntType) 1) args))
(ReadCmd
 "t.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  t))
