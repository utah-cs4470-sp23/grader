(LetCmd
 (ArgLValue (ArrayArgument a b c))
 (TupleIndexExpr
  (ArrayType (BoolType) 2)
  (IfExpr
   (TupleType (ArrayType (BoolType) 2) (BoolType))
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (IntExpr (IntType) 625) > (IntExpr (IntType) 992))
     &&
     (FalseExpr (BoolType))))
   (TupleLiteralExpr
    (TupleType (ArrayType (BoolType) 2) (BoolType))
    (ArrayLoopExpr
     (ArrayType (BoolType) 2)
     a
     (VarExpr (IntType) argnum)
     b
     (BinopExpr (IntType) (IntExpr (IntType) 708) % (VarExpr (IntType) argnum))
     (FalseExpr (BoolType)))
    (FalseExpr (BoolType)))
   (TupleLiteralExpr
    (TupleType (ArrayType (BoolType) 2) (BoolType))
    (ArrayLoopExpr
     (ArrayType (BoolType) 2)
     a
     (UnopExpr (IntType) - (IntExpr (IntType) 201))
     b
     (UnopExpr (IntType) - (IntExpr (IntType) 892))
     (FalseExpr (BoolType)))
    (BinopExpr
     (BoolType)
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 15))
     !=
     (SumLoopExpr (IntType) a (IntExpr (IntType) 514) (VarExpr (IntType) a)))))
  0))
(LetCmd (ArgLValue (ArrayArgument d e f)) (VarExpr (ArrayType (BoolType) 2) a))
(LetCmd
 (ArgLValue (VarArgument (BoolType) g))
 (UnopExpr (BoolType) ! (FalseExpr (BoolType))))
(LetCmd
 (TupleLValue (ArgLValue (VarArgument (IntType) h)))
 (TupleIndexExpr
  (TupleType (IntType))
  (IfExpr
   (TupleType (TupleType (IntType)))
   (BinopExpr
    (BoolType)
    (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 61))
    >
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 62))))
   (TupleLiteralExpr
    (TupleType (TupleType (IntType)))
    (IfExpr
     (TupleType (IntType))
     (TrueExpr (BoolType))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) c))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) f))))
   (IfExpr
    (TupleType (TupleType (IntType)))
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (IntType) (BoolType))
      (VarExpr (IntType) b)
      (VarExpr (BoolType) g))
     1)
    (TupleLiteralExpr
     (TupleType (TupleType (IntType)))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) c)))
    (TupleLiteralExpr
     (TupleType (TupleType (IntType)))
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) c)))))
  0))
(LetCmd
 (TupleLValue)
 (TupleIndexExpr
  (TupleType)
  (TupleIndexExpr
   (TupleType (BoolType) (TupleType))
   (TupleLiteralExpr
    (TupleType
     (FloatType)
     (TupleType (BoolType) (TupleType))
     (ArrayType (ArrayType (ArrayType (IntType) 1) 1) 2))
    (FloatExpr (FloatType) 71)
    (TupleLiteralExpr
     (TupleType (BoolType) (TupleType))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (TupleLiteralExpr (TupleType)))
    (ArrayLoopExpr
     (ArrayType (ArrayType (ArrayType (IntType) 1) 1) 2)
     i
     (VarExpr (IntType) f)
     j
     (VarExpr (IntType) c)
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 1) 1)
      k
      (IntExpr (IntType) 828)
      (VarExpr (ArrayType (IntType) 1) args))))
   1)
  1))
(LetCmd (ArgLValue (ArrayArgument i j k)) (VarExpr (ArrayType (BoolType) 2) a))
(LetCmd (TupleLValue) (TupleLiteralExpr (TupleType)))
(ShowCmd (FloatExpr (FloatType) 75))
(ShowCmd
 (CallExpr
  (FloatType)
  asin
  (CallExpr
   (FloatType)
   cos
   (CallExpr
    (FloatType)
    pow
    (CallExpr (FloatType) exp (FloatExpr (FloatType) 17))
    (UnopExpr
     (FloatType)
     -
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 15)))))))
(ReadCmd
 "l.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  l))
(AssertCmd
 (BinopExpr (BoolType) (TrueExpr (BoolType)) || (VarExpr (BoolType) g))
 "m")
(LetCmd
 (ArgLValue (VarArgument (FloatType) m))
 (CallExpr
  (FloatType)
  asin
  (CallExpr
   (FloatType)
   cos
   (CallExpr
    (FloatType)
    log
    (CallExpr
     (FloatType)
     acos
     (CallExpr (FloatType) log (FloatExpr (FloatType) 49)))))))
