fn a({  }, b : int, c[d, e, f] : float[,,]) : {float} {
  let {} = (array[g : (if true then (argnum / (- d)) else (if true then f else d)), h : to_int((sum[g : (f / e), h : (argnum * e)] 19.39)), i : (to_int(to_float(argnum)) % (array[g : argnum] b)[(- d)])] (array[j : e, k : i] {})[(if (i < h) then f else (- g)), (array[j : h, k : d] b)[i, d]])[(array[g : b] {f})[(- (sum[g : argnum, h : f] f))]{0}, e, (array[g : d, h : f] {d, e, argnum})[(- e), to_int(atan2(60.87, 29.32))]{0}]
  let {g} = {[{e}]}{0}[(if (array[g : f] false)[e] then (if (argnum <= d) then (array[g : 95, h : b] h) else (array[g : b, h : e] g)) else (array[g : argnum, h : 801] 1))[((- (sum[g : e, h : 244] f)) * 250), 880]]
  assert {d, (if (e < d) then (array[h : d, i : b, j : argnum] false) else (array[h : g, i : 340, j : b] false)), acos(41.39)}{1}[to_int(pow(atan(acos(46.4)), acos(44.93))), e, argnum], "h"
  let {h, i} = (if ((! true) || false) then (array[h : to_int(sin(93.55)), i : (array[h : b, i : f] 285)[argnum, g], j : {argnum}{0}] (if true then {h, f} else {h, argnum})) else (if (! (! true)) then (array[h : f, i : (d / 879), j : (- 517)] {f, e}) else (array[h : (g % f), i : b, j : (- argnum)] {h, 393})))[(- (sum[h : (- (f + f))] e)), to_int(exp((sum[h : d] exp(12.24)))), (b - (sum[h : (if true then (sum[h : f] d) else (if false then d else e))] 49))]
  return (if (if false then {b, (true && true), (i <= g)} else {(if false then e else 705), (argnum == d), (! true)}){2} then {sin((atan(48.49) % exp(28.58)))} else a((if {true, c}{0} then (if false then (if true then {} else {}) else {}) else {{}}{0}), e, (if false then (array[j : h, k : to_int(39.42), l : e] asin(73.87)) else (array[j : e, k : g, l : d] c)[g, g, argnum])))
}

let b = atan(atan2(pow(tan(20.41), 92.17), asin(sin(atan(54.11)))))
fn c() : {float[],{},int} {
  assert (array[d : (sum[d : (if false then argnum else 84), e : to_int(b)] 270), e : ((sum[d : 519, e : argnum] 522) * (- argnum))] (array[f : (- 813), g : (if true then 542 else 96), h : (sum[f : e, g : argnum, h : argnum] d)] true))[(argnum + {false, argnum}{1}), 305][((- (sum[d : (- 168)] 852)) % argnum), to_int(to_float(argnum)), argnum], "d"
  let {d, e[f, g], h[i]} = [{(acos(94.38) > tan(b)), (array[d : (- argnum), e : (argnum * 196)] 2.66), args}, {((! true) || true), (array[d : argnum, e : 398] acos(76.89)), [(argnum % 415)]}][argnum]
  assert (asin(exp(tan(cos(b)))) >= 57.08), "j"
  return {(if (! (if d then d else (i <= 134))) then (array[j : (- (sum[j : argnum, k : 115] 746))] b) else (if true then [atan2(b, b)] else [to_float(445)])), (if d then {} else (if ((- argnum) < argnum) then {} else (if true then {} else {}))), argnum}
  return {(if (if (array[j : f, k : f, l : f] d)[h[g], g, (- argnum)] then false else (d && d)) then (array[j : i] acos(to_float(g))) else (if d then [asin(b), 85.64, to_float(f)] else [exp(3.15), log(38.64)])), (if (if (argnum > f) then (f < argnum) else (42.91 > b)) then (if (if false then d else d) then {args, {}} else {h, {}}) else {args, (if d then {} else {})}){1}, to_int(b)}
}

fn d(e : bool, f : int) : {} {
  let {g, h, {i[j, k, l], m[n, o, p], q}} = {to_float((- (- argnum))), (if (b == exp(sin(39.76))) then log((- log(50.49))) else (if e then cos(pow(1.51, 20.14)) else (array[g : f] 8.94)[f])), {(array[g : f, h : argnum, i : args[argnum]] (array[j : f, k : h, l : f] b))[to_int(69.61), to_int(sqrt(62.58)), to_int(to_float(argnum))], {atan(b), (array[g : argnum, h : f, i : 212] i)}{1}, log(asin(69.43))}}
  let {} = (if true then (array[r : l] (array[s : p, t : 360] {}))[(sum[r : to_int(g)] (r - r))][l, f] else (array[r : p] {{}, o})[p]{0})
  return {}
  let {{{r, s[t, u], v[w, x, y]}, z[A, B], {}}, C} = {{{tan(g), (if (n == argnum) then (array[r : argnum, s : p] argnum) else (array[r : l, s : l] k)), m}, {m, args, (array[r : l, s : n] g)}{2}, (array[r : n, s : f, t : (- j)] d(e, k))[{p, q, false}{0}, n, n]}, atan2(i[o, f, n], cos(pow(sin(h), b)))}
}

let e[f, g, h] = (array[e : (if false then (if (argnum != 281) then ((750 * 840) * 478) else 265) else (if (! false) then (array[e : argnum, f : 203] e) else (array[e : 788, f : argnum] argnum))[to_int(tan(36.03)), 144]), f : (sum[e : (if true then {argnum}{0} else (argnum * to_int(b))), f : (if true then {{}, 658, 199}{1} else argnum)] e), g : (if (if (! true) then false else (26.49 >= log(b))) then ((- argnum) * argnum) else to_int(tan(to_float(95))))] pow(sqrt(b), ({b, f, e}{0} % b)))
fn i() : int {
  let j = ((if (false && (if (true && false) then true else false)) then ((if (false || true) then true else (! true)) || true) else ((if true then i() else 759) != (if (argnum <= 327) then (sum[j : h, k : i(), l : 43] j) else (if true then g else h)))) && (! (tan(asin(b)) >= (if (g >= argnum) then atan2(b, b) else sqrt(b)))))
  return {pow(sqrt(cos(59.49)), atan(tan(b))), i(), e}{1}
  let k[l, m] = {a((if (! j) then {} else d(true, f)), i(), (if (j == true) then e else e)), (array[k : (sum[k : i(), l : f, m : 428] f), l : (- f), m : (- i())] (array[n : k, o : m] 459))[h, h, argnum], b}{1}
  let n[o] = {h, (if true then (array[n : m] atan(8.53)) else [39.71])}{1}
  return g
}

let j = i()
fn k({  }, l : float, m[n] : bool[,][]) : bool {
  let o[p, q, r] = {[(sum[o : h, p : (g - f)] pow(98.8, l))], (if (i() > j) then {true, e} else {true, e}){1}}{1}
  assert (if k({{}, r}{0}, b, [(if (false && true) then (array[s : j, t : 784] false) else m[q]), (array[s : 596, t : j] (! false)), (array[s : (n + f), t : q] k({}, b, m))]) then true else (array[s : h, t : (f * to_int(b)), u : n] ((false && true) == false))[813, (if (argnum != i()) then {b, r} else {97.93, i()}){1}, f]), "s"
  return (argnum >= (- r))
  let {} = (if k((array[s : n, t : r, u : j] {})[argnum, c(){2}, g], 6.07, m) then (array[s : argnum, t : n, u : g] (if (g == i()) then {} else {})) else (array[s : argnum, t : (sum[s : g, t : (sum[s : q, t : i(), u : f] f), u : 722] (- u)), u : (649 * 270)] {}))[(- f), (if (if (! (i() == n)) then (if (317 <= argnum) then k({}, l, m) else (b != l)) else k({}, asin(l), m)) then to_int(exp(b)) else g), (sum[s : 269] 600)]
  return (to_float(j) <= l)
}

let {l} = a({}, args[g], e)
let m[n, o] = (array[m : (if (array[m : j, n : to_int(l), o : argnum] (i() == h))[to_int(cos(b)), g, argnum] then (sum[m : (sum[m : h] (- f)), n : {argnum, g, 857}{0}] argnum) else (- (array[m : g, n : argnum, o : f] 632)[(h % argnum), j, to_int(b)])), n : to_int(exp(a({}, 983, e){0}))] ((array[o : m, p : (sum[o : f, p : i()] m), q : argnum] true)[n, j, m] && (true == (! true))))
let p = sqrt(to_float(c(){2}))
let {} = (if {(p < l)}{0} then (array[q : (i() / 450), r : (if m[j, h] then (sum[q : g, r : j, s : n] h) else h)] {{}}{0}) else (if (asin(p) <= asin(l)) then (if (777 != n) then (array[q : 400, r : j] {}) else (array[q : 223, r : j] {})) else (array[q : 680, r : j] {})))[o, f]
