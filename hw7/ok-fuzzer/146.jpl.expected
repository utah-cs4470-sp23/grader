(TimeCmd
 (ShowCmd
  (CallExpr
   (FloatType)
   atan2
   (FloatExpr (FloatType) 27)
   (CallExpr
    (FloatType)
    tan
    (CallExpr (FloatType) to_float (IntExpr (IntType) 334))))))
(LetCmd
 (TupleLValue
  (TupleLValue
   (ArgLValue (ArrayArgument a b))
   (ArgLValue (ArrayArgument c d e f)))
  (ArgLValue (ArrayArgument g h i))
  (TupleLValue))
 (TupleLiteralExpr
  (TupleType
   (TupleType (ArrayType (IntType) 1) (ArrayType (IntType) 3))
   (ArrayType (FloatType) 2)
   (TupleType))
  (TupleLiteralExpr
   (TupleType (ArrayType (IntType) 1) (ArrayType (IntType) 3))
   (VarExpr (ArrayType (IntType) 1) args)
   (TupleIndexExpr
    (ArrayType (IntType) 3)
    (TupleLiteralExpr
     (TupleType (ArrayType (IntType) 3))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      a
      (VarExpr (IntType) argnum)
      b
      (VarExpr (IntType) argnum)
      c
      (IntExpr (IntType) 754)
      (VarExpr (IntType) argnum)))
    0))
  (TupleIndexExpr
   (ArrayType (FloatType) 2)
   (TupleLiteralExpr
    (TupleType (ArrayType (FloatType) 2))
    (ArrayLoopExpr
     (ArrayType (FloatType) 2)
     a
     (IntExpr (IntType) 295)
     b
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (IntExpr (IntType) 723)
      (VarExpr (IntType) argnum))
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 47))))
   0)
  (TupleIndexExpr
   (TupleType)
   (TupleLiteralExpr
    (TupleType (FloatType) (BoolType) (TupleType))
    (CallExpr (FloatType) acos (FloatExpr (FloatType) 12))
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 0))
     >
     (FloatExpr (FloatType) 79))
    (ArrayIndexExpr
     (TupleType)
     (ArrayLoopExpr
      (ArrayType (TupleType) 1)
      a
      (IntExpr (IntType) 851)
      (TupleLiteralExpr (TupleType)))
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (IntExpr (IntType) 647)
      (VarExpr (IntType) argnum))))
   2)))
(WriteCmd
 (ArrayLoopExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  j
  (BinopExpr
   (IntType)
   (BinopExpr (IntType) (VarExpr (IntType) i) - (IntExpr (IntType) 376))
   +
   (TupleIndexExpr
    (IntType)
    (TupleLiteralExpr
     (TupleType (IntType))
     (BinopExpr (IntType) (VarExpr (IntType) b) % (VarExpr (IntType) d)))
    0))
  k
  (UnopExpr
   (IntType)
   -
   (SumLoopExpr (IntType) j (VarExpr (IntType) e) (VarExpr (IntType) i)))
  (IfExpr
   (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) h) == (VarExpr (IntType) b))
     &&
     (BinopExpr (BoolType) (VarExpr (IntType) argnum) > (VarExpr (IntType) b)))
    ==
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (BoolType) (ArrayType (IntType) 3) (ArrayType (FloatType) 2))
      (TrueExpr (BoolType))
      (VarExpr (ArrayType (IntType) 3) c)
      (VarExpr (ArrayType (FloatType) 2) g))
     0))
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
    (CallExpr
     (FloatType)
     atan
     (SumLoopExpr
      (FloatType)
      l
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 39)))
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 55)))
    (CallExpr
     (FloatType)
     cos
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 94)))
    (UnopExpr (FloatType) - (FloatExpr (FloatType) 10)))
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
    (CallExpr
     (FloatType)
     cos
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 41)))
    (SumLoopExpr
     (FloatType)
     l
     (VarExpr (IntType) j)
     m
     (VarExpr (IntType) argnum)
     (FloatExpr (FloatType) 65))
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) to_float (IntExpr (IntType) 856)))
    (CallExpr
     (FloatType)
     acos
     (CallExpr
      (FloatType)
      pow
      (FloatExpr (FloatType) 16)
      (FloatExpr (FloatType) 6))))))
 "j.png")
(LetCmd
 (ArgLValue (ArrayArgument j k l))
 (ArrayIndexExpr
  (ArrayType (FloatType) 2)
  (TupleIndexExpr
   (ArrayType (ArrayType (FloatType) 2) 2)
   (TupleLiteralExpr
    (TupleType (ArrayType (IntType) 1) (ArrayType (ArrayType (FloatType) 2) 2))
    (VarExpr (ArrayType (IntType) 1) args)
    (ArrayLoopExpr
     (ArrayType (ArrayType (FloatType) 2) 2)
     j
     (VarExpr (IntType) e)
     k
     (IntExpr (IntType) 409)
     (IfExpr
      (ArrayType (FloatType) 2)
      (FalseExpr (BoolType))
      (VarExpr (ArrayType (FloatType) 2) g)
      (VarExpr (ArrayType (FloatType) 2) g))))
   1)
  (IfExpr
   (IntType)
   (TupleIndexExpr
    (BoolType)
    (IfExpr
     (TupleType (BoolType))
     (BinopExpr (BoolType) (VarExpr (IntType) f) > (VarExpr (IntType) f))
     (TupleLiteralExpr (TupleType (BoolType)) (TrueExpr (BoolType)))
     (TupleLiteralExpr (TupleType (BoolType)) (FalseExpr (BoolType))))
    0)
   (VarExpr (IntType) d)
   (ArrayIndexExpr
    (IntType)
    (VarExpr (ArrayType (IntType) 3) c)
    (VarExpr (IntType) e)
    (VarExpr (IntType) i)
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 17)))))
  (VarExpr (IntType) i)))
(ShowCmd (VarExpr (ArrayType (FloatType) 2) j))
(AssertCmd
 (BinopExpr
  (BoolType)
  (IfExpr
   (IntType)
   (FalseExpr (BoolType))
   (VarExpr (IntType) k)
   (CallExpr
    (IntType)
    to_int
    (CallExpr
     (FloatType)
     atan2
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 42))
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 91)))))
  >
  (VarExpr (IntType) i))
 "m")
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument (IntType) m))
  (ArgLValue (ArrayArgument n o p q)))
 (TupleLiteralExpr
  (TupleType (IntType) (ArrayType (IntType) 3))
  (VarExpr (IntType) d)
  (ArrayIndexExpr
   (ArrayType (IntType) 3)
   (IfExpr
    (ArrayType (ArrayType (IntType) 3) 3)
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (VarExpr (IntType) d) > (VarExpr (IntType) d)))
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 3) 3)
     m
     (VarExpr (IntType) l)
     n
     (VarExpr (IntType) h)
     o
     (VarExpr (IntType) e)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      p
      (VarExpr (IntType) h)
      q
      (VarExpr (IntType) e)
      r
      (VarExpr (IntType) n)
      (VarExpr (IntType) b)))
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 3) 3)
     m
     (UnopExpr (IntType) - (VarExpr (IntType) k))
     n
     (VarExpr (IntType) i)
     o
     (SumLoopExpr
      (IntType)
      m
      (VarExpr (IntType) d)
      n
      (VarExpr (IntType) d)
      (VarExpr (IntType) i))
     (VarExpr (ArrayType (IntType) 3) c)))
   (VarExpr (IntType) k)
   (SumLoopExpr
    (IntType)
    m
    (SumLoopExpr
     (IntType)
     m
     (SumLoopExpr
      (IntType)
      m
      (IntExpr (IntType) 982)
      n
      (VarExpr (IntType) b)
      (VarExpr (IntType) f))
     n
     (VarExpr (IntType) b)
     (VarExpr (IntType) d))
    n
    (SumLoopExpr
     (IntType)
     m
     (VarExpr (IntType) argnum)
     n
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (VarExpr (IntType) i))
    o
    (VarExpr (IntType) k)
    (VarExpr (IntType) k))
   (VarExpr (IntType) argnum))))
(LetCmd
 (TupleLValue)
 (TupleIndexExpr
  (TupleType)
  (TupleLiteralExpr
   (TupleType (TupleType) (FloatType))
   (TupleIndexExpr
    (TupleType)
    (IfExpr
     (TupleType (TupleType))
     (BinopExpr (BoolType) (VarExpr (IntType) d) <= (VarExpr (IntType) l))
     (TupleLiteralExpr (TupleType (TupleType)) (TupleLiteralExpr (TupleType)))
     (TupleLiteralExpr (TupleType (TupleType)) (TupleLiteralExpr (TupleType))))
    0)
   (CallExpr
    (FloatType)
    asin
    (CallExpr
     (FloatType)
     atan
     (SumLoopExpr
      (FloatType)
      r
      (VarExpr (IntType) b)
      s
      (VarExpr (IntType) p)
      t
      (IntExpr (IntType) 548)
      (FloatExpr (FloatType) 24)))))
  0))
(PrintCmd "r")
(LetCmd (ArgLValue (VarArgument (FloatType) r)) (FloatExpr (FloatType) 45))
(LetCmd
 (ArgLValue (VarArgument (FloatType) s))
 (CallExpr
  (FloatType)
  asin
  (ArrayIndexExpr
   (FloatType)
   (ArrayLoopExpr
    (ArrayType (FloatType) 2)
    s
    (VarExpr (IntType) k)
    t
    (VarExpr (IntType) l)
    (CallExpr
     (FloatType)
     sqrt
     (CallExpr (FloatType) to_float (VarExpr (IntType) k))))
   (VarExpr (IntType) l)
   (VarExpr (IntType) q))))
(AssertCmd
 (IfExpr
  (BoolType)
  (BinopExpr
   (BoolType)
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (BoolType) (ArrayType (ArrayType (IntType) 1) 3))
     (BinopExpr (BoolType) (TrueExpr (BoolType)) || (TrueExpr (BoolType)))
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 1) 3)
      t
      (VarExpr (IntType) i)
      u
      (VarExpr (IntType) e)
      v
      (VarExpr (IntType) m)
      (VarExpr (ArrayType (IntType) 1) a)))
    0)
   &&
   (IfExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) acos (VarExpr (FloatType) r))
     ==
     (CallExpr (FloatType) atan (FloatExpr (FloatType) 6)))
    (UnopExpr
     (BoolType)
     !
     (BinopExpr
      (BoolType)
      (VarExpr (FloatType) s)
      >
      (FloatExpr (FloatType) 30)))
    (IfExpr
     (BoolType)
     (FalseExpr (BoolType))
     (BinopExpr (BoolType) (TrueExpr (BoolType)) || (TrueExpr (BoolType)))
     (BinopExpr (BoolType) (TrueExpr (BoolType)) || (FalseExpr (BoolType))))))
  (IfExpr
   (BoolType)
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (BoolType) (ArrayType (IntType) 3) (IntType))
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     (VarExpr (ArrayType (IntType) 3) c)
     (VarExpr (IntType) argnum))
    0)
   (BinopExpr (BoolType) (IntExpr (IntType) 977) > (VarExpr (IntType) q))
   (BinopExpr
    (BoolType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 3)
      t
      (VarExpr (IntType) l)
      u
      (VarExpr (IntType) l)
      v
      (VarExpr (IntType) o)
      (FalseExpr (BoolType)))
     (VarExpr (IntType) k)
     (VarExpr (IntType) d)
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) m)
      (VarExpr (IntType) m)))
    &&
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) q) <= (VarExpr (IntType) e))
     (FalseExpr (BoolType))
     (BinopExpr (BoolType) (FalseExpr (BoolType)) != (TrueExpr (BoolType))))))
  (BinopExpr (BoolType) (VarExpr (IntType) o) < (VarExpr (IntType) e)))
 "t")
