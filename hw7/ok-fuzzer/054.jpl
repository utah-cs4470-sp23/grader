let a[b] = {args, (true != (false && false)), ((if false then (- argnum) else to_int(15.36)) >= 828)}{0}
let c = {}
let d[e, f, g] = (array[d : {(b * b)}{0}, e : to_int(sin(acos(15.24))), f : b] (array[g : e, h : (if false then b else f)] (array[i : e, j : h, k : d] i))[(if (e > d) then argnum else 859), f])[(if (! (true || true)) then (- (if (! true) then (- 984) else argnum)) else to_int(asin(to_float(b)))), (array[d : argnum, e : argnum, f : {31, 116}{0}] (sum[g : 7] 82))[b, (array[d : b, e : b, f : 165] (if true then f else d))[(- b), to_int((- 30.01)), to_int(cos(0.21))], to_int(atan(to_float(b)))], to_int(sqrt((if false then cos(66.78) else acos(76.34))))]
let {{h[i], j, k}, l, {}} = (if (false == (true || (g >= e))) then (array[h : e, i : ((if false then e else argnum) % a[931])] {{a, 49.9, b}, (! false), (if true then {} else c)}) else (array[h : (e - argnum), i : (- (- 703))] {{args, 71.97, e}, true, {}}))[argnum, (- (if (! (g > b)) then (- (sum[h : argnum] f)) else argnum))]
let m = g
show sqrt((log(atan((- j))) + exp(j)))

let n = l
let o = asin(cos(cos(to_float(429))))
let p = argnum
let {} = (array[q : e, r : i, s : g] (if (l || l) then {c, m, 665} else {{}, q, 283}))[argnum, (if l then m else b), g]{0}
let q[r] = (array[q : (if ((- k) < f) then {n, a, a[e]} else (if l then {l, args, m} else {l, args, argnum})){2}] to_int(o))
let {{s[t], u, {}}} = (if n then {{{args, m, {}}}} else {{{q, 613, {}}}}){0}
