(LetCmd (ArgLValue (VarArgument a)) (VarExpr (ArrayType (IntType) 1) args))
(LetCmd
 (ArgLValue (ArrayArgument b c))
 (IfExpr
  (ArrayType (IntType) 1)
  (BinopExpr
   (BoolType)
   (IfExpr
    (IntType)
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (FalseExpr (BoolType)) && (TrueExpr (BoolType)))
     (FalseExpr (BoolType))
     (TrueExpr (BoolType)))
    (IntExpr (IntType) 404)
    (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
   ==
   (ArrayIndexExpr
    (IntType)
    (ArrayLiteralExpr
     (ArrayType (IntType) 1)
     (BinopExpr (IntType) (VarExpr (IntType) argnum) % (IntExpr (IntType) 109)))
    (UnopExpr
     (IntType)
     -
     (BinopExpr (IntType) (IntExpr (IntType) 937) + (VarExpr (IntType) argnum)))))
  (ArrayIndexExpr
   (ArrayType (IntType) 1)
   (ArrayLoopExpr
    (ArrayType (ArrayType (IntType) 1) 2)
    b
    (VarExpr (IntType) argnum)
    c
    (BinopExpr
     (IntType)
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 40))
     /
     (SumLoopExpr
      (IntType)
      b
      (VarExpr (IntType) argnum)
      c
      (IntExpr (IntType) 193)
      (VarExpr (IntType) b)))
    (VarExpr (ArrayType (IntType) 1) a))
   (IfExpr
    (IntType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      b
      (IntExpr (IntType) 12)
      c
      (VarExpr (IntType) argnum)
      (TrueExpr (BoolType)))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) argnum)))
    (IfExpr
     (IntType)
     (FalseExpr (BoolType))
     (IntExpr (IntType) 16)
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 1) args)
      (IntExpr (IntType) 494)))
    (IntExpr (IntType) 313))
   (VarExpr (IntType) argnum))
  (IfExpr
   (ArrayType (IntType) 1)
   (BinopExpr
    (BoolType)
    (IfExpr
     (FloatType)
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      <=
      (VarExpr (IntType) argnum))
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 4))
     (FloatExpr (FloatType) 56))
    !=
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 74))))
   (TupleIndexExpr
    (ArrayType (IntType) 1)
    (IfExpr
     (TupleType (ArrayType (IntType) 1) (ArrayType (IntType) 1))
     (BinopExpr (BoolType) (FalseExpr (BoolType)) != (FalseExpr (BoolType)))
     (TupleLiteralExpr
      (TupleType (ArrayType (IntType) 1) (ArrayType (IntType) 1))
      (VarExpr (ArrayType (IntType) 1) args)
      (VarExpr (ArrayType (IntType) 1) a))
     (TupleLiteralExpr
      (TupleType (ArrayType (IntType) 1) (ArrayType (IntType) 1))
      (VarExpr (ArrayType (IntType) 1) a)
      (VarExpr (ArrayType (IntType) 1) args)))
    0)
   (ArrayLiteralExpr
    (ArrayType (IntType) 1)
    (SumLoopExpr
     (IntType)
     b
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 16))
     (VarExpr (IntType) argnum))
    (IntExpr (IntType) 682)
    (UnopExpr
     (IntType)
     -
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 980)))))))
(LetCmd
 (ArgLValue (VarArgument d))
 (UnopExpr
  (FloatType)
  -
  (CallExpr
   (FloatType)
   tan
   (IfExpr
    (FloatType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 1)
      d
      (VarExpr (IntType) argnum)
      (TrueExpr (BoolType)))
     (SumLoopExpr
      (IntType)
      d
      (VarExpr (IntType) c)
      e
      (VarExpr (IntType) c)
      (VarExpr (IntType) argnum)))
    (CallExpr
     (FloatType)
     atan
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 35)))
    (IfExpr
     (FloatType)
     (TrueExpr (BoolType))
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum))
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 77)))))))
(LetCmd
 (ArgLValue (VarArgument e))
 (CallExpr
  (FloatType)
  cos
  (CallExpr
   (FloatType)
   atan
   (CallExpr
    (FloatType)
    sin
    (CallExpr
     (FloatType)
     acos
     (CallExpr (FloatType) asin (VarExpr (FloatType) d)))))))
(LetCmd
 (ArgLValue (ArrayArgument f g h i))
 (TupleIndexExpr
  (ArrayType (IntType) 3)
  (TupleLiteralExpr
   (TupleType (FloatType) (ArrayType (IntType) 3) (BoolType))
   (CallExpr
    (FloatType)
    pow
    (CallExpr (FloatType) tan (UnopExpr (FloatType) - (VarExpr (FloatType) e)))
    (CallExpr
     (FloatType)
     acos
     (CallExpr
      (FloatType)
      atan2
      (FloatExpr (FloatType) 79)
      (VarExpr (FloatType) e))))
   (ArrayLoopExpr
    (ArrayType (IntType) 3)
    f
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 1)
      f
      (IntExpr (IntType) 619)
      (IntExpr (IntType) 700))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum)))
    g
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) asin (VarExpr (FloatType) d)))
    h
    (VarExpr (IntType) argnum)
    (VarExpr (IntType) g))
   (TrueExpr (BoolType)))
  1))
(LetCmd
 (ArgLValue (VarArgument j))
 (CallExpr
  (FloatType)
  log
  (CallExpr
   (FloatType)
   tan
   (SumLoopExpr
    (FloatType)
    j
    (UnopExpr
     (IntType)
     -
     (BinopExpr (IntType) (VarExpr (IntType) c) * (VarExpr (IntType) argnum)))
    k
    (IntExpr (IntType) 569)
    (FloatExpr (FloatType) 19)))))
(AssertCmd
 (UnopExpr
  (BoolType)
  !
  (BinopExpr
   (BoolType)
   (IfExpr
    (BoolType)
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (VarExpr (IntType) g) != (VarExpr (IntType) c)))
    (UnopExpr (BoolType) ! (UnopExpr (BoolType) ! (TrueExpr (BoolType))))
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (IntType) (BoolType))
      (VarExpr (IntType) argnum)
      (FalseExpr (BoolType)))
     1))
   &&
   (BinopExpr
    (BoolType)
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      k
      (VarExpr (IntType) h)
      l
      (VarExpr (IntType) h)
      (FalseExpr (BoolType)))
     (UnopExpr (IntType) - (VarExpr (IntType) g))
     (VarExpr (IntType) h))
    &&
    (FalseExpr (BoolType)))))
 "k")
(TimeCmd
 (TimeCmd
  (AssertCmd
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) c) != (IntExpr (IntType) 625))
     !=
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      >=
      (IntExpr (IntType) 426))))
   "k")))
(LetCmd (ArgLValue (VarArgument k)) (TupleLiteralExpr (TupleType)))
(LetCmd
 (TupleLValue)
 (IfExpr
  (TupleType)
  (BinopExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (CallExpr
     (FloatType)
     asin
     (CallExpr (FloatType) cos (VarExpr (FloatType) d)))
    ==
    (FloatExpr (FloatType) 15))
   &&
   (BinopExpr
    (BoolType)
    (VarExpr (FloatType) d)
    !=
    (BinopExpr
     (FloatType)
     (FloatExpr (FloatType) 18)
     /
     (FloatExpr (FloatType) 81))))
  (ArrayIndexExpr
   (TupleType)
   (ArrayLoopExpr
    (ArrayType (TupleType) 2)
    l
    (VarExpr (IntType) i)
    m
    (UnopExpr (IntType) - (VarExpr (IntType) c))
    (TupleLiteralExpr (TupleType)))
   (IfExpr
    (IntType)
    (FalseExpr (BoolType))
    (VarExpr (IntType) g)
    (CallExpr (IntType) to_int (VarExpr (FloatType) e)))
   (IntExpr (IntType) 168))
  (IfExpr
   (TupleType)
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (SumLoopExpr (IntType) l (VarExpr (IntType) i) (VarExpr (IntType) c))
     ==
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))))
   (ArrayIndexExpr
    (TupleType)
    (IfExpr
     (ArrayType (TupleType) 1)
     (BinopExpr (BoolType) (VarExpr (IntType) i) < (VarExpr (IntType) h))
     (ArrayLoopExpr
      (ArrayType (TupleType) 1)
      l
      (VarExpr (IntType) argnum)
      (VarExpr (TupleType) k))
     (ArrayLiteralExpr
      (ArrayType (TupleType) 1)
      (VarExpr (TupleType) k)
      (VarExpr (TupleType) k)
      (TupleLiteralExpr (TupleType))))
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (IntType) (BoolType))
      (VarExpr (IntType) argnum)
      (TrueExpr (BoolType)))
     0))
   (VarExpr (TupleType) k))))
(LetCmd (ArgLValue (ArrayArgument l m)) (VarExpr (ArrayType (IntType) 1) args))
(LetCmd (ArgLValue (VarArgument n)) (VarExpr (IntType) g))
