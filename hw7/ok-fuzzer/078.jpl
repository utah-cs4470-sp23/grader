let {} = {}
print "a"

fn a(b[c, d] : float[,]) : bool {
  assert ((if (a(b) && (if (! false) then true else (false && true))) then (- argnum) else d) != d), "e"
  let {e, f[g, h], i[j, k]} = {{{args, b, b}, (- 90.91)}{0}}{0}
  return {h, f, {(true && true), e, e}}{2}{0}
  let {l, m[n]} = (if (array[l : (array[l : g, m : d, n : c] c)[d, (sum[l : k] argnum), d], m : {h}{0}, n : (- c)] (a(b) || (m != j)))[g, k, [j][argnum]] then (if (to_int(to_float(126)) == (if (c <= c) then (sum[l : g] d) else c)) then (if (4.38 > 28.43) then (if false then {c, e} else {d, e}) else {(- d), args}) else (array[l : k, m : (sum[l : g, m : g, n : d] l)] {k, args})[e[(j + h)], g]) else (if true then (array[l : (argnum % h), m : j] {d, args})[[g, 339][(if true then c else c)], h] else {{j, args}}{0}))
  return ((if (! false) then (sin(acos(34.54)) <= (sum[o : g, p : n] 25.46)) else false) == (array[o : g, p : g] (array[q : h, r : o, s : g] false))[c, (- (sum[o : 817] l))][(- h), n, (j % argnum)])
}

assert ((if a((array[b : (sum[b : argnum, c : argnum] b), c : 716] to_float(argnum))) then to_float((sum[b : 948] (sum[c : b, d : argnum] 561))) else atan(log(to_float(argnum)))) > (- pow(tan(to_float(926)), (- to_float(argnum))))), "b"
fn b({ { c : int, d[e] : bool[], f[g] : {float}[] }, h[i, j, k] : int[,,] }, { l[m, n, o] : float[,][,,] }, {  }) : {bool} {
  let p = to_int(pow(to_float(e), exp(tan(to_float(g)))))
  return (if (if (if true then (o <= m) else (if true then true else false)) then (array[q : j, r : (e / j), s : o] (! false)) else (array[q : g, r : argnum, s : n] (m != g)))[(n - k), j, c] then {(! (! (if false then true else true)))} else (array[q : p, r : n, s : n] {(93.19 <= 14.78)})[n, g, 480])
  assert ([(n >= (sum[q : p, r : m] g))][688] == (if (array[q : e, r : c, s : 759] true)[argnum, p, j] then {(n <= c), (array[q : m] l), (false || false)} else {false, [l, l], (g < e)}){2}), "q"
  let q[r] = [i, e]
  return (if {k, h, (c != i)}{2} then {{(c <= e)}} else {{d[j]}}){0}
}

assert ((if (if (! true) then true else (92.28 >= 75.61)) then {to_float(argnum), (sum[c : 618] 25.29), cos(45.75)} else {to_float(argnum), (sum[c : 579, d : argnum] 54.97), acos(42.96)}){1} == exp(atan(sqrt(tan(1.67))))), "c"
read "c.png" to c

print "d"

time assert ((781 != (sum[d : (- argnum)] d)) || true), "d"

let d[e, f] = (if a((array[d : (if (argnum != argnum) then to_int(57.58) else (- argnum)), e : argnum] atan(exp(97.67)))) then (array[d : (if true then {argnum, true, argnum} else {argnum, false, 316}){0}, e : to_int((array[d : argnum, e : argnum, f : 778] 24.9)[914, (401 * argnum), to_int(1.29)])] exp(log(sqrt(1.41)))) else (if (array[d : (- argnum), e : 0] (853 != argnum))[(to_int(97.21) * (sum[d : 843, e : 759, f : 52] argnum)), 531] then (if {false, argnum}{0} then (array[d : 817, e : argnum] (sum[f : 167, g : argnum] 97.85)) else (array[d : 394, e : (- argnum)] to_float(argnum))) else (array[d : argnum, e : (- (- 854))] (- 42.93))))
let {g[h], {i}, j} = {{(array[g : f, h : f, i : argnum] (array[j : e, k : i, l : argnum] k)), args}{1}, (array[g : (array[g : 240, h : f, i : f] e)[(if false then f else 642), (- argnum), 287]] (if (31.04 == 50.42) then {980} else {f}))[{e}{0}], d}
write (if a((array[k : (- f), l : (e / i), m : i] d)[argnum, 979, (array[k : i, l : e, m : e] e)[(- h), (e / e), (h % argnum)]]) then {log(64.12), {c, g}, argnum}{1}{0} else c) to "k.png"

