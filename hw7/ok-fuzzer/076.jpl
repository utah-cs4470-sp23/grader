fn a(b[c] : bool[][]) : bool {
  let d[e, f] = {(array[d : (if false then 85 else argnum), e : 787, f : argnum] (array[g : 351, h : f] 932))[(if (! false) then (- c) else args[238]), {589, 253}{0}, {argnum, c}{0}], args}{0}
  return ((! (! false)) && true)
  let g = pow(acos(atan((log(30.39) * 98.68))), (if ({f, c}{1} <= (- 971)) then log(atan2(exp(35.97), 87.3)) else asin(acos((sum[g : 742, h : e, i : 428] 38.43)))))
  assert (sqrt(acos((- 90.22))) == (if ((! false) && true) then (array[h : f, i : e, j : 270] asin(55.7)) else (array[h : 675, i : (if true then 241 else 720), j : (- f)] asin(85.32)))[(- (- args[argnum])), (if (958 != argnum) then {argnum, 946, e} else {argnum, 719, argnum}){1}, to_int({61.88, d, c}{0})]), "h"
  return (a((array[h : c] [(argnum <= h)])) == (array[h : (f / e)] (array[i : e, j : h] true))[(sum[h : (sum[h : c] f), i : (c / argnum), j : args[argnum]] 373)][f, c])
}

let {b[c]} = {argnum, {{args}, 33.66}}{1}{0}
fn d() : {} {
  let e[f, g] = (array[e : (- (if true then (- argnum) else argnum)), f : {(- c), c, 39.69}{0}, g : (sum[e : argnum, f : 452, g : (sum[e : (c - c), f : argnum, g : argnum] g)] {argnum, d(), b}{0})] (array[h : (if (! false) then e else (sum[h : f] 860)), i : argnum] {}))[b[615], ((argnum * (if (! false) then 978 else 636)) - to_int(atan(35.41))), (((sum[e : (897 % 932)] (314 - e)) + argnum) + to_int((array[e : argnum, f : argnum] 35.18)[(- 604), (sum[e : argnum, f : 127] c)]))]
  return (if a((array[h : (f % argnum)] (if (g == argnum) then (array[i : 593] true) else (array[i : c] true)))) then (array[h : (sum[h : (g / f), i : (97 % c), j : (- 852)] (if true then 974 else j)), i : (- 265)] d())[(array[h : f] c)[{true, c, d()}{1}], g] else {(array[h : g, i : g, j : f] d())[289, c, (- c)], tan(tan(7.83))}{0})
  let h[i] = {(if (572 < c) then {b} else {args}), argnum, cos(64.03)}{0}{0}
  let j[k, l] = (array[j : f, k : 926] cos((tan(atan(34.24)) * {12.18}{0})))
  return (if ((sum[m : (c % g), n : ((sum[m : l] m) % i), o : {f}{0}] 645) == (sum[m : 340, n : {h, i}{1}, o : (l + 480)] (- (g + f)))) then (if (g != l) then {{}, argnum, (true && true)} else {{}, (sum[m : c, n : argnum, o : i] argnum), true}){0} else d())
}

let {e[f, g], h, i[j, k]} = (array[e : (c % (sum[e : argnum] 461))] {(array[f : argnum, g : e] g), sin(asin(54.41)), (array[f : 794, g : 898] (! false))})[(- 821)]
fn l(m[n, o, p] : float[,,]) : {bool[],float,{float,float,bool}} {
  let q = e
  let r[s] = b
  let t = tan(to_float((o + {p}{0})))
  let u = (if (! (array[u : argnum, v : k, w : s] (if false then true else true))[{f, r}{0}, 195, (sum[u : f, v : f] k)]) then s else p)
  return {{[j], l(m), args}}{0}{1}
}

let {m[n, o]} = {{args, j, h}{1}, {f, {i}}, l((array[m : g, n : f, o : j] 67.29))}{1}{1}
write (if (! {true, (array[p : f, q : g] j)}{0}) then (array[p : k, q : argnum] (if (array[r : k, s : f, t : argnum] true)[(if true then c else k), 284, f] then {(- 60.73), h, acos(52.78), to_float(k)} else {sin(18.7), sin(76.47), to_float(k), 58.15})) else (array[p : g, q : (sum[p : (o + (- 45)), q : ((c % c) * k)] k)] {to_float(argnum), exp((sum[r : o, s : c] 27.0)), pow((sum[r : f] h), cos(31.33)), cos(sin(66.66))})) to "p.png"

fn p() : int {
  let q[r, s, t] = {(array[q : (- g), r : f] (array[s : j, t : c, u : k] t))}{0}[[{541}][argnum]{0}, [{p(), g}][j]{0}]
  let u[v, w] = (if {{false, d()}, sqrt(29.01), 49}{0}{0} then i else m)
  let {x, {{y[z, A, B], C[D, E, F], G[H, I]}, J[K, L, M]}, N[O]} = (array[x : (if (! true) then {v, k, c} else {r, n, g}){1}, y : w, z : to_int(asin(h))] {args, {{q, q, m}, (array[A : s, B : w, C : x] p())}, args})[g, c, (f * to_int((sum[x : k] exp(h))))]
  let {} = d()
  return o
}

fn q({  }) : int {
  let r = n
  let s = r
  assert (asin(exp(to_float(p()))) <= (atan2((array[t : o] h)[(sum[t : k, u : g] k)], 5.55) % (array[t : 785] to_float(232))[argnum])), "t"
  let t = log(atan2((sum[t : j, u : (- q(d()))] to_float(j)), log(atan(h))))
  return c
}

let r = k
let {} = {}
let s = h
