(LetCmd
 (ArgLValue (ArrayArgument a b c))
 (TupleIndexExpr
  (ArrayType (IntType) 2)
  (TupleLiteralExpr
   (TupleType (ArrayType (IntType) 2) (IntType))
   (IfExpr
    (ArrayType (IntType) 2)
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (IntType) (FloatType) (BoolType))
      (VarExpr (IntType) argnum)
      (FloatExpr (FloatType) 26)
      (FalseExpr (BoolType)))
     2)
    (ArrayLoopExpr
     (ArrayType (IntType) 2)
     a
     (BinopExpr (IntType) (IntExpr (IntType) 480) + (IntExpr (IntType) 209))
     b
     (SumLoopExpr
      (IntType)
      a
      (IntExpr (IntType) 846)
      b
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 363))
     (VarExpr (IntType) b))
    (IfExpr
     (ArrayType (IntType) 2)
     (IfExpr
      (BoolType)
      (TrueExpr (BoolType))
      (FalseExpr (BoolType))
      (TrueExpr (BoolType)))
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      a
      (VarExpr (IntType) argnum)
      b
      (IntExpr (IntType) 904)
      (VarExpr (IntType) b))
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      a
      (VarExpr (IntType) argnum)
      b
      (IntExpr (IntType) 36)
      (IntExpr (IntType) 745))))
   (SumLoopExpr
    (IntType)
    a
    (VarExpr (IntType) argnum)
    b
    (VarExpr (IntType) argnum)
    (BinopExpr (IntType) (VarExpr (IntType) b) - (VarExpr (IntType) b))))
  0))
(PrintCmd "d")
(LetCmd
 (ArgLValue (VarArgument (FloatType) d))
 (CallExpr
  (FloatType)
  log
  (CallExpr
   (FloatType)
   cos
   (IfExpr
    (FloatType)
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType))))
    (CallExpr
     (FloatType)
     atan2
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum))
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 38)))
    (CallExpr
     (FloatType)
     exp
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 10)))))))
(LetCmd
 (ArgLValue (VarArgument (FloatType) e))
 (CallExpr
  (FloatType)
  acos
  (CallExpr
   (FloatType)
   sqrt
   (CallExpr
    (FloatType)
    sin
    (CallExpr
     (FloatType)
     sqrt
     (SumLoopExpr
      (FloatType)
      e
      (VarExpr (IntType) argnum)
      (VarExpr (FloatType) d)))))))
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument (FloatType) f))
  (ArgLValue (ArrayArgument g h i))
  (ArgLValue (VarArgument (FloatType) j)))
 (IfExpr
  (TupleType (FloatType) (ArrayType (IntType) 2) (FloatType))
  (IfExpr
   (BoolType)
   (IfExpr
    (BoolType)
    (IfExpr
     (BoolType)
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (TrueExpr (BoolType))
     (FalseExpr (BoolType)))
    (TrueExpr (BoolType))
    (ArrayIndexExpr
     (BoolType)
     (ArrayLoopExpr
      (ArrayType (BoolType) 3)
      f
      (IntExpr (IntType) 456)
      g
      (IntExpr (IntType) 260)
      h
      (VarExpr (IntType) b)
      (TrueExpr (BoolType)))
     (VarExpr (IntType) c)
     (VarExpr (IntType) c)
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 2) a)
      (IntExpr (IntType) 920)
      (IntExpr (IntType) 64))))
   (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
   (ArrayIndexExpr
    (BoolType)
    (ArrayLoopExpr
     (ArrayType (BoolType) 1)
     f
     (VarExpr (IntType) c)
     (TrueExpr (BoolType)))
    (SumLoopExpr
     (IntType)
     f
     (VarExpr (IntType) b)
     g
     (IntExpr (IntType) 141)
     (VarExpr (IntType) argnum))))
  (TupleLiteralExpr
   (TupleType (FloatType) (ArrayType (IntType) 2) (FloatType))
   (CallExpr
    (FloatType)
    atan2
    (CallExpr
     (FloatType)
     cos
     (CallExpr (FloatType) tan (VarExpr (FloatType) e)))
    (CallExpr (FloatType) to_float (VarExpr (IntType) b)))
   (ArrayIndexExpr
    (ArrayType (IntType) 2)
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 2) 3)
     f
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 60))
     g
     (IntExpr (IntType) 447)
     h
     (IntExpr (IntType) 924)
     (VarExpr (ArrayType (IntType) 2) a))
    (VarExpr (IntType) argnum)
    (VarExpr (IntType) argnum)
    (VarExpr (IntType) c))
   (CallExpr (FloatType) log (VarExpr (FloatType) d)))
  (ArrayIndexExpr
   (TupleType (FloatType) (ArrayType (IntType) 2) (FloatType))
   (ArrayLoopExpr
    (ArrayType (TupleType (FloatType) (ArrayType (IntType) 2) (FloatType)) 2)
    f
    (UnopExpr (IntType) - (VarExpr (IntType) c))
    g
    (UnopExpr (IntType) - (VarExpr (IntType) b))
    (TupleLiteralExpr
     (TupleType (FloatType) (ArrayType (IntType) 2) (FloatType))
     (CallExpr (FloatType) log (FloatExpr (FloatType) 29))
     (IfExpr
      (ArrayType (IntType) 2)
      (FalseExpr (BoolType))
      (VarExpr (ArrayType (IntType) 2) a)
      (VarExpr (ArrayType (IntType) 2) a))
     (CallExpr
      (FloatType)
      pow
      (VarExpr (FloatType) e)
      (FloatExpr (FloatType) 0))))
   (TupleIndexExpr
    (IntType)
    (IfExpr
     (TupleType (ArrayType (IntType) 2) (IntType) (IntType))
     (BinopExpr (BoolType) (VarExpr (IntType) b) >= (VarExpr (IntType) b))
     (TupleLiteralExpr
      (TupleType (ArrayType (IntType) 2) (IntType) (IntType))
      (VarExpr (ArrayType (IntType) 2) a)
      (VarExpr (IntType) b)
      (VarExpr (IntType) b))
     (TupleLiteralExpr
      (TupleType (ArrayType (IntType) 2) (IntType) (IntType))
      (VarExpr (ArrayType (IntType) 2) a)
      (IntExpr (IntType) 943)
      (VarExpr (IntType) c)))
    2)
   (ArrayIndexExpr
    (IntType)
    (ArrayIndexExpr
     (ArrayType (IntType) 1)
     (ArrayLoopExpr
      (ArrayType (ArrayType (IntType) 1) 1)
      f
      (VarExpr (IntType) argnum)
      (VarExpr (ArrayType (IntType) 1) args))
     (UnopExpr (IntType) - (IntExpr (IntType) 494)))
    (VarExpr (IntType) c)))))
(LetCmd
 (ArgLValue (ArrayArgument k l))
 (ArrayIndexExpr
  (ArrayType (IntType) 1)
  (ArrayLoopExpr
   (ArrayType (ArrayType (IntType) 1) 3)
   k
   (SumLoopExpr
    (IntType)
    k
    (VarExpr (IntType) b)
    (ArrayIndexExpr
     (IntType)
     (ArrayLiteralExpr
      (ArrayType (IntType) 1)
      (VarExpr (IntType) c)
      (VarExpr (IntType) b)
      (VarExpr (IntType) k))
     (CallExpr (IntType) to_int (VarExpr (FloatType) f))))
   l
   (IntExpr (IntType) 110)
   m
   (IntExpr (IntType) 555)
   (VarExpr (ArrayType (IntType) 1) args))
  (IfExpr
   (IntType)
   (BinopExpr
    (BoolType)
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) to_float (IntExpr (IntType) 421)))
    <=
    (ArrayIndexExpr
     (IntType)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      k
      (VarExpr (IntType) i)
      l
      (IntExpr (IntType) 245)
      m
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) k))
     (BinopExpr (IntType) (IntExpr (IntType) 628) * (VarExpr (IntType) c))
     (BinopExpr (IntType) (VarExpr (IntType) b) * (VarExpr (IntType) i))
     (VarExpr (IntType) argnum)))
   (SumLoopExpr
    (IntType)
    k
    (IntExpr (IntType) 774)
    l
    (VarExpr (IntType) b)
    (VarExpr (IntType) c))
   (CallExpr
    (IntType)
    to_int
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) cos (VarExpr (FloatType) d))
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))))
  (BinopExpr
   (IntType)
   (ArrayIndexExpr
    (IntType)
    (VarExpr (ArrayType (IntType) 1) args)
    (BinopExpr
     (IntType)
     (ArrayIndexExpr
      (IntType)
      (VarExpr (ArrayType (IntType) 2) g)
      (VarExpr (IntType) i)
      (VarExpr (IntType) argnum))
     +
     (VarExpr (IntType) c)))
   /
   (VarExpr (IntType) h))
  (IfExpr
   (IntType)
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) log (FloatExpr (FloatType) 71))
     <=
     (VarExpr (FloatType) j))
    &&
    (FalseExpr (BoolType)))
   (IfExpr
    (IntType)
    (TrueExpr (BoolType))
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (FloatExpr (FloatType) 90)
      ==
      (VarExpr (FloatType) d))
     (IntExpr (IntType) 260)
     (SumLoopExpr
      (IntType)
      k
      (IntExpr (IntType) 676)
      l
      (VarExpr (IntType) b)
      m
      (VarExpr (IntType) b)
      (VarExpr (IntType) l)))
    (VarExpr (IntType) b))
   (IntExpr (IntType) 567))))
(LetCmd
 (TupleLValue
  (TupleLValue
   (TupleLValue (TupleLValue) (ArgLValue (VarArgument (IntType) m)))))
 (IfExpr
  (TupleType (TupleType (TupleType (TupleType) (IntType))))
  (BinopExpr
   (BoolType)
   (IfExpr
    (BoolType)
    (BinopExpr (BoolType) (VarExpr (IntType) b) == (VarExpr (IntType) h))
    (BinopExpr
     (BoolType)
     (VarExpr (FloatType) j)
     !=
     (IfExpr
      (FloatType)
      (TrueExpr (BoolType))
      (VarExpr (FloatType) f)
      (FloatExpr (FloatType) 59)))
    (IfExpr
     (BoolType)
     (FalseExpr (BoolType))
     (BinopExpr (BoolType) (VarExpr (FloatType) f) == (VarExpr (FloatType) f))
     (TrueExpr (BoolType))))
   &&
   (BinopExpr
    (BoolType)
    (BinopExpr
     (BoolType)
     (VarExpr (IntType) b)
     !=
     (BinopExpr (IntType) (VarExpr (IntType) i) / (VarExpr (IntType) l)))
    &&
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (BoolType) (IntType))
      (TrueExpr (BoolType))
      (VarExpr (IntType) i))
     0)))
  (TupleLiteralExpr
   (TupleType (TupleType (TupleType (TupleType) (IntType))))
   (TupleLiteralExpr
    (TupleType (TupleType (TupleType) (IntType)))
    (TupleLiteralExpr
     (TupleType (TupleType) (IntType))
     (TupleLiteralExpr (TupleType))
     (VarExpr (IntType) c))))
  (TupleLiteralExpr
   (TupleType (TupleType (TupleType (TupleType) (IntType))))
   (TupleLiteralExpr
    (TupleType (TupleType (TupleType) (IntType)))
    (TupleLiteralExpr
     (TupleType (TupleType) (IntType))
     (TupleLiteralExpr (TupleType))
     (VarExpr (IntType) h))))))
(LetCmd
 (ArgLValue (VarArgument (FloatType) n))
 (BinopExpr
  (FloatType)
  (VarExpr (FloatType) f)
  %
  (CallExpr (FloatType) acos (VarExpr (FloatType) e))))
(ShowCmd
 (UnopExpr
  (BoolType)
  !
  (BinopExpr
   (BoolType)
   (TupleIndexExpr
    (BoolType)
    (TupleLiteralExpr
     (TupleType (BoolType) (IntType) (FloatType))
     (BinopExpr (BoolType) (VarExpr (FloatType) n) > (VarExpr (FloatType) f))
     (SumLoopExpr
      (IntType)
      o
      (VarExpr (IntType) c)
      p
      (VarExpr (IntType) b)
      (VarExpr (IntType) b))
     (CallExpr (FloatType) exp (VarExpr (FloatType) j)))
    0)
   !=
   (BinopExpr
    (BoolType)
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) i) > (VarExpr (IntType) argnum))
     (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
     (BinopExpr
      (BoolType)
      (FloatExpr (FloatType) 65)
      <=
      (VarExpr (FloatType) d)))
    ||
    (BinopExpr
     (BoolType)
     (VarExpr (FloatType) f)
     <
     (CallExpr (FloatType) log (VarExpr (FloatType) e)))))))
(TimeCmd (LetCmd (ArgLValue (VarArgument (IntType) o)) (VarExpr (IntType) h)))
(PrintCmd "p")
(LetCmd (ArgLValue (VarArgument (FloatType) p)) (VarExpr (FloatType) n))
