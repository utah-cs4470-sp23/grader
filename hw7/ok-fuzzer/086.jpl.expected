(LetCmd
 (ArgLValue (VarArgument (BoolType) a))
 (TupleIndexExpr
  (BoolType)
  (ArrayIndexExpr
   (TupleType (BoolType) (IntType) (IntType))
   (ArrayLoopExpr
    (ArrayType (TupleType (BoolType) (IntType) (IntType)) 1)
    a
    (IfExpr
     (IntType)
     (FalseExpr (BoolType))
     (VarExpr (IntType) argnum)
     (VarExpr (IntType) argnum))
    (TupleLiteralExpr
     (TupleType (BoolType) (IntType) (IntType))
     (TrueExpr (BoolType))
     (VarExpr (IntType) argnum)
     (SumLoopExpr
      (IntType)
      b
      (VarExpr (IntType) a)
      c
      (IntExpr (IntType) 125)
      (VarExpr (IntType) b))))
   (UnopExpr (IntType) - (UnopExpr (IntType) - (VarExpr (IntType) argnum))))
  0))
(LetCmd (ArgLValue (ArrayArgument b c)) (VarExpr (ArrayType (IntType) 1) args))
(TimeCmd
 (TimeCmd
  (ShowCmd
   (CallExpr
    (FloatType)
    atan
    (CallExpr
     (FloatType)
     exp
     (CallExpr (FloatType) sqrt (FloatExpr (FloatType) 42)))))))
(LetCmd (ArgLValue (VarArgument (FloatType) d)) (FloatExpr (FloatType) 62))
(WriteCmd
 (IfExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (ArrayIndexExpr
   (BoolType)
   (ArrayIndexExpr
    (ArrayType (BoolType) 2)
    (ArrayLoopExpr
     (ArrayType (ArrayType (BoolType) 2) 1)
     e
     (IntExpr (IntType) 536)
     (ArrayLoopExpr
      (ArrayType (BoolType) 2)
      f
      (VarExpr (IntType) argnum)
      g
      (IntExpr (IntType) 974)
      (VarExpr (BoolType) a)))
    (CallExpr
     (IntType)
     to_int
     (CallExpr
      (FloatType)
      pow
      (VarExpr (FloatType) d)
      (FloatExpr (FloatType) 12))))
   (UnopExpr
    (IntType)
    -
    (IfExpr
     (IntType)
     (VarExpr (BoolType) a)
     (IntExpr (IntType) 800)
     (VarExpr (IntType) c)))
   (IfExpr
    (IntType)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 84))
     !=
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))
    (IntExpr (IntType) 838)
    (BinopExpr
     (IntType)
     (IntExpr (IntType) 589)
     %
     (SumLoopExpr
      (IntType)
      e
      (VarExpr (IntType) argnum)
      f
      (VarExpr (IntType) c)
      (VarExpr (IntType) f)))))
  (ArrayLoopExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   e
   (IntExpr (IntType) 914)
   f
   (CallExpr
    (IntType)
    to_int
    (UnopExpr
     (FloatType)
     -
     (CallExpr (FloatType) exp (FloatExpr (FloatType) 80))))
   (TupleLiteralExpr
    (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
    (CallExpr
     (FloatType)
     log
     (CallExpr (FloatType) to_float (VarExpr (IntType) f)))
    (CallExpr (FloatType) sin (FloatExpr (FloatType) 95))
    (CallExpr (FloatType) to_float (IntExpr (IntType) 179))
    (SumLoopExpr
     (FloatType)
     g
     (SumLoopExpr
      (IntType)
      g
      (VarExpr (IntType) argnum)
      h
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 565))
     (BinopExpr (FloatType) (VarExpr (FloatType) d) - (VarExpr (FloatType) d)))))
  (IfExpr
   (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
   (IfExpr
    (BoolType)
    (VarExpr (BoolType) a)
    (BinopExpr
     (BoolType)
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 1))
     >=
     (CallExpr (FloatType) to_float (VarExpr (IntType) argnum)))
    (TupleIndexExpr
     (BoolType)
     (TupleLiteralExpr
      (TupleType (IntType) (BoolType) (IntType))
      (VarExpr (IntType) argnum)
      (TrueExpr (BoolType))
      (VarExpr (IntType) c))
     1))
   (ArrayLoopExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    e
    (IfExpr
     (IntType)
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      ==
      (IntExpr (IntType) 242))
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      -
      (VarExpr (IntType) argnum)))
    f
    (UnopExpr (IntType) - (VarExpr (IntType) argnum))
    (IfExpr
     (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
     (VarExpr (BoolType) a)
     (TupleLiteralExpr
      (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
      (FloatExpr (FloatType) 97)
      (VarExpr (FloatType) d)
      (FloatExpr (FloatType) 22)
      (VarExpr (FloatType) d))
     (TupleLiteralExpr
      (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
      (VarExpr (FloatType) d)
      (FloatExpr (FloatType) 15)
      (FloatExpr (FloatType) 4)
      (FloatExpr (FloatType) 57))))
   (ArrayLoopExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    e
    (BinopExpr
     (IntType)
     (IfExpr
      (IntType)
      (FalseExpr (BoolType))
      (VarExpr (IntType) argnum)
      (IntExpr (IntType) 80))
     +
     (VarExpr (IntType) c))
    f
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType) (FloatType))
      (VarExpr (IntType) c)
      (VarExpr (IntType) c)
      (FloatExpr (FloatType) 98))
     0)
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
     (CallExpr (FloatType) cos (FloatExpr (FloatType) 60))
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 0))
     (UnopExpr (FloatType) - (FloatExpr (FloatType) 96))
     (CallExpr (FloatType) sqrt (VarExpr (FloatType) d))))))
 "e.png")
(AssertCmd
 (BinopExpr
  (BoolType)
  (TupleIndexExpr
   (IntType)
   (TupleLiteralExpr (TupleType (IntType)) (IntExpr (IntType) 211))
   0)
  <
  (VarExpr (IntType) c))
 "e")
(LetCmd
 (TupleLValue)
 (TupleIndexExpr
  (TupleType)
  (IfExpr
   (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (IfExpr
      (BoolType)
      (FalseExpr (BoolType))
      (FalseExpr (BoolType))
      (FalseExpr (BoolType)))
     &&
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))))
   (ArrayIndexExpr
    (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
    (ArrayLoopExpr
     (ArrayType
      (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
      2)
     e
     (IntExpr (IntType) 765)
     f
     (VarExpr (IntType) c)
     (TupleLiteralExpr
      (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
      (TupleLiteralExpr (TupleType))
      (VarExpr (ArrayType (IntType) 1) b)
      (VarExpr (ArrayType (IntType) 1) args)))
    (VarExpr (IntType) argnum)
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr (TupleType (IntType)) (VarExpr (IntType) argnum))
     0))
   (ArrayIndexExpr
    (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
    (ArrayLoopExpr
     (ArrayType
      (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
      1)
     e
     (IfExpr
      (IntType)
      (VarExpr (BoolType) a)
      (VarExpr (IntType) c)
      (VarExpr (IntType) c))
     (TupleLiteralExpr
      (TupleType (TupleType) (ArrayType (IntType) 1) (ArrayType (IntType) 1))
      (TupleLiteralExpr (TupleType))
      (VarExpr (ArrayType (IntType) 1) b)
      (VarExpr (ArrayType (IntType) 1) args)))
    (IntExpr (IntType) 186)))
  0))
(LetCmd
 (ArgLValue (VarArgument (FloatType) e))
 (CallExpr
  (FloatType)
  sqrt
  (CallExpr
   (FloatType)
   sin
   (TupleIndexExpr
    (FloatType)
    (TupleLiteralExpr
     (TupleType (FloatType))
     (CallExpr (FloatType) asin (VarExpr (FloatType) d)))
    0))))
(LetCmd
 (ArgLValue (VarArgument (FloatType) f))
 (CallExpr
  (FloatType)
  atan
  (CallExpr
   (FloatType)
   pow
   (VarExpr (FloatType) d)
   (CallExpr (FloatType) asin (VarExpr (FloatType) e)))))
(ShowCmd (VarExpr (BoolType) a))
(LetCmd
 (ArgLValue (ArrayArgument g h i))
 (ArrayLoopExpr
  (ArrayType (IntType) 2)
  g
  (CallExpr
   (IntType)
   to_int
   (ArrayIndexExpr
    (FloatType)
    (ArrayLoopExpr
     (ArrayType (FloatType) 3)
     g
     (IntExpr (IntType) 195)
     h
     (VarExpr (IntType) argnum)
     i
     (BinopExpr (IntType) (VarExpr (IntType) c) / (VarExpr (IntType) c))
     (VarExpr (FloatType) d))
    (CallExpr
     (IntType)
     to_int
     (CallExpr (FloatType) sin (VarExpr (FloatType) f)))
    (IntExpr (IntType) 967)
    (VarExpr (IntType) c)))
  h
  (CallExpr
   (IntType)
   to_int
   (UnopExpr (FloatType) - (CallExpr (FloatType) acos (VarExpr (FloatType) d))))
  (VarExpr (IntType) h)))
(LetCmd
 (ArgLValue (VarArgument (FloatType) j))
 (BinopExpr
  (FloatType)
  (BinopExpr
   (FloatType)
   (BinopExpr
    (FloatType)
    (CallExpr
     (FloatType)
     tan
     (CallExpr (FloatType) to_float (VarExpr (IntType) h)))
    /
    (BinopExpr
     (FloatType)
     (CallExpr (FloatType) sin (VarExpr (FloatType) e))
     /
     (VarExpr (FloatType) e)))
   +
   (CallExpr
    (FloatType)
    acos
    (CallExpr (FloatType) to_float (IntExpr (IntType) 932))))
  *
  (CallExpr
   (FloatType)
   log
   (CallExpr
    (FloatType)
    cos
    (CallExpr
     (FloatType)
     atan
     (CallExpr (FloatType) log (VarExpr (FloatType) d)))))))
