(LetCmd
 (ArgLValue (VarArgument (FloatType) a))
 (CallExpr
  (FloatType)
  log
  (CallExpr
   (FloatType)
   atan2
   (CallExpr
    (FloatType)
    cos
    (IfExpr
     (FloatType)
     (TrueExpr (BoolType))
     (CallExpr (FloatType) asin (FloatExpr (FloatType) 95))
     (FloatExpr (FloatType) 14)))
   (CallExpr
    (FloatType)
    exp
    (CallExpr
     (FloatType)
     atan
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 57)))))))
(WriteCmd
 (TupleIndexExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  (TupleLiteralExpr
   (TupleType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (ArrayType (IntType) 1)
    (FloatType))
   (ArrayLoopExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    b
    (TupleIndexExpr
     (IntType)
     (TupleLiteralExpr
      (TupleType (IntType) (IntType))
      (IntExpr (IntType) 802)
      (VarExpr (IntType) argnum))
     1)
    c
    (UnopExpr (IntType) - (CallExpr (IntType) to_int (VarExpr (FloatType) a)))
    (TupleLiteralExpr
     (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
     (CallExpr (FloatType) sin (FloatExpr (FloatType) 61))
     (CallExpr (FloatType) sin (VarExpr (FloatType) a))
     (VarExpr (FloatType) a)
     (CallExpr (FloatType) acos (FloatExpr (FloatType) 74))))
   (VarExpr (ArrayType (IntType) 1) args)
   (IfExpr
    (FloatType)
    (UnopExpr (BoolType) ! (FalseExpr (BoolType)))
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) sin (VarExpr (FloatType) a)))
    (CallExpr
     (FloatType)
     pow
     (CallExpr (FloatType) atan (VarExpr (FloatType) a))
     (CallExpr (FloatType) cos (VarExpr (FloatType) a)))))
  0)
 "b.png")
(ReadCmd
 "b.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  b))
(LetCmd
 (TupleLValue
  (ArgLValue (VarArgument (BoolType) c))
  (TupleLValue
   (ArgLValue (ArrayArgument d e f))
   (ArgLValue (VarArgument (FloatType) g))
   (TupleLValue
    (ArgLValue (VarArgument (BoolType) h))
    (ArgLValue (ArrayArgument i j k))
    (ArgLValue (ArrayArgument l m n o)))))
 (TupleLiteralExpr
  (TupleType
   (BoolType)
   (TupleType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (FloatType)
    (TupleType
     (BoolType)
     (ArrayType (ArrayType (IntType) 1) 2)
     (ArrayType (ArrayType (IntType) 2) 3))))
  (BinopExpr
   (BoolType)
   (IfExpr
    (BoolType)
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (TrueExpr (BoolType)) && (TrueExpr (BoolType))))
    (UnopExpr
     (BoolType)
     !
     (BinopExpr (BoolType) (FalseExpr (BoolType)) || (FalseExpr (BoolType))))
    (BinopExpr
     (BoolType)
     (IntExpr (IntType) 591)
     <=
     (UnopExpr (IntType) - (VarExpr (IntType) argnum))))
   &&
   (UnopExpr
    (BoolType)
    !
    (BinopExpr
     (BoolType)
     (UnopExpr (BoolType) ! (TrueExpr (BoolType)))
     ||
     (BinopExpr
      (BoolType)
      (VarExpr (IntType) argnum)
      !=
      (IntExpr (IntType) 217)))))
  (TupleLiteralExpr
   (TupleType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (FloatType)
    (TupleType
     (BoolType)
     (ArrayType (ArrayType (IntType) 1) 2)
     (ArrayType (ArrayType (IntType) 2) 3)))
   (TupleIndexExpr
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    (IfExpr
     (TupleType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2))
     (BinopExpr (BoolType) (TrueExpr (BoolType)) == (FalseExpr (BoolType)))
     (TupleLiteralExpr
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       b))
     (TupleLiteralExpr
      (TupleType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2))
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       b)))
    0)
   (CallExpr
    (FloatType)
    pow
    (CallExpr
     (FloatType)
     cos
     (BinopExpr
      (FloatType)
      (VarExpr (FloatType) a)
      %
      (FloatExpr (FloatType) 83)))
    (CallExpr
     (FloatType)
     atan2
     (CallExpr
      (FloatType)
      atan2
      (FloatExpr (FloatType) 73)
      (VarExpr (FloatType) a))
     (FloatExpr (FloatType) 36)))
   (TupleLiteralExpr
    (TupleType
     (BoolType)
     (ArrayType (ArrayType (IntType) 1) 2)
     (ArrayType (ArrayType (IntType) 2) 3))
    (FalseExpr (BoolType))
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 1) 2)
     c
     (VarExpr (IntType) argnum)
     d
     (SumLoopExpr
      (IntType)
      c
      (IntExpr (IntType) 185)
      d
      (IntExpr (IntType) 172)
      e
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) e))
     (VarExpr (ArrayType (IntType) 1) args))
    (ArrayLoopExpr
     (ArrayType (ArrayType (IntType) 2) 3)
     c
     (BinopExpr
      (IntType)
      (VarExpr (IntType) argnum)
      *
      (VarExpr (IntType) argnum))
     d
     (UnopExpr (IntType) - (IntExpr (IntType) 887))
     e
     (IntExpr (IntType) 85)
     (ArrayLoopExpr
      (ArrayType (IntType) 2)
      f
      (VarExpr (IntType) d)
      g
      (VarExpr (IntType) c)
      (VarExpr (IntType) f)))))))
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument p q r s))
  (TupleLValue
   (ArgLValue (VarArgument (BoolType) t))
   (ArgLValue (ArrayArgument u v w x))))
 (ArrayIndexExpr
  (TupleType
   (ArrayType
    (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
    3)
   (TupleType (BoolType) (ArrayType (IntType) 3)))
  (ArrayLoopExpr
   (ArrayType
    (TupleType
     (ArrayType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      3)
     (TupleType (BoolType) (ArrayType (IntType) 3)))
    1)
   p
   (VarExpr (IntType) o)
   (TupleLiteralExpr
    (TupleType
     (ArrayType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      3)
     (TupleType (BoolType) (ArrayType (IntType) 3)))
    (IfExpr
     (ArrayType
      (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
      3)
     (VarExpr (BoolType) h)
     (ArrayLoopExpr
      (ArrayType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       3)
      q
      (VarExpr (IntType) p)
      r
      (VarExpr (IntType) n)
      s
      (IntExpr (IntType) 283)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       d))
     (ArrayLoopExpr
      (ArrayType
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       3)
      q
      (VarExpr (IntType) k)
      r
      (VarExpr (IntType) j)
      s
      (VarExpr (IntType) j)
      (VarExpr
       (ArrayType
        (TupleType (FloatType) (FloatType) (FloatType) (FloatType))
        2)
       d)))
    (TupleLiteralExpr
     (TupleType (BoolType) (ArrayType (IntType) 3))
     (BinopExpr (BoolType) (VarExpr (BoolType) c) == (FalseExpr (BoolType)))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      q
      (VarExpr (IntType) f)
      r
      (VarExpr (IntType) k)
      s
      (VarExpr (IntType) p)
      (VarExpr (IntType) m)))))
  (ArrayIndexExpr
   (IntType)
   (VarExpr (ArrayType (IntType) 1) args)
   (ArrayIndexExpr
    (IntType)
    (IfExpr
     (ArrayType (IntType) 3)
     (VarExpr (BoolType) c)
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      p
      (VarExpr (IntType) k)
      q
      (VarExpr (IntType) m)
      r
      (VarExpr (IntType) argnum)
      (VarExpr (IntType) e))
     (ArrayLoopExpr
      (ArrayType (IntType) 3)
      p
      (VarExpr (IntType) m)
      q
      (VarExpr (IntType) o)
      r
      (VarExpr (IntType) j)
      (VarExpr (IntType) q)))
    (SumLoopExpr
     (IntType)
     p
     (IfExpr
      (IntType)
      (TrueExpr (BoolType))
      (VarExpr (IntType) e)
      (VarExpr (IntType) n))
     q
     (CallExpr (IntType) to_int (FloatExpr (FloatType) 0))
     r
     (VarExpr (IntType) k)
     (VarExpr (IntType) f))
    (VarExpr (IntType) f)
    (VarExpr (IntType) j)))))
(LetCmd
 (ArgLValue (ArrayArgument y z A))
 (VarExpr
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  d))
(LetCmd
 (ArgLValue (VarArgument (FloatType) B))
 (BinopExpr
  (FloatType)
  (CallExpr
   (FloatType)
   asin
   (CallExpr (FloatType) to_float (VarExpr (IntType) o)))
  /
  (CallExpr
   (FloatType)
   acos
   (CallExpr
    (FloatType)
    atan2
    (CallExpr (FloatType) log (VarExpr (FloatType) g))
    (CallExpr
     (FloatType)
     sin
     (CallExpr (FloatType) to_float (VarExpr (IntType) r)))))))
(ShowCmd
 (BinopExpr
  (BoolType)
  (BinopExpr
   (BoolType)
   (BinopExpr
    (BoolType)
    (BinopExpr (BoolType) (VarExpr (BoolType) h) || (VarExpr (BoolType) c))
    ||
    (IfExpr
     (BoolType)
     (BinopExpr (BoolType) (VarExpr (IntType) e) == (VarExpr (IntType) f))
     (VarExpr (BoolType) h)
     (VarExpr (BoolType) h)))
   ==
   (VarExpr (BoolType) t))
  &&
  (VarExpr (BoolType) t)))
(LetCmd (ArgLValue (VarArgument (IntType) C)) (VarExpr (IntType) v))
(LetCmd
 (ArgLValue (VarArgument (FloatType) D))
 (CallExpr (FloatType) cos (VarExpr (FloatType) a)))
(ReadCmd
 "E.png"
 (VarArgument
  (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
  E))
(LetCmd
 (ArgLValue (VarArgument (FloatType) F))
 (CallExpr
  (FloatType)
  exp
  (CallExpr
   (FloatType)
   sqrt
   (BinopExpr
    (FloatType)
    (VarExpr (FloatType) B)
    /
    (CallExpr
     (FloatType)
     acos
     (CallExpr (FloatType) to_float (VarExpr (IntType) j)))))))
