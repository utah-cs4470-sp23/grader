let a = cos(to_float((if (if false then false else false) then 920 else ((861 + 893) - (459 % argnum)))))
let b = acos(a)
let {} = (if (true || (true || false)) then {(array[c : 341, d : argnum, e : argnum] {}), a}{0} else {(array[c : argnum, d : argnum, e : argnum] {}), to_float(980), 750}{0})[(sum[c : (sum[c : {33, argnum, args}{1}, d : (sum[c : (- 813), d : argnum, e : 709] argnum)] (if (false && false) then 419 else (sum[e : argnum] c))), d : 714] (if (if (if true then true else true) then (c > d) else (true || true)) then (- (- c)) else (to_int(a) % (- d)))), (- argnum), 962]
let {} = (if (((sum[c : 698, d : 207, e : 138] a) < atan2(11.11, a)) || (true && false)) then [{}, (if true then {} else {}), {}] else (if (array[c : 956, d : argnum] false)[argnum, to_int(a)] then (array[c : to_int(a)] {}) else (array[c : 680] (if false then {} else {}))))[(argnum - (if (if (! false) then (if true then false else false) else (607 != 189)) then (if true then (679 % 821) else to_int(b)) else (if (! false) then (if false then argnum else 984) else 199)))]
fn c({ d[e, f, g] : bool[,,], h[i, j] : {int,int}[,] }, k[l] : bool[][]) : {float,float[],bool} {
  let m = b
  let n[o, p] = {pow(31.0, tan(m)), l, {[g, l], h}}{2}{1}
  let {q[r], {s}, {t, u, v[w, x, y]}} = (if {false}{0} then (array[q : l, r : (if true then argnum else (- p))] {(array[s : o] k), {a}, {i, 600, d}}) else (array[q : argnum, r : [i][f]] {(array[s : q] k), {m}, {f, q, d}}))[(if (! (array[q : g, r : f] true)[e, o]) then (g - argnum) else (if (a >= a) then {l} else {i}){0}), 732]
  let z = to_int(log(asin((sum[z : (w / g), A : (- e), B : u] s))))
  return (if (tan(sqrt(b)) > asin(pow(a, b))) then (array[A : 303, B : j, C : (if false then (- x) else x)] c({v, n}, q[u])) else (array[A : argnum, B : r, C : x] {a, [m, s], (f <= l)}))[o, (- argnum), f]
}

fn d() : bool {
  let e[f] = {(array[e : (- 698), f : argnum] (array[g : 411] false))}{0}[930, to_int((- tan(tan(68.2))))]
  assert false, "g"
  return (array[g : argnum, h : (array[g : f, h : (if false then f else argnum)] argnum)[(sum[g : f, h : (- argnum), i : (if d() then 112 else f)] h), ((- f) % (if d() then f else f))], i : ((if false then (- f) else 706) * (array[g : f, h : argnum, i : argnum] 490)[(- argnum), to_int(a), (144 % argnum)])] (false && d()))[to_int((if (f < argnum) then [b] else [a])[argnum]), ({b, argnum}{1} - argnum), argnum]
  let {g[h, i], j[k, l, m], n} = {(array[g : to_int(log(b))] (array[h : args[918], i : argnum] (h < f)))[(sum[g : (f % f), h : (- (- argnum)), i : ((- 587) + 895)] f)], {args[762], (array[g : 213, h : (128 % f), i : (if d() then 427 else f)] {})}{1}, ((if false then d() else (asin(a) == pow(b, 15.21))) || (! (true && (false && d()))))}
  return n
}

write (array[e : (if (if {50.52, d(), true}{1} then d() else [false][638]) then 198 else (- (argnum - argnum))), f : to_int((array[e : argnum, f : (sum[e : argnum, f : 971] e), g : (- argnum)] cos(b))[(sum[e : (368 - 510), f : args[argnum]] e), (array[e : argnum] argnum)[to_int(b)], argnum])] (array[g : 900] {acos(b), acos(26.87), to_float(g), a})[to_int((array[g : 260, h : argnum, i : 965] b)[426, e, (- f)])]) to "e.png"

fn e(f[g, h, i] : float[,,], j[k, l] : float[,], { m : {bool,bool,float}, n : bool }) : bool {
  let o = (array[o : l] 20.25)
  let p[q, r] = (if (d() || d()) then (if n then (if false then (if (! n) then j else j) else [j][i]) else j) else (array[p : {h}{0}, q : argnum] (if (if d() then (h < l) else (! n)) then sin(0.22) else log(to_float(p)))))
  return e((array[s : (999 * k), t : r, u : argnum] {f})[i, h, i]{0}, (array[s : q, t : i] b), (if (to_float(k) <= (b + a)) then {{true, q, r}, o, {m, true}} else {{false, g, argnum}, (array[s : k] a), {m, n}}){2})
  let {s, t[u, v, w], x} = (if e((array[s : (- i), t : (h - 991), u : 270] acos((- 34.71))), (array[s : argnum, t : ((sum[s : l, t : q] r) * (g % k))] b), {{(! false), n, atan(a)}, (false && (false && false))}) then (array[s : l] (if false then {n, f, h} else {n, f, 858}))[553] else (array[s : {true, argnum}{1}, t : (array[s : g, t : argnum, u : g] t)[g, 888, 898]] {n, f, r})[k, q])
  return false
}

let {{f[g], h[i, j]}} = {{args, {(array[f : 653, g : 896] args)}{0}}}
assert (! (array[k : args[(- i)]] [true, d(), true][j])[g]), "k"
let {} = {}
let k[l, m] = (if ({false}{0} && {(i != g), (g > argnum)}{0}) then (array[k : (i * (argnum * 718)), l : j] (array[m : i] h)[(sum[m : 366] i)])[j, g] else h)
