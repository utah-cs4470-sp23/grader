(LetCmd (ArgLValue (VarArgument R)) (FalseExpr))
(TypeCmd r (IntType))
(ShowCmd (TrueExpr))
(PrintCmd "w")
(WriteCmd (TupleIndexExpr (ArrayLiteralExpr) 0) "p")
(WriteCmd (IntExpr 57) "")
(ReadCmd "" (ArrayArgument s O V q))
(AssertCmd (IfExpr (FalseExpr) (CallExpr D) (VarExpr Q)) "Mt")
(ReadCmd "" (VarArgument n))
(ShowCmd
 (ArrayIndexExpr
  (FalseExpr)
  (ArrayLiteralExpr
   (TupleIndexExpr (TupleLiteralExpr (FloatExpr 73522) (FalseExpr)) 49))))
(TimeCmd (AssertCmd (TrueExpr) "\"))
(TypeCmd Z (VarType c))
(TypeCmd X (ArrayType (TupleType) 2))
(PrintCmd "")
(ShowCmd (IntExpr 5607))
(ReadCmd "{" (VarArgument u))
(PrintCmd "")
(PrintCmd "")
(AssertCmd
 (ArrayLoopExpr
  v
  (TupleLiteralExpr)
  (CallExpr B (ArrayLoopExpr h (VarExpr Q) (TrueExpr))))
 "")
(TimeCmd (TimeCmd (PrintCmd "")))
(TypeCmd m (IntType))
(WriteCmd (IntExpr 2) "")
(TimeCmd
 (LetCmd
  (TupleLValue
   (ArgLValue (VarArgument l))
   (TupleLValue
    (ArgLValue (VarArgument T))
    (TupleLValue
     (ArgLValue (ArrayArgument B F S))
     (ArgLValue (ArrayArgument H k)))))
  (VarExpr m)))
(TypeCmd J (VarType z))
(ShowCmd (FloatExpr 0))
(AssertCmd (ArrayIndexExpr (TrueExpr)) "")
(LetCmd
 (TupleLValue (ArgLValue (VarArgument z)))
 (TupleLiteralExpr (CallExpr J (FloatExpr 40))))
(AssertCmd (ArrayLiteralExpr) "")
(TimeCmd (TypeCmd t (TupleType (IntType) (VarType K))))
(WriteCmd (VarExpr N) "")
(LetCmd (ArgLValue (VarArgument Y)) (TupleIndexExpr (FloatExpr 0) 67))
(TimeCmd (ReadCmd "u8" (VarArgument A)))
(PrintCmd "")
(TimeCmd (AssertCmd (TupleLiteralExpr) "E"))
(ReadCmd "<" (ArrayArgument c L))
(TypeCmd S (FloatType))
(ReadCmd "" (VarArgument R))
(LetCmd (ArgLValue (ArrayArgument H d u)) (SumLoopExpr (IntExpr 3)))
(PrintCmd "APIj1")
(AssertCmd
 (CallExpr
  n
  (IfExpr
   (TrueExpr)
   (ArrayIndexExpr (TupleLiteralExpr) (ArrayLoopExpr (IntExpr 96)))
   (ArrayIndexExpr (TupleLiteralExpr (IntExpr 13)))))
 "` T")
(WriteCmd (TrueExpr) ",")
(TimeCmd (ReadCmd "" (ArrayArgument h M c)))
(LetCmd (ArgLValue (ArrayArgument q m)) (SumLoopExpr (FloatExpr 0)))
(AssertCmd (VarExpr s) "")
(WriteCmd (TupleIndexExpr (VarExpr x) 0) "F")
(WriteCmd (FloatExpr 0) " }")
(ShowCmd
 (CallExpr
  q
  (IfExpr
   (FalseExpr)
   (TupleLiteralExpr)
   (SumLoopExpr (TupleIndexExpr (CallExpr T (FalseExpr)) 6)))))
(AssertCmd (SumLoopExpr (SumLoopExpr (TupleLiteralExpr))) "KR")
(WriteCmd (TupleLiteralExpr (FalseExpr)) "i")
(TypeCmd k (TupleType))
(WriteCmd (ArrayLoopExpr Z (FloatExpr 24902) (IntExpr 23)) "")
(TimeCmd (TypeCmd H (IntType)))
(AssertCmd (TupleIndexExpr (TrueExpr) 3) "LB")
(WriteCmd (ArrayLiteralExpr) "*Z)")
(WriteCmd (ArrayIndexExpr (CallExpr Q) (IntExpr 64)) "hYB*")
(AssertCmd (FalseExpr) "`@G")
(TimeCmd (ReadCmd "" (ArrayArgument q P H)))
(WriteCmd (VarExpr M) "")
(PrintCmd "")
(ShowCmd (VarExpr A))
(ReadCmd "" (VarArgument t))
(AssertCmd (VarExpr l) "b")
(ShowCmd
 (TupleIndexExpr
  (ArrayLiteralExpr
   (TupleLiteralExpr (TupleIndexExpr (TupleIndexExpr (TrueExpr) 7) 4601)))
  39))
(PrintCmd "J3")
(PrintCmd "t")
(TimeCmd (AssertCmd (ArrayIndexExpr (TupleLiteralExpr)) "N"))
(ReadCmd "" (VarArgument b))
(TypeCmd T (IntType))
(PrintCmd "'")
(ShowCmd
 (ArrayLiteralExpr
  (SumLoopExpr
   e
   (ArrayLoopExpr
    (IfExpr
     (ArrayIndexExpr (FalseExpr))
     (CallExpr
      s
      (SumLoopExpr
       F
       (CallExpr p (ArrayLoopExpr (TupleLiteralExpr)))
       (FalseExpr)))
     (VarExpr o)))
   (TrueExpr))
  (FloatExpr 0)
  (ArrayLiteralExpr
   (ArrayIndexExpr
    (FalseExpr)
    (TupleIndexExpr (TupleIndexExpr (TrueExpr) 95) 2)))))
(TimeCmd (TypeCmd c (IntType)))
(ReadCmd "lv" (ArrayArgument x b))
(ShowCmd (ArrayLiteralExpr (VarExpr i)))
(TimeCmd (PrintCmd ""))
(WriteCmd
 (ArrayLiteralExpr (ArrayIndexExpr (IntExpr 9)) (ArrayLiteralExpr))
 "")
(ReadCmd "V" (ArrayArgument W E C))
(AssertCmd
 (ArrayLoopExpr
  (ArrayIndexExpr
   (CallExpr f (TupleIndexExpr (TupleLiteralExpr (CallExpr W)) 72))
   (TupleLiteralExpr
    (SumLoopExpr (ArrayIndexExpr (IntExpr 6) (FalseExpr)))
    (ArrayLoopExpr
     d
     (IntExpr 0)
     (TupleIndexExpr (CallExpr g (ArrayIndexExpr (FloatExpr 68))) 3)))))
 "")
(TypeCmd s (ArrayType (VarType I) 1))
(WriteCmd (ArrayLoopExpr (ArrayLiteralExpr)) "")
(ShowCmd (FloatExpr 0))
(PrintCmd "s")
(ShowCmd (TrueExpr))
(WriteCmd (CallExpr J (CallExpr H (TupleLiteralExpr (TrueExpr)))) "")
(PrintCmd "")
(AssertCmd (VarExpr I) "")
(ReadCmd "6" (ArrayArgument e K))
(WriteCmd
 (ArrayIndexExpr
  (ArrayLiteralExpr)
  (TupleLiteralExpr
   (ArrayIndexExpr
    (TrueExpr)
    (SumLoopExpr
     (ArrayLiteralExpr
      (TupleLiteralExpr (FalseExpr))
      (CallExpr w (IntExpr 55))
      (VarExpr B))))))
 "&")
(LetCmd (ArgLValue (VarArgument r)) (SumLoopExpr (FalseExpr)))
(WriteCmd
 (CallExpr
  i
  (TupleLiteralExpr (VarExpr j))
  (FalseExpr)
  (SumLoopExpr (FloatExpr 3))
  (TupleLiteralExpr (ArrayLiteralExpr))
  (ArrayLiteralExpr (ArrayLiteralExpr (FloatExpr 3342))))
 "x")
(LetCmd
 (TupleLValue)
 (ArrayLoopExpr
  Y
  (ArrayLiteralExpr (FalseExpr))
  (ArrayLoopExpr H (CallExpr v) (VarExpr F))))
(TypeCmd i (ArrayType (BoolType) 3))
(LetCmd (TupleLValue (ArgLValue (VarArgument m))) (FloatExpr 8))
(AssertCmd
 (IfExpr (ArrayLiteralExpr (FloatExpr 0)) (VarExpr L) (FloatExpr 0))
 "")
(LetCmd
 (TupleLValue
  (ArgLValue (ArrayArgument c r))
  (TupleLValue (TupleLValue (TupleLValue (TupleLValue (TupleLValue))))))
 (TrueExpr))
(PrintCmd "S")
(PrintCmd "")
(TypeCmd Z (TupleType (FloatType)))
(WriteCmd (VarExpr V) "")
(PrintCmd "")
(WriteCmd (ArrayLiteralExpr) "")
(ReadCmd "" (VarArgument P))
(PrintCmd "")
(WriteCmd (VarExpr H) "nw]")
(AssertCmd (FalseExpr) "")
(AssertCmd (ArrayLoopExpr R (CallExpr L) (FalseExpr)) "")
(LetCmd (TupleLValue) (ArrayLoopExpr y (TrueExpr) (TrueExpr)))
(ShowCmd (ArrayIndexExpr (ArrayLiteralExpr) (ArrayLoopExpr (TrueExpr))))
(AssertCmd (FloatExpr 0) "")
(PrintCmd "3")
(TimeCmd
 (ShowCmd
  (ArrayLoopExpr (ArrayLoopExpr i (FalseExpr) (TupleIndexExpr (IntExpr 2) 5)))))
(LetCmd
 (TupleLValue (TupleLValue))
 (IfExpr (VarExpr i) (TrueExpr) (SumLoopExpr f (TupleLiteralExpr) (FalseExpr))))
(TypeCmd r (TupleType))
(TypeCmd L (BoolType))
(AssertCmd (FalseExpr) "")
(TypeCmd D (FloatType))
(TypeCmd k (FloatType))
(TypeCmd L (BoolType))
(TimeCmd (TypeCmd X (BoolType)))
(LetCmd
 (ArgLValue (ArrayArgument c B B))
 (ArrayLoopExpr (ArrayLoopExpr (ArrayIndexExpr (TrueExpr)))))
