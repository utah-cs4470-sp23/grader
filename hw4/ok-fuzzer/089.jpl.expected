(TypeCmd m (IntType))
(TypeCmd r (FloatType))
(WriteCmd
 (ArrayLoopExpr
  z
  (ArrayLiteralExpr (FalseExpr))
  (TupleLiteralExpr (IntExpr 1)))
 "&")
(ReadCmd "3`y" (ArrayArgument U C))
(ShowCmd
 (ArrayLoopExpr
  (CallExpr I (IfExpr (TrueExpr) (TupleLiteralExpr) (FloatExpr 0)))))
(PrintCmd "")
(TypeCmd J (VarType k))
(TypeCmd H (ArrayType (ArrayType (FloatType) 3) 1))
(ShowCmd (TupleIndexExpr (IntExpr 41227) 8))
(AssertCmd
 (IfExpr
  (TupleIndexExpr (TupleLiteralExpr (ArrayLiteralExpr (FloatExpr 0))) 2)
  (FalseExpr)
  (FalseExpr))
 "")
(WriteCmd (IntExpr 7) "+")
(LetCmd (ArgLValue (ArrayArgument V S C L)) (IntExpr 9))
(ReadCmd ",+" (VarArgument A))
(PrintCmd "")
(AssertCmd (TrueExpr) "")
(LetCmd (ArgLValue (VarArgument z)) (TupleIndexExpr (FloatExpr 2) 23))
(WriteCmd (FalseExpr) "")
(LetCmd
 (ArgLValue (ArrayArgument d l))
 (SumLoopExpr S (ArrayLiteralExpr (TrueExpr)) (TupleLiteralExpr (FloatExpr 0))))
(ReadCmd "}8e" (VarArgument X))
(TimeCmd (ShowCmd (CallExpr w)))
(LetCmd (TupleLValue) (FalseExpr))
(PrintCmd "")
(WriteCmd (FloatExpr 0) "1")
(AssertCmd
 (SumLoopExpr
  (ArrayLoopExpr (TupleIndexExpr (TupleLiteralExpr (VarExpr H)) 6)))
 "")
(AssertCmd
 (ArrayLoopExpr
  d
  (FalseExpr)
  (ArrayIndexExpr
   (CallExpr O (TrueExpr) (TrueExpr))
   (IfExpr
    (FalseExpr)
    (FalseExpr)
    (ArrayLoopExpr (IfExpr (IntExpr 4) (FloatExpr 0) (FloatExpr 0))))))
 "")
(AssertCmd (FalseExpr) "B")
(TimeCmd (ReadCmd "" (ArrayArgument n J C b)))
(TypeCmd Q (ArrayType (IntType) 3))
(TimeCmd
 (WriteCmd
  (IfExpr
   (FloatExpr 14)
   (FalseExpr)
   (ArrayIndexExpr
    (TrueExpr)
    (TupleIndexExpr (ArrayIndexExpr (FloatExpr 341879)) 4)))
  ""))
(PrintCmd "@")
(ShowCmd (VarExpr f))
(PrintCmd "K")
(ShowCmd (FloatExpr 0))
(PrintCmd "H")
(TimeCmd (ReadCmd "[N " (VarArgument Z)))
(WriteCmd (SumLoopExpr (TupleLiteralExpr (FloatExpr 135))) "l?")
(ShowCmd (ArrayLiteralExpr))
(WriteCmd (FalseExpr) "1vz6")
(AssertCmd (SumLoopExpr (TrueExpr)) "~;")
(PrintCmd "")
(AssertCmd
 (IfExpr
  (FloatExpr 0)
  (ArrayLiteralExpr (IntExpr 0))
  (SumLoopExpr F (TrueExpr) R (FalseExpr) (TrueExpr)))
 "")
