(LetCmd (TupleLValue) (FloatExpr 0))
(ReadCmd "KQQ<J./" (VarArgument o))
(ShowCmd (FloatExpr 0))
(PrintCmd "")
(LetCmd
 (ArgLValue (ArrayArgument f t))
 (ArrayIndexExpr
  (TupleLiteralExpr (ArrayLiteralExpr))
  (TupleLiteralExpr (VarExpr O))
  (CallExpr x (TrueExpr))))
(ShowCmd (IntExpr 1))
(ShowCmd (CallExpr s (SumLoopExpr E (VarExpr x) (FalseExpr))))
(PrintCmd "")
(AssertCmd
 (SumLoopExpr
  (TupleIndexExpr (ArrayLiteralExpr (TupleLiteralExpr (FalseExpr))) 0))
 "")
(TimeCmd (PrintCmd ""))
(AssertCmd
 (CallExpr
  a
  (ArrayIndexExpr
   (TupleIndexExpr
    (ArrayLiteralExpr (SumLoopExpr v (VarExpr z) E (FalseExpr) (FloatExpr 0)))
    2)))
 "")
(ShowCmd (TrueExpr))
(LetCmd
 (TupleLValue
  (TupleLValue (TupleLValue) (TupleLValue))
  (TupleLValue
   (TupleLValue (TupleLValue) (TupleLValue (TupleLValue (TupleLValue))))
   (TupleLValue (ArgLValue (VarArgument M)) (ArgLValue (VarArgument R)))))
 (ArrayLoopExpr
  x
  (FloatExpr 0)
  (ArrayIndexExpr (TrueExpr) (ArrayLoopExpr (IntExpr 53)))))
(PrintCmd "")
(LetCmd
 (ArgLValue (ArrayArgument E M a K))
 (ArrayLoopExpr (ArrayIndexExpr (TrueExpr) (VarExpr k))))
(WriteCmd (IntExpr 828211) "F")
(WriteCmd (CallExpr R (FalseExpr)) "x")
(TypeCmd e (ArrayType (TupleType (TupleType)) 1))
(LetCmd
 (ArgLValue (VarArgument r))
 (TupleLiteralExpr
  (IntExpr 1)
  (FalseExpr)
  (TrueExpr)
  (IfExpr
   (TupleLiteralExpr)
   (FloatExpr 0)
   (ArrayLoopExpr
    C
    (TupleIndexExpr
     (ArrayLiteralExpr
      (IfExpr
       (CallExpr C)
       (TupleLiteralExpr)
       (ArrayIndexExpr (FloatExpr 1) (TupleLiteralExpr))))
     5)
    (TupleIndexExpr (FloatExpr 0) 9)))))
(AssertCmd (IntExpr 4) "U")
(WriteCmd (TrueExpr) "\{")
(LetCmd (ArgLValue (ArrayArgument a G)) (FalseExpr))
(AssertCmd
 (SumLoopExpr
  (TupleLiteralExpr
   (IntExpr 548)
   (TupleLiteralExpr (CallExpr S (TupleLiteralExpr)))))
 "")
(TypeCmd M (VarType A))
(TimeCmd (PrintCmd "}"))
(PrintCmd "@")
(LetCmd (TupleLValue) (TupleIndexExpr (ArrayLiteralExpr) 4))
(PrintCmd "")
(WriteCmd (CallExpr r) "")
(ReadCmd "<68BmkA" (ArrayArgument w P g T))
(TypeCmd T (FloatType))
(TypeCmd y (ArrayType (BoolType) 1))
(TimeCmd (PrintCmd ""))
(TypeCmd B (IntType))
(WriteCmd (VarExpr y) "Eh")
(ReadCmd "" (VarArgument M))
(ReadCmd "7%" (ArrayArgument Z e b p f))
(WriteCmd
 (ArrayLiteralExpr
  (TupleLiteralExpr
   (ArrayLoopExpr
    B
    (ArrayLiteralExpr (ArrayLoopExpr (ArrayLiteralExpr)))
    (ArrayIndexExpr (TrueExpr) (IntExpr 494)))))
 "km$")
(ReadCmd "8" (VarArgument X))
(WriteCmd
 (IfExpr
  (FalseExpr)
  (IfExpr (FalseExpr) (VarExpr h) (VarExpr i))
  (SumLoopExpr g (ArrayLiteralExpr (VarExpr P) (TrueExpr)) (IntExpr 7)))
 "")
(TimeCmd
 (TimeCmd
  (LetCmd
   (ArgLValue (VarArgument U))
   (IfExpr
    (ArrayLiteralExpr (IntExpr 924))
    (TupleLiteralExpr)
    (ArrayLoopExpr
     a
     (TupleIndexExpr (TupleIndexExpr (VarExpr h) 92) 84)
     (FalseExpr))))))
(AssertCmd (ArrayIndexExpr (FloatExpr 0) (TupleLiteralExpr)) "")
(LetCmd (TupleLValue) (SumLoopExpr A (TupleLiteralExpr) (IntExpr 3)))
(PrintCmd "B/M-")
(ReadCmd "" (VarArgument f))
(TimeCmd (AssertCmd (SumLoopExpr O (CallExpr l (VarExpr F)) (VarExpr N)) ""))
(WriteCmd (TrueExpr) "")
(ReadCmd "[," (VarArgument G))
(TimeCmd (ReadCmd "6" (VarArgument f)))
(AssertCmd (IntExpr 6) "")
(ReadCmd "h" (ArrayArgument s J))
(LetCmd (ArgLValue (VarArgument P)) (VarExpr A))
(PrintCmd "7pt")
(PrintCmd "a")
(PrintCmd "b")
(WriteCmd (ArrayLiteralExpr) "")
(TimeCmd (TimeCmd (TimeCmd (TimeCmd (ReadCmd ":" (ArrayArgument o r a N))))))
(PrintCmd "")
(AssertCmd (FalseExpr) ";3")
(AssertCmd (VarExpr i) "")
(WriteCmd (FloatExpr 6) "*")
(TimeCmd
 (AssertCmd
  (CallExpr
   L
   (TrueExpr)
   (ArrayLoopExpr B (IntExpr 6) (TupleIndexExpr (IntExpr 2) 8))
   (FloatExpr 8))
  "D"))
(TimeCmd (PrintCmd "r?'"))
(WriteCmd (ArrayLiteralExpr (CallExpr i)) "mq")
(LetCmd (ArgLValue (ArrayArgument H r U)) (VarExpr n))
(ShowCmd (ArrayIndexExpr (TrueExpr) (VarExpr B)))
(ReadCmd "" (VarArgument V))
(ReadCmd "" (ArrayArgument S w C F p q Q L))
(AssertCmd (TupleLiteralExpr) ")")
(LetCmd (ArgLValue (VarArgument s)) (IntExpr 70))
(ShowCmd
 (ArrayLiteralExpr
  (SumLoopExpr
   t
   (VarExpr U)
   (CallExpr j (IfExpr (CallExpr u) (TupleLiteralExpr (VarExpr I)) (TrueExpr))))))
(AssertCmd (CallExpr I) "")
(WriteCmd (IntExpr 223) "_p")
(LetCmd (ArgLValue (ArrayArgument s l)) (FalseExpr))
(AssertCmd (FalseExpr) "")
(TypeCmd A (IntType))
(LetCmd
 (ArgLValue (VarArgument Z))
 (IfExpr
  (TupleLiteralExpr (ArrayLiteralExpr))
  (TrueExpr)
  (CallExpr
   b
   (IfExpr
    (TupleLiteralExpr (ArrayLiteralExpr (CallExpr A)))
    (FloatExpr 0)
    (IntExpr 72)))))
(PrintCmd "")
(ReadCmd "" (ArrayArgument k x c))
(TimeCmd (TypeCmd v (BoolType)))
(AssertCmd (IntExpr 79) "")
(LetCmd
 (ArgLValue (ArrayArgument L L P))
 (SumLoopExpr (SumLoopExpr (CallExpr e (TrueExpr)))))
(PrintCmd "")
(PrintCmd "AF")
(AssertCmd (ArrayLiteralExpr) "")
(ReadCmd "`" (VarArgument j))
(LetCmd (ArgLValue (ArrayArgument R J)) (VarExpr Z))
(LetCmd
 (TupleLValue
  (TupleLValue (ArgLValue (ArrayArgument B h)))
  (TupleLValue
   (TupleLValue (ArgLValue (VarArgument R)))
   (ArgLValue (ArrayArgument D o C))))
 (IfExpr
  (FalseExpr)
  (ArrayLiteralExpr (TrueExpr))
  (TupleLiteralExpr (FalseExpr))))
(PrintCmd "9")
(AssertCmd (SumLoopExpr E (TupleLiteralExpr (CallExpr i)) (VarExpr i)) "")
(WriteCmd (FloatExpr 0) "")
(TimeCmd
 (WriteCmd
  (IfExpr (TupleLiteralExpr (VarExpr k)) (CallExpr g) (ArrayLiteralExpr))
  ""))
(PrintCmd "G")
(LetCmd
 (TupleLValue
  (TupleLValue (ArgLValue (VarArgument e)) (ArgLValue (VarArgument Z)))
  (TupleLValue
   (ArgLValue (ArrayArgument g m))
   (TupleLValue (ArgLValue (ArrayArgument x o)) (TupleLValue (TupleLValue)))))
 (CallExpr Y (TupleIndexExpr (FloatExpr 0) 83)))
(WriteCmd
 (SumLoopExpr
  (TupleIndexExpr
   (ArrayIndexExpr
    (FloatExpr 0)
    (IfExpr (FloatExpr 537) (TupleLiteralExpr) (FloatExpr 9)))
   2))
 "")
(PrintCmd "^")
(TypeCmd l (ArrayType (FloatType) 2))
(WriteCmd (TupleIndexExpr (FloatExpr 6) 5) "?")
(LetCmd (ArgLValue (VarArgument c)) (CallExpr q (FloatExpr 0) (FalseExpr)))
(TypeCmd W (IntType))
(AssertCmd (ArrayIndexExpr (FalseExpr)) "")
(PrintCmd "")
(ReadCmd "" (VarArgument r))
(TypeCmd V (FloatType))
(LetCmd (ArgLValue (ArrayArgument W E D p)) (CallExpr a))
