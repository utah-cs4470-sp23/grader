show { array [ ] false }
show { C ( ) , }
assert T , +
show H
let { t [ E ] , { } } = ( [ ] )
write image 3 to ]|
let J [ L , A ] = array [ ] .42612
show { ( W ) { 9 } } [ .3 , true ]
type c = y
type s = int
write image { } to 
write image ( false ) [ .52 ] to 
type C = bool
type c = { { o , } [ , , , , ] }
let { I , { w } } = K { 44 }
read image  to o [ a ]
show 4
write image false to U
let { { } , { { S [ Q ] } , h } } = 75
print z@^Z3
show { 31 , }
read image S to a [ l , q ]
write image true to k?
assert ( ( true ) ) [ .2 ] , .
type p = int
write image [ [ ] [ ] , false ] to b
let o [ a ] = ( if true then false else ( 5 ) ) read assert ( ( sum [ ] true ) ) , 
type N = { }

 image  to w [ u , R ]
show .1175
print 
type F = float 
