global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float

section .data
const0: dq 7
const1: db `a.png`, 0
const2: db `(ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)`, 0
const3: db `(IntType)`, 0

section .text
jpl_main:
_jpl_main:
	push rbp
	mov rbp, rsp
	push r12
	mov r12, rbp
	mov rax, [rel const0] ; 7
	push rax
	sub rsp, 24
	lea rdi, [rsp]
	sub rsp, 8 ; Align stack
	lea rsi, [rel const1] ; a.png
	call _read_image
	add rsp, 8 ; Remove alignment
	sub rsp, 24
	; Moving 24 bytes from rbp - 40 to rsp
		mov r10, [rbp - 40 + 16]
		mov [rsp + 16], r10
		mov r10, [rbp - 40 + 8]
		mov [rsp + 8], r10
		mov r10, [rbp - 40 + 0]
		mov [rsp + 0], r10
	lea rdi, [rel const2] ; (ArrayType (TupleType (FloatType) (FloatType) (FloatType) (FloatType)) 2)
	lea rsi, [rsp]
	call _show
	add rsp, 24
	sub rsp, 8
	; Moving 8 bytes from rbp - 40 to rsp
		mov r10, [rbp - 40 + 0]
		mov [rsp + 0], r10
	lea rdi, [rel const3] ; (IntType)
	lea rsi, [rsp]
	call _show
	add rsp, 8
	sub rsp, 8
	; Moving 8 bytes from rbp - 32 to rsp
		mov r10, [rbp - 32 + 0]
		mov [rsp + 0], r10
	lea rdi, [rel const3] ; (IntType)
	lea rsi, [rsp]
	call _show
	add rsp, 8
	add rsp, 32 ; Local variables
	pop r12
	pop rbp
	ret
