fn a(b : bool) : bool {
  let {} = {}
  return false
  let c = (- {{987}}{0}{0})
  let d[e] = [asin(atan(log(98.39)))]
  return (! {{true}}{0}{0})
}

let {{b}} = {{{(argnum / argnum)}}}{0}
type c = {bool}
let d[e] = {args}{0}
type f = float
let {{{}}} = {{{{}}}}{0}
fn g() : f[] {
  let {{}} = {{{{}}}{0}{0}}
  assert (! true), "h"
  assert (to_int(log(exp(65.69))) > b), "h"
  let {{}} = {{{{}}}{0}}{0}
  return [to_float(823)]
}

fn h({  }, { i[j] : c[] }) : {} {
  let k = (- log(pow(exp(19.44), exp(pow(74.69, 51.37)))))
  let {l[m]} = {{{args}}}{0}{0}
  return {}
  let {} = {{{}}}{0}{0}
}

fn i(j : f, { k : {{}} }, l[m] : float[]) : c[] {
  let n[o] = g()
  let {{p[q]}} = {{{d}}}{0}
  let r[s] = p
  let {t} = {sin(acos(asin(to_float(150))))}
  return {[{(false == false)}]}{0}
}

let j = [{(b - to_int(19.63))}{0}]
let k = to_float(e)
let l[m] = [({(- e)}{0} - argnum)]
