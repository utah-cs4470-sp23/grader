let a = argnum
fn b(c[d] : bool[], e[f] : int[]) : bool {
  let {} = {{{}}{0}}{0}
  let g[h] = c
  let i = ((! (! (! true))) == false)
  let j = {cos(acos(acos(11.38)))}{0}
  return ({i}{0} == (! ((sin(2.83) == sin(24.83)) != (false == (d == f)))))
}

let c = (- to_int(asin(cos(sqrt(79.3)))))
let {} = {{{}}}{0}{0}
read image "d.png" to d

read image "e.png" to e

let f = sqrt(log(34.19))
let {{g}} = {{{51.85}}}{0}
let {} = {{}}{0}
fn h({  }) : float {
  return asin(atan(sqrt(f)))
  let {} = {}
  let i[j] = [(argnum % (to_int(log(36.79)) - argnum))]
  let {} = {{{}}{0}}{0}
  return g
}

fn i(j : {int}) : bool {
  let {k[l]} = {{args}}{0}
  let {m[n]} = {{args}}{0}
  return (! ((- to_int(tan(f))) == 426))
  let o[p] = [(! (! (! (n != c))))]
  return (! (! {b(o, k)}{0}))
}

fn j(k[l] : int[], m : int, n : bool[]) : bool {
  let o = ({m}{0} > 451)
  let p[q] = args
  let r = e
  return (! (((- 275) - {m}{0}) <= {484}{0}))
  return ((! {false}{0}) != (! ({a}{0} < a)))
}

