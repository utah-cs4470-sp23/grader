global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: dq 99.38
const1: dq 85.89
const2: dq 40.19
const3: dq 87.43
const4: db `(IntType)`, 0
const5: db `h.png`, 0
const6: dq 6.12
const7: dq 28.89
const8: dq 27.99
section .text
g:
_g:
push rbp
mov rbp, rsp
mov rax, [rel const0]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 0
pop rbp
ret
sub rsp, 8
mov r10, [r12 - 24]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [r12 - 32]
mov [rsp + 8], r10
mov r10, [r12 - 40]
mov [rsp + 0], r10
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 8]
mov [rsp + 0], r10
pop rax
neg rax
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _cos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
sub rsp, 8
mov rax, [rel const1]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const2]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
n:
_n:
push rbp
mov rbp, rsp
push rdi
mov rax, [rel const6]
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rbp - 8]
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 16
pop rbp
ret
sub rsp, 16
mov r10, [r12 - 32]
mov [rsp + 8], r10
mov r10, [r12 - 40]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [r12 - 48]
mov [rsp + 8], r10
mov r10, [r12 - 56]
mov [rsp + 0], r10
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 16
mov r10, [r12 - 32]
mov [rsp + 8], r10
mov r10, [r12 - 40]
mov [rsp + 0], r10
call _g
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const7]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const8]
push rax
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _fmod
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rbp - 8]
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 72
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 16
mov r10, [rbp - - 8]
mov [rsp + 8], r10
mov r10, [rbp - - 16]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - - 8]
mov [rsp + 8], r10
mov r10, [rbp - - 16]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - 16]
mov [rsp + 8], r10
mov r10, [rbp - 24]
mov [rsp + 0], r10
sub rsp, 8
call _g
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 40]
mov [rsp + 0], r10
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - - 16]
mov [rsp + 0], r10
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
call _g
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
call _g
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const3]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
lea rdi, [rel const4]
lea rsi, [rsp]
call _show
add rsp, 8
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const5]
call _read_image
sub rsp, 16
mov r10, [rbp - 16]
mov [rsp + 8], r10
mov r10, [rbp - 24]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - 48]
mov [rsp + 8], r10
mov r10, [rbp - 56]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - 32]
mov [rsp + 8], r10
mov r10, [rbp - 40]
mov [rsp + 0], r10
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
add rsp, 0
sub rsp, 8
sub rsp, 8
sub rsp, 16
mov r10, [rbp - 104]
mov [rsp + 8], r10
mov r10, [rbp - 112]
mov [rsp + 0], r10
lea rdi, [rsp + 24]
call _n
add rsp, 16
add rsp, 8
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
add rsp, 128
pop r12
pop rbp
ret
