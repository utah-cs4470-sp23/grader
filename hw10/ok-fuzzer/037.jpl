fn a(b[c] : int[]) : {int} {
  let d[e] = args
  let f[g] = [to_float(c)]
  let h[i] = b
  let j[k] = d
  return {{c}}{0}
}

let b[c] = [argnum]
time let {d[e]} = {{args}}{0}

fn f(g : bool, h : {float}, i : int[]) : int {
  let j[k] = {{i}}{0}{0}
  assert (sin(sin(exp(tan(33.8)))) != sqrt(42.73)), "l"
  let {} = {{}}{0}
  let l[m] = j
  return k
}

show (- cos(to_float(c)))

let g[h] = [(! true)]
print "i"

let i[j] = [e]
fn k(l[m] : bool[], n[o] : int[], {  }) : float {
  let p = sin(to_float((983 / j)))
  return asin(atan2(log(pow(44.43, cos(p))), cos(sqrt(exp(p)))))
  let {{q}} = {{a(b)}}{0}
  let r = (! (! ({q}{0} != o)))
  return {{sqrt(3.41)}}{0}{0}
}

let l[m] = {{b}{0}}{0}
assert {{false}}{0}{0}, "n"
assert (! (! (exp(sin(90.91)) > {25.03}{0}))), "n"
