fn a(b[c] : int[], d[e] : float[]) : float {
  let f[g] = {d}{0}
  let h[i] = [asin(sqrt(acos(to_float(462))))]
  let j[k] = d
  let l[m] = b
  return (- sin({to_float(m)}{0}))
}

let b = ({{99.44}}{0}{0} >= asin((log(atan2(26.39, 26.99)) % atan(sqrt(53.48)))))
fn c(d[e] : int[], { {  } }, f[g] : float[]) : bool {
  let h = ((295 * argnum) * (e % 665))
  let {} = {}
  let i = args
  let {j} = {(! {true}{0})}
  return (! true)
}

fn d() : float {
  let e[f] = [tan(log(56.97))]
  let {} = {}
  let g[h] = args
  let i = f
  return atan((- acos(acos(acos(4.68)))))
}

assert (b == {{true}}{0}{0}), "e"
type e = {}[]
let f = 61.85
let g[h] = {{args}}{0}{0}
let i = [(a([(- h)], [log(32.43)]) <= (- sin(acos(52.45))))]
let j[k] = args
let l = 3.16
fn m(n : e, o : e[], p : bool) : bool {
  assert true, "q"
  assert ((- 290) <= (- h)), "q"
  let q = (k == (- (506 / h)))
  let r = l
  return (! p)
}

