let a[b] = [(- {argnum}{0})]
let c[d] = a
let e[f] = args
let {} = {}
show (((b % (- (argnum * argnum))) % d) <= to_int(exp(83.84)))

fn g({ h : float }) : int {
  let {} = {}
  let i[j] = c
  let k = to_int(cos(to_float(j)))
  let {l[m]} = {i}
  return {k}{0}
}

let h = args
let {} = {{{}}{0}}{0}
let i[j] = h
fn k() : int {
  let l[m] = e
  let {n} = {{{l}}}{0}{0}
  return (to_int(exp(asin(to_float(f)))) - j)
  return 67
  return (334 + argnum)
}

let l[m] = e
let {n[o]} = {{{i}}{0}{0}}
