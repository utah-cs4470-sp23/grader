global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: db `c.png`, 0
const1: dq 9.08
const2: dq 50.6
const3: dq 627
const4: dq 81.18
const5: dq 2.18
const6: dq 644
const7: dq 322
const8: dq 26.06
const9: dq 400
const10: dq 708
const11: dq 56.57
const12: dq 271
section .text
d:
_d:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
movsd [rsp], xmm0
add rsp, 0
add rsp, 0
mov rax, [rel const1]
push rax
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [r12 - - 16]
mov [rsp + 0], r10
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 16
mov r10, [r12 - - 8]
mov [rsp + 8], r10
mov r10, [r12 - - 16]
mov [rsp + 0], r10
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 24]
mov [rsp + 0], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov r10, [rbp - 16]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - 24]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmpneqsd xmm0, xmm1
movq rax, xmm0
and rax, 1
push rax
pop rax
add rsp, 48
pop rbp
ret
g:
_g:
push rbp
mov rbp, rsp
add rsp, 0
mov rax, [rel const2]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const3]
push rax
sub rsp, 8
mov r10, [r12 - 64]
mov [rsp + 0], r10
pop rax
pop r10
imul rax, r10
push rax
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const4]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _exp
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmplesd xmm0, xmm1
movq rax, xmm0
and rax, 1
push rax
add rsp, 0
add rsp, 0
sub rsp, 8
mov rax, [rel const5]
push rax
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rel const6]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const7]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
pop rax
neg rax
push rax
pop rdi
movsd xmm0, [rsp]
add rsp, 8
call _d
add rsp, 16
add rsp, 8
push rax
mov rax, [rel const8]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
mov rax, [rel const9]
push rax
pop rax
neg rax
push rax
pop rax
pop r10
imul rax, r10
push rax
pop rax
add rsp, 16
pop rbp
ret
k:
_k:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 80]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _sin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov r10, [r12 - 80]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmplesd xmm1, xmm0
movq rax, xmm1
and rax, 1
push rax
pop rax
xor rax, 1
push rax
mov rdi, 8
call _jpl_alloc
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
sub rsp, 8
sub rsp, 8
mov r10, [rbp - - 16]
mov [rsp + 0], r10
pop rax
neg rax
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 72]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 80]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 80]
mov [rsp + 0], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _exp
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 72]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _log
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
sub rsp, 8
mov r10, [r12 - 72]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
l:
_l:
push rbp
mov rbp, rsp
sub rsp, 16
mov r10, [r12 - - 8]
mov [rsp + 8], r10
mov r10, [r12 - - 16]
mov [rsp + 0], r10
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rel const12]
push rax
sub rsp, 8
mov r10, [r12 - 24]
mov [rsp + 0], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
pop rax
pop r10
cmp rax, r10
sete al
and rax, 1
push rax
add rsp, 0
add rsp, 0
sub rsp, 8
mov r10, [rbp - 24]
mov [rsp + 0], r10
pop rax
add rsp, 24
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 16
mov r10, [rbp - - 8]
mov [rsp + 8], r10
mov r10, [rbp - - 16]
mov [rsp + 0], r10
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const0]
call _read_image
sub rsp, 16
mov r10, [rbp - 16]
mov [rsp + 8], r10
mov r10, [rbp - 24]
mov [rsp + 0], r10
mov rax, [rel const10]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - - 16]
mov [rsp + 0], r10
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const11]
push rax
sub rsp, 8
mov r10, [rbp - 72]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 72]
mov [rsp + 0], r10
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov r10, [rbp - 64]
mov [rsp + 0], r10
add rsp, 88
pop r12
pop rbp
ret
