global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: db `a.png`, 0
const1: db `b.png`, 0
const2: dq 79.55
const3: dq 469
const4: dq 231
const5: db `mod by zero`, 0
const6: dq 0
const7: dq 58.46
const8: dq 66.49
const9: dq 87.61
const10: dq 93.91
const11: dq 27.4
const12: dq 36.18
const13: db `i.png`, 0
section .text
e:
_e:
push rbp
mov rbp, rsp
mov rax, [rel const2]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
mov rax, [rel const3]
push rax
mov rax, [rel const4]
push rax
pop rax
pop r10
cmp r10, 0
jne .jump1
sub rsp, 8
lea rdi, [rel const5]
call _fail_assertion
add rsp, 8
.jump1:
cqo
idiv r10
mov rax, rdx
push rax
pop rax
pop r10
cmp rax, r10
sete al
and rax, 1
push rax
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
sub rsp, 8
mov r10, [rbp - - 16]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - - 8]
mov [rsp + 8], r10
mov r10, [rbp - - 16]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - - 16]
mov [rsp + 0], r10
pop rax
add rsp, 40
pop rbp
ret
h:
_h:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
mov rax, [rel const8]
push rax
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 88]
mov [rsp + 0], r10
mov rax, [rel const9]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const10]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
sub rsp, 8
mov r10, [r12 - 72]
mov [rsp + 0], r10
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov r10, [r12 - 80]
mov [rsp + 0], r10
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rbp - 8]
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 48
pop rbp
ret
sub rsp, 16
mov r10, [rbp - 24]
mov [rsp + 8], r10
mov r10, [rbp - 32]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [r12 - 80]
mov [rsp + 0], r10
sub rsp, 8
mov rax, [rel const11]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const12]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmpltsd xmm1, xmm0
movq rax, xmm1
and rax, 1
push rax
pop rax
xor rax, 1
push rax
pop rax
pop r10
cmp rax, r10
setne al
and rax, 1
push rax
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rax, [rbp - 8]
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 80
pop rbp
ret
j:
_j:
push rbp
mov rbp, rsp
sub rsp, 24
mov r10, [r12 - 16]
mov [rsp + 16], r10
mov r10, [r12 - 24]
mov [rsp + 8], r10
mov r10, [r12 - 32]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [r12 - 88]
mov [rsp + 0], r10
sub rsp, 24
mov r10, [r12 - 40]
mov [rsp + 16], r10
mov r10, [r12 - 48]
mov [rsp + 8], r10
mov r10, [r12 - 56]
mov [rsp + 0], r10
mov rdi, 24
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 16]
mov [rax + 16], r10
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 24
push rax
mov rax, 1
push rax
sub rsp, 8
mov r10, [r12 - 72]
mov [rsp + 0], r10
pop rax
add rsp, 48
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const0]
call _read_image
sub rsp, 24
lea rdi, [rsp]
sub rsp, 8
lea rsi, [rel const1]
call _read_image
add rsp, 8
sub rsp, 16
mov r10, [rbp - - 8]
mov [rsp + 8], r10
mov r10, [rbp - - 16]
mov [rsp + 0], r10
mov rax, [rel const6]
push rax
add rsp, 0
add rsp, 0
mov rax, [rel const7]
push rax
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const13]
call _read_image
sub rsp, 24
mov r10, [rbp - 40]
mov [rsp + 16], r10
mov r10, [rbp - 48]
mov [rsp + 8], r10
mov r10, [rbp - 56]
mov [rsp + 0], r10
mov rdi, 24
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 16]
mov [rax + 16], r10
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 24
push rax
mov rax, 1
push rax
add rsp, 120
pop r12
pop rbp
ret
