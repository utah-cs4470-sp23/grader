assert (! false), "a"
fn a() : bool {
  let b = false
  let {{c}} = {{{(false != b)}}}{0}
  let d[e] = {args}{0}
  let {f[g]} = {{args}}{0}
  return {{(false != false)}}{0}{0}
}

let b = 7.71
let c = to_int(41.51)
let {{}} = {{{{}}{0}}}{0}
assert {(to_float((457 - 631)) >= {b}{0})}{0}, "d"
read image "d.png" to d

let e[f] = [(- pow(10.54, atan(75.48)))]
type g = bool
fn h(i[j] : bool[], k[l] : g[]) : int {
  assert {{(l != argnum)}}{0}{0}, "m"
  return ({{c}{0}}{0} + l)
  let {m[n]} = {k}
  let o[p] = i
  return f
}

fn i(j[k] : bool[]) : float {
  let {} = {}
  let {l} = {{{f}}}{0}{0}
  assert {false}{0}, "m"
  let m[n] = [pow(exp(log(b)), sin(to_float(f)))]
  return (b + b)
}

let {j} = {{{a()}}}{0}{0}
