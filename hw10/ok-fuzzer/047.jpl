let a = tan(to_float(argnum))
fn b(c[d] : float[], e[f] : float[]) : {float} {
  return {{{64.45}}{0}}{0}
  return {sqrt(atan2(64.86, exp(exp(a))))}
  let g = c
  let h = sqrt({{a}}{0}{0})
  return {cos(h)}
}

let c[d] = {[sin(atan(a))]}{0}
let {} = {{{}}}{0}{0}
let e = (false != true)
fn f() : {bool} {
  return {{{false}}}{0}{0}
  let g = c
  let h = (- argnum)
  return {(! e)}
  return {(169 < 351)}
}

fn g({  }, h[i] : bool[]) : int {
  let j = [(54.39 / (b(c, c){0} % asin(acos(38.04))))]
  let {} = {}
  let k[l] = j
  let {m} = f()
  return (- l)
}

let h[i] = [(! e)]
let {} = {{}}{0}
fn j({ k[l] : bool[] }, m[n] : float[], o[p] : float[]) : float {
  let {} = {{{}}{0}}{0}
  let q[r] = {{m}}{0}{0}
  let s[t] = k
  let {} = {}
  return asin(pow(log(atan2(acos(58.56), sin(a))), sqrt((a % tan(96.88)))))
}

let k = argnum
let {} = {{{}}}{0}{0}
