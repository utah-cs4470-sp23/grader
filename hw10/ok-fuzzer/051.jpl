assert true, "a"
fn a() : float[] {
  let b = atan2(atan(sqrt(log(93.67))), atan(exp(atan(to_float(argnum)))))
  let {{}} = {{{{}}}}{0}{0}
  assert true, "c"
  let {} = {}
  return [acos(pow(exp(log(b)), tan(asin(55.33))))]
}

let b[c] = args
read image "d.png" to d

let {} = {}
fn e(f[g] : {}[]) : float {
  return exp(to_float(g))
  let h[i] = a()
  assert {(tan(91.07) != (- log(56.95)))}{0}, "j"
  let j[k] = f
  return sin(asin(tan(99.6)))
}

assert ({{argnum}}{0}{0} == 142), "f"
let {} = {}
fn f(g : int[], {  }) : int {
  let h = sin(log((- asin(log(28.48)))))
  let {} = {}
  let {} = {}
  let i[j] = args
  return 497
}

write image d to "g.png"

write image {{d}}{0}{0} to "g.png"

let g[h] = args
