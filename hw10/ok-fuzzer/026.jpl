let a[b] = args
let c[d] = args
fn e() : int {
  let f = (! ((atan(asin(16.41)) < pow(to_float(argnum), asin(34.05))) == (((argnum - b) == (705 % argnum)) == (! (! true)))))
  let g = to_int(cos(pow(55.71, cos(to_float(942)))))
  let {h} = {to_int({asin(15.25)}{0})}
  let {} = {}
  return h
}

let f[g] = [asin(sqrt((- 49.73)))]
let h[i] = args
fn j() : {bool} {
  return {(log((98.25 % tan(90.93))) < 90.08)}
  let {k[l]} = {{args}}{0}
  let {m} = {exp({(- 95.93)}{0})}
  let n[o] = args
  return {{{true}}{0}}{0}
}

show atan2((- asin(sin(10.35))), pow(atan({33.84}{0}), (- atan(tan(12.9)))))

fn k() : float[] {
  let l = argnum
  return f
  let {{m[n]}} = {{{f}}}{0}
  let o = f
  return f
}

let l = (- log(sqrt(tan(97.18))))
let {} = {{}}{0}
let m[n] = c
let o[p] = [argnum]
