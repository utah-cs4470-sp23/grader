fn a(b[c] : bool[], d : bool) : float[] {
  let e[f] = b
  let {{g[h]}} = {{{args}}}{0}
  let i = (exp((- 99.56)) == pow(atan(sqrt(to_float(argnum))), pow({45.1}{0}, tan(sin(23.7)))))
  assert i, "j"
  return {{[9.0]}}{0}{0}
}

fn b({ c[d] : int[] }) : bool {
  let {{e[f]}} = {{{c}}}{0}
  let g[h] = [(47.49 + cos(acos(exp(34.5))))]
  let i[j] = c
  let {} = {{{}}{0}}{0}
  return ({true}{0} != (log(cos(to_float(h))) != cos({98.72}{0})))
}

read image "c.png" to c

let d[e] = a({[(729 >= argnum)]}{0}, (! {(! true)}{0}))
fn f(g : bool) : bool {
  let {} = {}
  return (sqrt(exp((- sqrt(26.18)))) < sin(atan2(pow(16.98, asin(88.46)), atan2(9.31, sqrt(15.99)))))
  assert g, "h"
  let h = atan2(to_float(401), to_float({(argnum % e)}{0}))
  return g
}

fn g() : float {
  let h[i] = a({[true]}{0}, {((636 <= 471) == f(false))}{0})
  let j[k] = {{[argnum]}}{0}{0}
  let l = to_float(816)
  let m = j
  return tan((to_float(i) - atan2(99.85, tan(sin(39.71)))))
}

fn h({  }, i : {bool}) : int[] {
  let j = i
  let {} = {{}}{0}
  let k = ((- e) != e)
  let {} = {}
  return [{{11}{0}}{0}]
}

let i = c
assert ({{652}}{0}{0} > to_int(asin((- to_float(e))))), "j"
assert ({{70}}{0}{0} >= 256), "j"
let j[k] = d
fn l({  }, m[n] : bool[], {  }) : int {
  assert b({{args}{0}}), "o"
  let o = sin(pow(sqrt(atan2(asin(g()), 26.35)), 8.66))
  return {argnum}{0}
  let p = d
  return k
}

