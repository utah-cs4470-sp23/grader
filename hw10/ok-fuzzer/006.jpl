fn a(b : {}[], c : int, d[e] : int[]) : float {
  let f = args
  let g[h] = f
  let i = {asin(sin(to_float(h)))}{0}
  let j[k] = b
  return 7.74
}

fn b() : {} {
  let {c} = {sqrt(a([{}], 240, {args}{0}))}
  let d[e] = [37.88]
  let f = asin({{c}}{0}{0})
  let {{}} = {{{{}}}}{0}{0}
  return {}
}

let c = {{asin(77.57)}}{0}{0}
let d[e] = args
let f = to_int(atan((- sqrt(tan(44.25)))))
let g[h] = {d}{0}
fn i() : bool {
  let j = sqrt(to_float(h))
  let k = (acos(exp((- exp(46.24)))) > 6.78)
  let l = (! {{false}}{0}{0})
  let m[n] = d
  return k
}

let j = cos(a([{}], f, d))
fn k(l : bool, m : int, { { n : bool } }) : {} {
  return {{{}}}{0}{0}
  let o[p] = {[true]}{0}
  let q = (sqrt(tan(tan(j))) - tan({j}{0}))
  let r[s] = {{d}}{0}{0}
}

let l[m] = args
let n = (- (- log(a([{}], argnum, args))))
let o[p] = args
