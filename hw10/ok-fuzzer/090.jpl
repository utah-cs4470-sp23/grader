fn a() : bool {
  let b[c] = args
  let d[e] = [tan((atan2(sin(11.05), to_float(argnum)) / log(70.36)))]
  let f[g] = args
  let h = e
  return (({e}{0} % c) <= c)
}

let b = tan(pow(7.22, 63.96))
fn c() : float {
  let d = acos(sqrt((- pow(to_float(150), asin(b)))))
  let {e} = {{{b}}{0}}{0}
  let {{}} = {{{{}}}}{0}{0}
  let {f[g]} = {{{args}}}{0}{0}
  return d
}

let d[e] = [b]
let {} = {}
fn f(g[h] : float[], i : float[], j : int) : {}[] {
  let k = argnum
  let l[m] = [(- argnum)]
  let n[o] = d
  let p[q] = g
  return {{[{}]}{0}}{0}
}

fn g({ h : int[] }, i[j] : float[], { k : float }) : int {
  let l[m] = h
  let {n} = {a()}
  let {} = {}
  let o = [(n != (tan(78.7) < tan(acos(k))))]
  return (- (120 / j))
}

fn h(i[j] : int[]) : bool {
  let {} = {{{}}}{0}{0}
  let {k[l]} = {i}
  let m[n] = k
  let o[p] = d
  return ({{p}}{0}{0} <= (- to_int(23.2)))
}

let i = 108
fn j() : bool {
  let k[l] = [true]
  let m = (! (true == false))
  let n[o] = {{args}{0}}{0}
  let p[q] = n
  return (e > g({args}, [pow(c(), to_float(331))], {17.08}))
}

fn k(l : bool, m[n] : float[], o : {}) : float {
  return cos(c())
  let {p} = {to_float(to_int(log(sin(c()))))}
  let q[r] = [m]
  let {s[t]} = {{{args}}{0}}{0}
  return c()
}

let l = sin(asin(atan(cos(atan(c())))))
