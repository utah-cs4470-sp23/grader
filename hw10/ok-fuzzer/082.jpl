let a = sqrt(sqrt((exp(8.62) - sin(66.65))))
let {} = {{}}{0}
let b = pow(atan2(acos(89.94), atan2(a, a)), atan(atan(tan(a))))
fn c(d[e] : bool[], f : {}) : {float} {
  return {atan(((- 95.23) - atan(exp(92.42))))}
  let g = args
  let {h} = {log(sqrt(atan(b)))}
  let i = a
  return {(b / tan(log(atan(h))))}
}

let d[e] = args
let f = sin(sin(to_float(argnum)))
fn g(h : bool, {  }, {  }) : {} {
  let i = a
  let j = sqrt(asin(atan(i)))
  let {k[l]} = {{{args}}}{0}{0}
  let m[n] = d
  return {}
}

let {} = {{}}{0}
let {h[i]} = {d}
fn j() : bool {
  let k[l] = d
  let m[n] = h
  let {} = {}
  let {} = {{{}}{0}}{0}
  return (! (l != to_int(to_float(l))))
}

fn k(l : float, m[n] : int[]) : bool {
  let o = (acos(b) <= atan2(to_float((- (- 472))), ((- (- a)) - a)))
  let p = h
  let q[r] = p
  let s[t] = m
  return j()
}

let l = argnum
