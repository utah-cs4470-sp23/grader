fn a() : bool {
  let b = atan2((((0.57 / asin(15.38)) + sqrt(atan(2.53))) * (- cos(asin(86.77)))), log(38.89))
  let c[d] = args
  return true
  let e[f] = {{args}{0}}{0}
  return (! (argnum < d))
}

let {} = {{{}}}{0}{0}
let b = (808 == argnum)
fn c() : {} {
  let d = a()
  let e = argnum
  let f = asin(atan2(cos(log(84.73)), cos((- 57.36))))
  let g[h] = {{args}{0}}{0}
  return {{{}}}{0}{0}
}

let d[e] = args
fn f() : float {
  let g[h] = {args}{0}
  let {} = c()
  let {i[j]} = {d}
  let k[l] = g
  return asin((sin(sqrt(tan(48.36))) / log(96.75)))
}

let g = (e > 624)
show ((- (to_int(to_float(e)) + e)) == argnum)

fn h(i : int) : int[] {
  let j = pow(asin(pow(asin((- 92.07)), exp(f()))), log(acos(to_float(290))))
  let k = tan(acos(cos(sin(tan(f())))))
  let l[m] = d
  return d
  return [((- i) / m)]
}

let {i[j]} = {{{args}}}{0}{0}
let k[l] = i
let {} = c()
