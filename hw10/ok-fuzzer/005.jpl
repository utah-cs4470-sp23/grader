let a = ({373}{0} % to_int(sin(to_float((- argnum)))))
let {} = {}
time let b[c] = args

let d[e] = b
fn f(g[h] : float[], i : int, { { { {  } } } }) : {}[] {
  let j = acos(sqrt(log(atan(cos(16.58)))))
  let k = sqrt(cos(j))
  assert (k >= k), "l"
  let l = {}
  return {{[l]}}{0}{0}
}

let g[h] = b
let {i[j]} = {{{g}}}{0}{0}
let {k} = {{{i}}{0}}{0}
fn l() : float {
  let m = ({atan(35.13)}{0} <= pow(tan(atan2(sqrt(64.25), atan(24.88))), atan2({42.51}{0}, sqrt((52.52 / 17.17)))))
  let n[o] = i
  assert m, "p"
  let {} = {{{}}{0}}{0}
  return pow(85.39, exp(atan(cos(to_float(j)))))
}

let {m[n]} = {{args}}{0}
fn o({  }, { {  } }) : {bool} {
  let {} = {}
  return {{(52 <= argnum)}{0}}
  return {{{true}}}{0}{0}
  let p = 411
  return {{{true}}{0}}{0}
}

let p = k
