let a = sqrt({{18.19}}{0}{0})
let b[c] = args
let d = (! ((- {argnum}{0}) <= (c * {argnum}{0})))
let e[f] = {{b}{0}}{0}
type g = float
type h = {}
fn i({ j[k] : int[] }, l[m] : bool[], n : bool) : int {
  let o = (- {f}{0})
  let p = [c]
  let q = [m]
  let r = pow((- sqrt(atan2(to_float(f), 18.04))), atan2(sqrt(log(a)), atan((to_float(argnum) / tan(40.04)))))
  return 504
}

fn j() : {g} {
  let k = atan(to_float({(c % f)}{0}))
  let {} = {{{}}}{0}{0}
  assert d, "l"
  return {{{29.47}}}{0}{0}
  return {{(- atan(13.9))}}{0}
}

let {k} = {{{false}}}{0}{0}
let {} = {}
print "l"

type l = float
