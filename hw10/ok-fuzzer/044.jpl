let a = 827
let b = (to_float((- (argnum % argnum))) <= asin(cos(acos(to_float(a)))))
let c = false
let d[e] = args
print "f"

let {} = {}
fn f() : bool[] {
  let g = pow((atan(pow(37.89, acos(91.83))) + sin(acos(acos(62.98)))), pow(to_float((- argnum)), 26.17))
  let h = 98.72
  let i[j] = [g]
  let {{}} = {{{{}}}}{0}{0}
  return {{[c]}}{0}{0}
}

print "g"

fn g({ { h[i] : int[] } }, { j : float }) : bool {
  let k = (tan(pow(log(sin(51.93)), log(acos(44.36)))) < sqrt({tan(58.02)}{0}))
  let l = exp(exp(85.88))
  let {m} = {{{j}}{0}}{0}
  assert (! ((- 686) != a)), "n"
  return (a == to_int(l))
}

let h = (! g({{args}}, {sqrt(exp(27.52))}))
let {} = {}
assert c, "i"
