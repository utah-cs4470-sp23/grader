let a[b] = args
let {c[d]} = {[{b}{0}]}
let e = asin((atan((- to_float(argnum))) * atan(acos(51.11))))
fn f(g : int, { h[i] : float[] }) : {float} {
  let {j[k]} = {{[atan(90.6)]}}{0}
  let {} = {{}}{0}
  let {l} = {a}
  let {} = {}
  return {tan(sqrt(sqrt((- e))))}
}

let {} = {{{}}{0}}{0}
let g[h] = {{c}}{0}{0}
let {i} = {c}
let j[k] = args
fn l({  }, m : {bool}, n[o] : int[]) : bool {
  return (argnum != k)
  let {} = {{{}}{0}}{0}
  let p = exp(exp(tan(((e - e) % to_float(b)))))
  let q = m
  return (! (((b + (- 226)) == argnum) != ((- cos(e)) == e)))
}

let m[n] = j
let o = a
let {} = {{{}}}{0}{0}
