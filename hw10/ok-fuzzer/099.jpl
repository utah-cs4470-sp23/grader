assert (! ({(argnum + 864)}{0} >= ({argnum}{0} + (- (- argnum))))), "a"
let a[b] = {args}{0}
show tan(tan(atan2(sqrt(tan(12.06)), exp(sin(60.54)))))

type c = {float}
let d[e] = {{args}}{0}{0}
let f[g] = a
let h[i] = f
let j[k] = f
assert (cos((- atan2(cos(80.41), log(74.13)))) == (sin(tan(log(81.12))) + tan(log(sqrt(86.79))))), "l"
fn l(m : c, n : c) : c[] {
  return {{[m]}}{0}{0}
  assert (g < e), "o"
  let o[p] = h
  return {{[n]}{0}}{0}
  return {[m]}{0}
}

fn m() : c {
  let n = sqrt(((- (- to_float(b))) * cos(exp(log(13.08)))))
  let {{o}} = {{{sqrt(18.79)}}}{0}
  let {} = {{{}}{0}}{0}
  return {{sqrt(to_float(k))}}{0}
  return {{{o}}{0}}{0}
}

print "n"

