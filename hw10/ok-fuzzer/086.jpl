let {{{a}}} = {{{{691}}}}{0}
let b[c] = args
fn d({  }, { e[f] : bool[] }) : {} {
  let {} = {}
  let g[h] = e
  let {i} = {atan((exp(98.32) % acos(atan(12.32))))}
  return {}
}

let e = cos(pow(atan2(log(to_float(c)), 15.89), cos(69.43)))
let {f[g]} = {{{b}}{0}{0}}
let h[i] = b
let {j} = {pow(cos(asin(e)), (- sin(asin(e))))}
fn k({ { l[m] : int[] } }) : {} {
  let n = f
  return d(d({{}}{0}, {[false]}), {{[false]}}{0})
  let {} = d({}, {[((- i) != g)]})
  let o[p] = h
  return {{{}}}{0}{0}
}

fn l(m : bool) : {} {
  return {}
  let n[o] = [f]
  let p = (- to_int(asin(tan(exp(e)))))
  let {q[r]} = {{b}}{0}
  return k({{{args}}}{0})
}

fn m(n[o] : {}[]) : {float} {
  return {cos(to_float(o))}
  let {{{p[q]}}} = {{{{h}}}{0}}
  let {} = d(k({{b}}), {{[false]}}{0})
  let r[s] = f
  return {{{e}}}{0}{0}
}

fn n(o[p] : bool[], q[r] : int[], s[t] : {}[]) : float {
  let u = [(t - a)]
  let v = (r == p)
  return e
  let w = 64.68
  return to_float(c)
}

let o = (to_int(sqrt(asin(tan(j)))) % 127)
