global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: dq 90.24
const1: dq 54.49
const2: dq 0
const3: dq 54.6
const4: dq 102
const5: dq 916
const6: dq 360
const7: dq 9.8
const8: dq 56.92
const9: dq 89.98
const10: dq 44.53
const11: dq 460
const12: dq 91.12
const13: dq 38.06
const14: db `i`, 0
const15: dq 74.35
const16: dq 1
section .text
a:
_a:
push rbp
mov rbp, rsp
mov rax, [rel const0]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const1]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmpltsd xmm1, xmm0
movq rax, xmm1
and rax, 1
push rax
mov rax, [rel const2]
push rax
pop rax
xor rax, 1
push rax
pop rax
pop r10
cmp rax, r10
sete al
and rax, 1
push rax
pop rax
xor rax, 1
push rax
pop rax
xor rax, 1
push rax
sub rsp, 8
mov rax, [rel const3]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const4]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const5]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [r12 - - 16]
mov [rsp + 0], r10
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
divsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _fmod
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
call _jpl_alloc
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rax, [rel const6]
push rax
mov rdi, 8
call _jpl_alloc
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
sub rsp, 8
mov rax, [rel const7]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const8]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _cos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const9]
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const10]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 40
pop rbp
ret
m:
_m:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
mov rax, [rel const15]
push rax
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 24]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const16]
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rbp - 8]
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 24
pop rbp
ret
sub rsp, 16
mov r10, [r12 - 56]
mov [rsp + 8], r10
mov r10, [r12 - 64]
mov [rsp + 0], r10
mov r10, [rsp + 8]
mov [rsp + 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov r10, [r12 - 24]
mov [rsp + 0], r10
mov rax, [rel const16]
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rbp - 8]
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 56
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 8
mov rax, [rel const11]
push rax
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const12]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 24]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const13]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
addsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 16
mov r10, [rbp - - 8]
mov [rsp + 8], r10
mov r10, [rbp - - 16]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - 40]
mov [rsp + 8], r10
mov r10, [rbp - 48]
mov [rsp + 0], r10
call _get_time
sub rsp, 8
movsd [rsp], xmm0
lea rdi, [rel const14]
sub rsp, 8
call _print
add rsp, 8
sub rsp, 8
call _get_time
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp + 0]
subsd xmm0, xmm1
sub rsp, 8
call _print_time
add rsp, 8
sub rsp, 16
mov r10, [rbp - 56]
mov [rsp + 8], r10
mov r10, [rbp - 64]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - 40]
mov [rsp + 8], r10
mov r10, [rbp - 48]
mov [rsp + 0], r10
add rsp, 96
pop r12
pop rbp
ret
