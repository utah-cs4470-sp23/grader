fn a(b[c] : float[]) : int[] {
  let {} = {{{}}}{0}{0}
  let {} = {}
  let d = pow(asin(atan2(atan(to_float(249)), {20.72}{0})), (to_float({17}{0}) * log((62.73 / to_float(c)))))
  let {} = {{{}}{0}}{0}
  return {{[argnum]}{0}}{0}
}

let b[c] = [({argnum}{0} - (- 532))]
let d = to_int(to_float(225))
let {} = {}
fn e(f[g] : bool[], h[i] : int[], j : bool[]) : bool {
  let k[l] = h
  let m[n] = f
  let {o[p]} = {f}
  let {q[r]} = {k}
  return (49.46 < sqrt(((- 30.79) + 88.55)))
}

fn f({  }) : bool {
  let {{}} = {{{{}}{0}}{0}}
  let {} = {}
  return {{true}}{0}{0}
  let g[h] = args
  return ({{18.99}}{0}{0} != 69.6)
}

fn g({ h : float }, i[j] : int[], k : bool) : int[] {
  let l = (({exp(h)}{0} % exp(log(sin(h)))) <= 31.21)
  let m = {to_float((- j))}{0}
  let n[o] = b
  let {{}} = {{{{}}}{0}}{0}
  return b
}

fn h(i[j] : int[], k : int[], l : bool) : {} {
  assert true, "m"
  assert f({}), "m"
  let m = (912 / (- argnum))
  let {n} = {{{15.96}}{0}}{0}
}

let i = a({[81.5]}{0})
let j = i
fn k(l[m] : int[], n[o] : float[], p : {float}) : bool {
  let {{q[r]}} = {{{b}}{0}}
  let s = log(atan2(tan((- pow(73.11, 98.64))), acos(p{0})))
  let {} = {}
  let {{t[u]}} = {{g(p, q, f({}))}}
  return {{true}}{0}{0}
}

let {} = {}
