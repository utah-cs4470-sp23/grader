global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: dq 48.93
const1: dq 390
const2: dq 52.07
const3: dq 264
const4: dq 0
const5: db `g`, 0
const6: dq 76.95
const7: dq 69.93
const8: dq 73.81
const9: db `d.png`, 0
const10: dq 649
const11: dq 84.59
const12: dq 99.16
const13: db `e`, 0
const14: db `e.png`, 0
const15: dq 40.52
const16: dq 52.44
const17: db `h`, 0
const18: dq 98.3
const19: dq 75.53
const20: dq 95.07
const21: dq 41.78
const22: dq 48.59
const23: dq 42.94
const24: db `j.png`, 0
section .text
a:
_a:
push rbp
mov rbp, rsp
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const0]
push rax
sub rsp, 8
mov rax, [rel const1]
push rax
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
call _jpl_alloc
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
add rsp, 0
add rsp, 0
sub rsp, 8
mov rax, [rel const2]
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _exp
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
add rsp, 0
add rsp, 0
sub rsp, 8
mov rax, [rel const3]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _acos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 24
pop rbp
ret
b:
_b:
push rbp
mov rbp, rsp
push rdi
sub rsp, 16
mov r10, [rbp - - 2]
mov [rsp + 8], r10
mov r10, [rbp - - 6]
mov [rsp + 0], r10
add rsp, 0
add rsp, 0
mov rax, [rbp - 8]
add rsp, 24
pop rbp
ret
mov rax, [rel const4]
push rax
pop rax
xor rax, 1
push rax
pop rax
cmp rax, 0
jne .jump1
sub rsp, 8
lea rdi, [rel const5]
call _fail_assertion
add rsp, 8
.jump1:
sub rsp, 8
mov rax, [rel const6]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _acos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const7]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmpltsd xmm1, xmm0
movq rax, xmm1
and rax, 1
push rax
pop rax
cmp rax, 0
jne .jump2
sub rsp, 8
lea rdi, [rel const5]
call _fail_assertion
add rsp, 8
.jump2:
add rsp, 0
add rsp, 0
mov rax, [rbp - 8]
add rsp, 24
pop rbp
ret
g:
_g:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 8]
mov [rsp + 0], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
mov rax, [rel const16]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
pop rax
pop r10
cmp rax, r10
setle al
and rax, 1
push rax
pop rax
cmp rax, 0
jne .jump4
sub rsp, 8
lea rdi, [rel const17]
call _fail_assertion
add rsp, 8
.jump4:
sub rsp, 16
mov r10, [r12 ]
mov [rsp + 8], r10
mov r10, [r12 - 8]
mov [rsp + 0], r10
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov rax, [rel const18]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 0
mov rax, [rel const19]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _a
add rsp, 0
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
divsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const20]
push rax
sub rsp, 8
mov r10, [rbp - 2]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
pop rax
neg rax
push rax
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rax, [rbp - 8]
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 48
pop rbp
ret
sub rsp, 8
mov r10, [rbp - 4]
mov [rsp + 0], r10
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rax, [rbp - 8]
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 64
pop rbp
ret
i:
_i:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
mov rax, [rel const22]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 0
sub rsp, 8
mov r10, [r12 - 8]
mov [rsp + 0], r10
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _a
add rsp, 0
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
sub rsp, 0
mov rax, [rel const23]
push rax
sub rsp, 8
sub rsp, 8
mov r10, [r12 - 6]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _acos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
mulsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
lea rdi, [rsp + 16]
call _b
add rsp, 16
mov rdi, 0
call _jpl_alloc
add rsp, 0
push rax
mov rax, 1
push rax
sub rsp, 0
sub rsp, 16
mov r10, [rbp - - 6]
mov [rsp + 8], r10
mov r10, [rbp - - 2]
mov [rsp + 0], r10
lea rdi, [rsp + 16]
call _b
add rsp, 16
add rsp, 0
sub rsp, 8
mov r10, [rbp - - 2]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [rbp - - 6]
mov [rsp + 8], r10
mov r10, [rbp - - 2]
mov [rsp + 0], r10
mov rax, [rbp - 8]
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 56
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 0
sub rsp, 8
mov rax, [rel const8]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
lea rdi, [rsp + 24]
call _b
add rsp, 16
add rsp, 8
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const9]
call _read_image
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
pop rax
neg rax
push rax
mov rax, [rel const10]
push rax
pop rax
pop r10
add rax, r10
push rax
sub rsp, 8
mov rax, [rel const11]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
pop rax
pop r10
add rax, r10
push rax
pop rax
neg rax
push rax
sub rsp, 8
mov rax, [rel const12]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
add rsp, 8
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
pop rax
pop r10
cmp rax, r10
sete al
and rax, 1
push rax
pop rax
cmp rax, 0
jne .jump3
lea rdi, [rel const13]
call _fail_assertion
.jump3:
lea rdi, [rel const13]
call _print
sub rsp, 8
sub rsp, 24
mov r10, [rbp - 4]
mov [rsp + 16], r10
mov r10, [rbp - 6]
mov [rsp + 8], r10
mov r10, [rbp - 2]
mov [rsp + 0], r10
lea rdi, [rel const14]
call _write_image
add rsp, 24
add rsp, 8
mov rax, [rel const15]
push rax
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rax, [rel const21]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const24]
call _read_image
add rsp, 72
pop r12
pop rbp
ret
