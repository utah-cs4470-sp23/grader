print "a"

type a = float
let b[c] = [tan(exp({67.53}{0}))]
show 960

type d = a
let e[f] = args
fn g(h : {}, i[j] : float[]) : float {
  let {{}} = {h}
  let {} = {}
  let k[l] = i
  assert (l <= argnum), "m"
  return atan(atan2((84.41 - atan(asin(70.32))), tan(asin(tan(17.07)))))
}

assert ((- (- to_int((- 62.63)))) < 431), "h"
let h[i] = e
let {} = {}
assert {(to_int(log(85.53)) >= f)}{0}, "j"
let j[k] = {args}{0}
