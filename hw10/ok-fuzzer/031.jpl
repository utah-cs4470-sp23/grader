assert true, "a"
fn a(b[c] : {}[], d[e] : float[], {  }) : int {
  let {} = {}
  assert (true != (({true}{0} != true) == ((! (false == true)) != {false}{0}))), "f"
  let {} = {}
  let {f} = {argnum}
  return c
}

let {} = {}
assert (log(tan(81.28)) <= 69.06), "b"
let {b} = {{exp(94.97)}}{0}
let c[d] = [((acos(acos(49.61)) - to_float((argnum / argnum))) + cos(b))]
let e[f] = args
let g[h] = e
fn i(j[k] : int[], {  }) : float[] {
  assert (asin(b) != (asin(pow(17.94, cos(b))) * tan(sin(exp(98.91))))), "l"
  assert {((h + f) <= h)}{0}, "l"
  assert true, "l"
  let l = b
  return c
}

let {j[k]} = {{{c}}}{0}{0}
let l = args
let m = a({[{}]}{0}, [exp(acos(tan(b)))], {{{}}{0}}{0})
