let {{a[b]}} = {{{args}}}{0}
let {c[d]} = {{a}}{0}
show [d]

show log(asin(pow(sin(to_float(474)), 17.66)))

assert (! true), "e"
let e[f] = args
let {{}} = {{{}}}{0}
let g = [log(log((- to_float(b))))]
let h[i] = [c]
fn j(k : int, l : bool, m : bool) : float {
  assert {{(! m)}}{0}{0}, "n"
  return exp((asin(to_float(527)) - 69.24))
  assert true, "n"
  return log(exp(to_float(i)))
  return asin(to_float(k))
}

fn k({  }, l : float[], m : int) : bool[] {
  let n = i
  let {o} = {{{16.97}}}{0}{0}
  let {p[q]} = {{{c}}{0}}{0}
  let r[s] = a
  return [false]
}

let {{{{}}}} = {{{{{}}}}}{0}
