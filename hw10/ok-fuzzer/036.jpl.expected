global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: db `b.png`, 0
const1: dq 103
const2: dq 30.42
const3: dq 48.01
const4: dq 9.72
const5: dq 485
const6: dq 3.21
const7: dq 39.99
const8: dq 69.41
const9: dq 480
const10: dq 64.37
const11: dq 830
const12: dq 597
const13: db `j`, 0
const14: dq 1
const15: dq 0
const16: db `f`, 0
const17: dq 72.76
const18: dq 2.09
const19: db `i`, 0
const20: db `g`, 0
const21: dq 34.73
const22: dq 50.09
const23: dq 24.2
const24: dq 60.72
const25: db `(FloatType)`, 0
section .text
c:
_c:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
mov rax, [rel const1]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const2]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rel const3]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 16
mov r10, [r12 - - 2]
mov [rsp + 8], r10
mov r10, [r12 - - 6]
mov [rsp + 0], r10
mov rax, [rel const4]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 32
pop rbp
ret
mov rax, [rel const5]
push rax
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 6]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - 6]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _atan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _cos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmpeqsd xmm0, xmm1
movq rax, xmm0
and rax, 1
push rax
sub rsp, 8
mov rax, [rel const6]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const7]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _atan
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
add rsp, 40
pop rbp
ret
d:
_d:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
mov rax, [rel const8]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov rax, [rel const9]
push rax
pop rdi
call _c
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const10]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 16
mov r10, [r12 - - 2]
mov [rsp + 8], r10
mov r10, [r12 - - 6]
mov [rsp + 0], r10
sub rsp, 16
mov r10, [r12 - - 2]
mov [rsp + 8], r10
mov r10, [r12 - - 6]
mov [rsp + 0], r10
mov rax, [rel const11]
push rax
mov rax, [rel const12]
push rax
pop rax
pop r10
cmp rax, r10
setg al
and rax, 1
push rax
pop rax
xor rax, 1
push rax
pop rax
xor rax, 1
push rax
pop rax
cmp rax, 0
jne .jump1
lea rdi, [rel const13]
call _fail_assertion
.jump1:
sub rsp, 8
mov r10, [rbp - 6]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
mov rax, [rbp - 8]
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 56
pop rbp
ret
e:
_e:
push rbp
mov rbp, rsp
sub rsp, 16
mov r10, [rbp - - 2]
mov [rsp + 8], r10
mov r10, [rbp - - 6]
mov [rsp + 0], r10
mov rax, [rel const14]
push rax
sub rsp, 16
mov r10, [rbp - 2]
mov [rsp + 8], r10
mov r10, [rbp - 6]
mov [rsp + 0], r10
mov rax, [rel const15]
push rax
pop rax
add rsp, 40
pop rbp
ret
f:
_f:
push rbp
mov rbp, rsp
sub rsp, 16
mov r10, [r12 - - 2]
mov [rsp + 8], r10
mov r10, [r12 - - 6]
mov [rsp + 0], r10
mov rax, [rel const17]
push rax
mov rax, [rel const18]
push rax
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _cos
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
sub rsp, 8
mov r10, [r12 - - 6]
mov [rsp + 0], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
pop rax
pop r10
cmp rax, r10
setg al
and rax, 1
push rax
pop rax
cmp rax, 0
jne .jump3
lea rdi, [rel const19]
call _fail_assertion
.jump3:
add rsp, 0
add rsp, 0
sub rsp, 16
mov r10, [r12 - - 2]
mov [rsp + 8], r10
mov r10, [r12 - - 6]
mov [rsp + 0], r10
mov rdi, 0
call _jpl_alloc
add rsp, 0
push rax
mov rax, 1
push rax
call _e
add rsp, 16
push rax
pop rax
add rsp, 32
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 16
mov r10, [rbp - - 2]
mov [rsp + 8], r10
mov r10, [rbp - - 6]
mov [rsp + 0], r10
sub rsp, 24
lea rdi, [rsp]
lea rsi, [rel const0]
call _read_image
add rsp, 0
add rsp, 0
call _get_time
sub rsp, 8
movsd [rsp], xmm0
add rsp, 0
sub rsp, 8
call _get_time
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp + 0]
subsd xmm0, xmm1
sub rsp, 8
call _print_time
add rsp, 8
mov rax, [rel const15]
push rax
pop rax
xor rax, 1
push rax
pop rax
cmp rax, 0
jne .jump2
sub rsp, 8
lea rdi, [rel const16]
call _fail_assertion
add rsp, 8
.jump2:
mov rax, [rel const15]
push rax
pop rax
xor rax, 1
push rax
pop rax
cmp rax, 0
jne .jump4
sub rsp, 8
lea rdi, [rel const20]
call _fail_assertion
add rsp, 8
.jump4:
sub rsp, 8
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const21]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
mov rax, [rel const22]
push rax
movsd xmm1, [rsp]
add rsp, 8
pxor xmm0, xmm0
subsd xmm0, xmm1
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _fmod
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _exp
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov rax, [rel const23]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov rax, [rel const24]
push rax
sub rsp, 8
mov r10, [rbp - 4]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _acos
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _fmod
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
lea rdi, [rel const25]
lea rsi, [rsp]
call _show
add rsp, 8
add rsp, 8
add rsp, 56
pop r12
pop rbp
ret
