let a[b] = {args}{0}
let c[d] = {{args}}{0}{0}
let e = (- {{d}}{0}{0})
let f = sqrt(to_float(e))
let g[h] = c
let i[j] = {args}{0}
let k = to_float(argnum)
let {} = {}
fn l(m : int) : bool {
  let n = argnum
  let {o[p]} = {{a}}{0}
  let {q} = {{{d}}{0}{0}}
  let {} = {{{}}}{0}{0}
  return {{true}}{0}{0}
}

let m = ({(to_float(h) + sqrt(f))}{0} != asin(to_float(argnum)))
let {} = {{{}}}{0}{0}
fn n(o[p] : int[], q : float[]) : int {
  let r[s] = [to_int(to_float(213))]
  let {{}} = {{}}
  let t[u] = o
  let {v} = {{{f}}{0}}{0}
  return s
}

