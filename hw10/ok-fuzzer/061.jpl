let {} = {}
read image "a.png" to a

type b = float
fn c(d : b, e[f] : {}[], g[h] : float[]) : {bool} {
  let i[j] = {{e}}{0}{0}
  let k = d
  let l = atan(pow({exp(k)}{0}, atan(d)))
  return {(! (argnum >= f))}
  return {(! true)}
}

let d = to_int(asin(atan(cos(to_float(438)))))
type e = b
fn f(g[h] : bool[], { {  } }, i[j] : float[]) : bool {
  return {c(exp(74.03), [{}], i)}{0}{0}
  let {k[l]} = {g}
  let m[n] = k
  let {} = {}
  return (n != ({h}{0} % (- j)))
}

type g = bool
read image "h.png" to h

let i[j] = args
fn k() : g {
  let l[m] = args
  let n = (- to_float((argnum + (- argnum))))
  let o = sin(atan(sin(sin(n))))
  let {{}} = {{}}
  return ((- d) >= to_int(o))
}

fn l() : {{}} {
  let m = sin(sin(({45.84}{0} % sin(acos(53.35)))))
  assert (f([f([k()], {{}}, [m])], {{{}}{0}}, [{13.57}{0}]) != true), "n"
  let n = i
  assert f([(! ((- 319) == (730 * d)))], {{{}}}{0}, {[cos(m)]}{0}), "o"
  return {{{}}}{0}
}

