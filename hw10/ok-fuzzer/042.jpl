let {} = {}
fn a({  }, { { b[c] : int[] } }) : {float} {
  let d = {sin(log(log(17.26)))}{0}
  return {exp(cos(sqrt(atan(63.69))))}
  let e[f] = {{b}}{0}{0}
  let g = false
  return {{{d}}{0}}{0}
}

type b = bool
time let {} = {}

type c = {}
fn d(e : c, f[g] : b[]) : b[] {
  let {h[i]} = {{args}{0}}
  let j = exp(log(36.23))
  let k[l] = [atan((acos(68.1) / exp(51.88)))]
  assert (exp(log(sin(sqrt(10.77)))) < 46.39), "m"
  return [((- sqrt(to_float(812))) != cos(log(pow(81.36, j))))]
}

type e = int
let f = args
let g = [args]
let h = to_int(log(asin(tan(asin(76.58)))))
time assert (argnum > 299), "i"

let i = d({}, {[false]}{0})
