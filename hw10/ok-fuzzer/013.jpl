fn a({ { b : float } }, c : {int}, d[e] : int[]) : int {
  let f[g] = args
  let h[i] = args
  assert {{false}}{0}{0}, "j"
  let j = log(b)
  return (- ((- e) % (- i)))
}

fn b(c[d] : bool[], { e[f] : {}[] }, { { { g[h] : bool[] } } }) : float {
  let i[j] = g
  let k = true
  let {} = {{{}}{0}}{0}
  return atan2(11.43, to_float((d + (- f))))
  return exp(to_float(j))
}

let c[d] = [(- 102)]
fn e({ {  } }) : int {
  return to_int(acos(atan2(cos(to_float(688)), log(exp(9.47)))))
  let {f[g]} = {{{args}}}{0}{0}
  let {} = {{}}{0}
  let h[i] = c
  return i
}

time let f = [acos(((- 5.3) / cos(45.11)))]

type g = int[]
let h[i] = c
fn j({ { k[l] : bool[] } }, m : bool) : g {
  let n = sin((acos(tan(cos(65.47))) / cos(to_float((l % i)))))
  let o = argnum
  let p = b(k, {{[{}]}}{0}, {{{[true]}}})
  let q = l
  return c
}

let {k} = {50}
fn l(m[n] : g[], o[p] : g, q[r] : g) : int {
  let s = (p != 743)
  let t[u] = c
  let {} = {{}}{0}
  let {} = {{{}}{0}}{0}
  return d
}

let m = k
let {} = {{}}{0}
