show cos(46.53)

let a = tan(log(log(atan2(to_float(761), cos(68.77)))))
fn b() : {} {
  assert true, "c"
  assert (pow(a, asin(exp(exp(a)))) != 41.93), "c"
  let c[d] = [args]
  let e = {atan(sin(log(24.24)))}{0}
  return {}
}

print "c"

fn c() : float {
  assert true, "d"
  let d[e] = [cos(44.73)]
  let f = to_int(tan(atan2(cos(to_float(961)), log(91.07))))
  let g = sin(pow({atan(93.28)}{0}, tan(log(tan(51.54)))))
  return (log(atan2(atan2(a, tan(a)), atan2(sin(g), (- 30.44)))) / exp(exp(to_float(782))))
}

fn d(e[f] : bool[], g[h] : float[]) : float[] {
  let i = sin(cos(19.34))
  let {} = {{{}}}{0}{0}
  let j[k] = {{g}}{0}{0}
  assert (! (! ({argnum}{0} >= 75))), "l"
  return j
}

fn e(f : bool, g : int) : int {
  assert false, "h"
  return g
  let {h[i]} = {d([{true}{0}], d([(g >= g)], [pow(c(), c())]))}
  assert (i >= 914), "j"
  return to_int(pow(atan(a), (- tan(atan2(c(), 14.41)))))
}

fn f(g : {}) : {bool} {
  let h = asin(a)
  assert {{true}}{0}{0}, "i"
  let {{}} = {{g}{0}}
  let i[j] = [44.85]
  return {{{false}}}{0}{0}
}

let g = pow((exp(cos(to_float(419))) / log(exp(asin(a)))), acos(c()))
fn h({ i : {float} }, {  }, { j : bool }) : int {
  let {k} = {i}{0}
  let l = f(b())
  assert j, "m"
  let {{}} = {{{b()}}{0}{0}}
  return 180
}

let {i[j]} = {{[(c() + a)]}}{0}
fn k({ {  } }, l[m] : {}[]) : bool {
  let n = c()
  let {} = {}
  let o[p] = [atan2(tan(cos(asin(g))), sqrt(atan(g)))]
  let q[r] = o
  return (r < (e(false, j) / to_int(atan2(exp(c()), a))))
}

