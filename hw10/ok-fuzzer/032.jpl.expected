global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: dq 15.26
const1: dq 3.48
const2: db `a`, 0
const3: dq 28.21
const4: dq 54.37
const5: dq 57.71
const6: dq 92.35
const7: db `f.png`, 0
const8: dq 1
const9: dq 19.71
const10: db `i`, 0
section .text
a:
_a:
push rbp
mov rbp, rsp
sub rsp, 16
mov r10, [r12 - - 2]
mov [rsp + 8], r10
mov r10, [r12 - - 6]
mov [rsp + 0], r10
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 16
mov r10, [rbp - - 2]
mov [rsp + 8], r10
mov r10, [rbp - - 6]
mov [rsp + 0], r10
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov rax, [rel const3]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const4]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _atan2
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _to_int
push rax
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
pop rax
pop r10
imul rax, r10
push rax
pop rax
add rsp, 32
pop rbp
ret
mov rax, [rel const5]
push rax
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
pop rax
add rsp, 40
pop rbp
ret
h:
_h:
push rbp
mov rbp, rsp
push rdi
sub rsp, 8
mov r10, [r12 - 8]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [r12 - - 6]
mov [rsp + 0], r10
pop rax
pop r10
cmp rax, r10
setne al
and rax, 1
push rax
mov rax, [rel const8]
push rax
pop rax
pop r10
cmp rax, r10
sete al
and rax, 1
push rax
add rsp, 0
sub rsp, 8
mov r10, [r12 - 6]
mov [rsp + 0], r10
sub rsp, 8
mov rax, [rel const9]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _log
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
call _a
add rsp, 16
add rsp, 8
push rax
sub rsp, 8
mov r10, [rbp - 4]
mov [rsp + 0], r10
movsd xmm0, [rsp]
add rsp, 8
call _acos
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rdi, 16
call _jpl_alloc
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 16
push rax
mov rax, 1
push rax
mov rdi, 16
call _jpl_alloc
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 16
push rax
mov rax, 1
push rax
mov rdi, 16
call _jpl_alloc
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 16
push rax
mov rax, 1
push rax
mov rax, [rbp - 8]
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 48
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 8
mov rax, [rel const0]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _sqrt
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
pop rdi
call _to_float
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov rax, [rel const1]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _exp
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _asin
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
call _pow
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
call _tan
sub rsp, 8
movsd [rsp], xmm0
movsd xmm0, [rsp]
add rsp, 8
movsd xmm1, [rsp]
add rsp, 8
cmpeqsd xmm0, xmm1
movq rax, xmm0
and rax, 1
push rax
pop rax
cmp rax, 0
jne .jump1
sub rsp, 8
lea rdi, [rel const2]
call _fail_assertion
add rsp, 8
.jump1:
sub rsp, 8
mov rax, [rel const6]
push rax
movsd xmm0, [rsp]
add rsp, 8
call _asin
sub rsp, 8
movsd [rsp], xmm0
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
call _a
add rsp, 16
push rax
pop rdi
call _to_float
add rsp, 8
sub rsp, 8
movsd [rsp], xmm0
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - - 6]
mov [rsp + 0], r10
pop rax
pop r10
imul rax, r10
push rax
pop rax
neg rax
push rax
mov rdi, 8
sub rsp, 8
call _jpl_alloc
add rsp, 8
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 8
push rax
mov rax, 1
push rax
mov rdi, 16
call _jpl_alloc
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 16
push rax
mov rax, 1
push rax
mov rdi, 16
call _jpl_alloc
mov r10, [rsp + 8]
mov [rax + 8], r10
mov r10, [rsp + 0]
mov [rax + 0], r10
add rsp, 16
push rax
mov rax, 1
push rax
sub rsp, 16
mov r10, [rbp - 6]
mov [rsp + 8], r10
mov r10, [rbp - 2]
mov [rsp + 0], r10
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
mov r10, [rsp - 8]
mov [rsp - 8], r10
mov r10, [rsp ]
mov [rsp ], r10
add rsp, 0
sub rsp, 24
lea rdi, [rsp]
sub rsp, 8
lea rsi, [rel const7]
call _read_image
add rsp, 8
lea rdi, [rel const10]
sub rsp, 8
call _print
add rsp, 8
add rsp, 64
pop r12
pop rbp
ret
