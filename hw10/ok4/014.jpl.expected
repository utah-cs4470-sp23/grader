global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float
section .data
const0: dq 6
const1: dq 5
const2: dq 4
const3: dq 3
const4: dq 2
const5: dq 1
const6: db `(IntType)`, 0
section .text
f:
_f:
push rbp
mov rbp, rsp
push rdi
push rsi
push rdx
push rcx
push r8
push r9
sub rsp, 8
mov r10, [rbp - 8]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp ]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - 2]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - 4]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - 6]
mov [rsp + 0], r10
sub rsp, 8
mov r10, [rbp - 8]
mov [rsp + 0], r10
pop rax
pop r10
add rax, r10
push rax
pop rax
pop r10
add rax, r10
push rax
pop rax
pop r10
add rax, r10
push rax
pop rax
pop r10
add rax, r10
push rax
pop rax
pop r10
add rax, r10
push rax
pop rax
add rsp, 48
pop rbp
ret
jpl_main:
_jpl_main:
push rbp
mov rbp, rsp
push r12
mov r12, rbp
sub rsp, 8
mov rax, [rel const0]
push rax
mov rax, [rel const1]
push rax
mov rax, [rel const2]
push rax
mov rax, [rel const3]
push rax
mov rax, [rel const4]
push rax
mov rax, [rel const5]
push rax
pop rdi
pop rsi
pop rdx
pop rcx
pop r8
pop r9
call _f
add rsp, 8
push rax
lea rdi, [rel const6]
lea rsi, [rsp]
call _show
add rsp, 8
pop r12
pop rbp
ret
