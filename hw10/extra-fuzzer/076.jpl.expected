global jpl_main
global _jpl_main
extern _fail_assertion
extern _jpl_alloc
extern _get_time
extern _show
extern _print
extern _print_time
extern _read_image
extern _write_image
extern _fmod
extern _sqrt
extern _exp
extern _sin
extern _cos
extern _tan
extern _asin
extern _acos
extern _atan
extern _log
extern _pow
extern _atan2
extern _to_int
extern _to_float

section .data
const0: db `a.png`, 0
const1: dq 81.67
const2: db `j.png`, 0
const3: db `k.png`, 0
const4: dq 480
const5: db `p.png`, 0
const6: db `t.png`, 0

section .text
jpl_main:
_jpl_main:
	push rbp
	mov rbp, rsp
	push r12
	mov r12, rbp
	sub rsp, 24
	lea rdi, [rsp]
	lea rsi, [rel const0] ; a.png
	call _read_image
	sub rsp, 24
	; Moving 24 bytes from rbp - 32 to rsp
		mov r10, [rbp - 32 + 16]
		mov [rsp + 16], r10
		mov r10, [rbp - 32 + 8]
		mov [rsp + 8], r10
		mov r10, [rbp - 32 + 0]
		mov [rsp + 0], r10
	sub rsp, 8 ; Align stack
	mov rax, [rel const1] ; 81.67
	push rax
	movsd xmm0, [rsp]
	add rsp, 8
	call _acos
	sub rsp, 8
	movsd [rsp], xmm0
	movsd xmm0, [rsp]
	add rsp, 8
	call _tan
	sub rsp, 8
	movsd [rsp], xmm0
	movsd xmm0, [rsp]
	add rsp, 8
	call _log
	sub rsp, 8
	movsd [rsp], xmm0
	movsd xmm0, [rsp]
	add rsp, 8
	call _atan
	sub rsp, 8
	movsd [rsp], xmm0
	movsd xmm0, [rsp]
	add rsp, 8
	call _cos
	add rsp, 8 ; Remove alignment
	sub rsp, 8
	movsd [rsp], xmm0
	sub rsp, 24
	; Moving 24 bytes from rbp - 56 to rsp
		mov r10, [rbp - 56 + 16]
		mov [rsp + 16], r10
		mov r10, [rbp - 56 + 8]
		mov [rsp + 8], r10
		mov r10, [rbp - 56 + 0]
		mov [rsp + 0], r10
	sub rsp, 24
	lea rdi, [rsp]
	lea rsi, [rel const2] ; j.png
	call _read_image
	sub rsp, 24
	lea rdi, [rsp]
	sub rsp, 8 ; Align stack
	lea rsi, [rel const3] ; k.png
	call _read_image
	add rsp, 8 ; Remove alignment
	sub rsp, 8
	; Moving 8 bytes from rbp - 32 to rsp
		mov r10, [rbp - 32 + 0]
		mov [rsp + 0], r10
	mov rax, [rel const4] ; 480
	push rax
	mov rdi, 16
	sub rsp, 8 ; Align stack
	call _jpl_alloc
	add rsp, 8 ; Remove alignment
	; Moving 16 bytes from rsp to rax
		mov r10, [rsp + 8]
		mov [rax + 8], r10
		mov r10, [rsp + 0]
		mov [rax + 0], r10
	add rsp, 16
	push rax
	mov rax, 2
	push rax
	sub rsp, 24
	lea rdi, [rsp]
	lea rsi, [rel const5] ; p.png
	call _read_image
	sub rsp, 24
	; Moving 24 bytes from rbp - 176 to rsp
		mov r10, [rbp - 176 + 16]
		mov [rsp + 16], r10
		mov r10, [rbp - 176 + 8]
		mov [rsp + 8], r10
		mov r10, [rbp - 176 + 0]
		mov [rsp + 0], r10
	sub rsp, 24
	lea rdi, [rsp]
	lea rsi, [rel const6] ; t.png
	call _read_image
	sub rsp, 24
	; Moving 24 bytes from rbp - 224 to rsp
		mov r10, [rbp - 224 + 16]
		mov [rsp + 16], r10
		mov r10, [rbp - 224 + 8]
		mov [rsp + 8], r10
		mov r10, [rbp - 224 + 0]
		mov [rsp + 0], r10
	add rsp, 240 ; Local variables
	pop r12
	pop rbp
	ret

